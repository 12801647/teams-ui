{"version":3,"sources":["img/icon.png","services/firebase.js","helpers/auth.js","Components/Navbar.js","Components/Pages/Login.js","Components/Pages/Chat.js","helpers/db.js","Components/Presentational/TaskColumn/TaskColumn.js","Components/Presentational/NewTaskColumn/NewTaskColumn.js","Components/Pages/Taskboard.js","Components/Pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","signup","email","password","userName","createUserWithEmailAndPassword","then","a","user","currentUser","sendEmailVerification","ref","uid","set","name","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","logout","signOut","Navbar","id","className","src","Icon","alt","to","this","props","authenticated","onClick","Component","Login","state","error","loginError","signupError","forgotpwError","newpass","username","showForgot","handleChange","bind","handleSignIn","handleSignUp","handleForgotPass","handleUpdatePass","googleSignIn","githubSignIn","onLogin","onRegister","onForgot","event","setState","target","value","preventDefault","message","newPassword","currentuser","updatePassword","emailAddress","sendPasswordResetEmail","console","log","document","getElementById","classList","remove","setTimeout","add","style","height","autoComplete","onSubmit","TextField","required","label","onChange","InputProps","type","padding","icon","faGithub","size","faGoogle","display","textAlign","Chat","chats","users","Map","content","readError","writeError","loadingChats","handleSubmit","on","snapshot","forEach","snap","push","val","sort","b","timestamp","key","off","Date","now","d","getDate","getMonth","getFullYear","getHours","getMinutes","placeholder","faSearch","aria-hidden","role","map","chat","formatTime","has","undefined","get","onKeyDown","_handleKeyDown","faPaperPlane","createTaskColumn","createdTimestamp","TaskColumn","column","tasks","handleDeleteColumn","update","deletedTimestamp","alert","Typography","variant","component","faTimes","task","index","Card","CardContent","color","gutterBottom","NewTaskColumn","React","useState","isEditing","setIsEditing","setName","handleCancelEditing","e","Button","faPlus","exampleTasks","description","createdDate","Taskboard","columns","setColumns","setReadError","useEffect","tmpCols","col","err","Profile","once","data-v-d223ba98","focusable","data-prefix","data-icon","xmlns","viewBox","fontSize","fill","borderBottom","width","PublicRoute","rest","render","PrivateRoute","pathname","from","location","App","loading","onAuthStateChanged","basename","process","path","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,qaCU3CC,IAASC,cANM,CACbC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,wCAKR,IAAMC,EAAOL,IAASK,KAChBC,EAAKN,IAASO,W,iDCVpB,SAASC,EAAOC,EAAOC,EAAUC,GACtC,OAAON,IACJO,+BAA+BH,EAAOC,GACtCG,KAFI,cAAAC,EAAA,MAEC,4BAAAA,EAAA,6DACEC,EAAOV,IAAOW,aACfC,wBAFD,SAIEX,EAAGY,IAAI,SAAWH,EAAKI,KAAKC,IAAI,CACpCC,KAAMV,EACNF,MAAOM,EAAKN,QANV,4CAWH,SAASa,EAAOb,EAAOC,GAC5B,OAAOL,IAAOkB,2BAA2Bd,EAAOC,GAgB3C,SAASc,IACd,IAAMC,EAAW,IAAIpB,EAAKqB,mBAC1B,OAAOrB,IACJsB,gBAAgBF,GAChBZ,KAFI,cAAAC,EAAA,MAEC,4BAAAA,EAAA,6DACEC,EAAOV,IAAOW,YADhB,SAEEV,EAAGY,IAAI,SAAWH,EAAKI,KAAKC,IAAI,CACpCX,MAAOM,EAAKN,QAHV,4CAQH,SAASmB,IACd,IAAMH,EAAW,IAAIpB,EAAKwB,mBAC1B,OAAOxB,IACJsB,gBAAgBF,GAChBZ,KAFI,cAAAC,EAAA,MAEC,4BAAAA,EAAA,6DACEC,EAAOV,IAAOW,YADhB,SAEEV,EAAGY,IAAI,SAAWH,EAAKI,KAAKC,IAAI,CACpCX,MAAOM,EAAKN,QAHV,4CAQH,SAASqB,IACd,OAAOzB,IAAO0B,U,ICNDC,E,uKA1CX,OACE,yBAAKC,GAAG,UACN,yBAAKC,UAAU,OACb,yBAAKC,IAAKC,IAAMC,IAAI,gBACpB,0CAGF,yBAAKH,UAAU,SACb,4BACE,4BACE,kBAAC,IAAD,CAAMI,GAAG,SAAT,SAEAC,KAAKC,MAAMC,cAKX,GAJA,4BACE,kBAAC,IAAD,CAAMH,GAAG,UAAT,UAKHC,KAAKC,MAAMC,cACV,4BACE,kBAAC,IAAD,CAAMH,GAAG,YAAT,YAGF,GAEDC,KAAKC,MAAMC,cACV,4BACE,kBAAC,IAAD,CAAMH,GAAG,SAASI,QAASZ,GAA3B,YAKF,U,GAtCOa,a,yCCwRNC,G,wDA5Qb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAO,KACPC,WAAY,KACZC,YAAa,KACbC,cAAe,KACfxC,MAAO,GACPC,SAAU,GACVwC,QAAS,GACTC,SAAU,GACVC,YAAY,GAEd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBACxB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBACpB,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBACpB,EAAKO,QAAU,EAAKA,QAAQP,KAAb,gBACf,EAAKQ,WAAa,EAAKA,WAAWR,KAAhB,gBAClB,EAAKS,SAAW,EAAKA,SAAST,KAAd,gBAtBJ,E,yDAyBDU,GACXzB,KAAK0B,SAAL,eACGD,EAAME,OAAO7C,KAAO2C,EAAME,OAAOC,U,4EAInBH,G,wEACjBA,EAAMI,iBACN7B,KAAK0B,SAAS,CAAElB,WAAY,K,kBAEpBzB,EAAOiB,KAAKM,MAAMpC,MAAO8B,KAAKM,MAAMnC,U,uDAE1C6B,KAAK0B,SAAS,CAAElB,WAAY,KAAMsB,U,gMAIfL,G,wEACrBA,EAAMI,iBACN7B,KAAK0B,SAAS,CAAEhB,cAAe,K,kBAEvB3B,EAAOiB,KAAKM,MAAMpC,MAAO8B,KAAKM,MAAMnC,UAAUG,KAA9C,sBACJ,sBAAAC,EAAA,sEF3CmBwD,EE4CA/B,KAAKM,MAAMK,QF3C7B7C,IAAOkE,cAAcC,eAAeF,GE0CrC,iCF3CD,IAAoBA,IE2CnB,a,uDAKF/B,KAAK0B,SAAS,CAAEhB,cAAe,KAAMoB,U,gMAIlBL,G,wEACrBA,EAAMI,iBACN7B,KAAK0B,SAAS,CAAEhB,cAAe,K,kBFlDRwB,EEoDJlC,KAAKM,MAAMpC,MFnDzBJ,IACJqE,uBAAuBD,GACvB5D,MAAK,WAEJ8D,QAAQC,IAAI,iB,uDEiDZrC,KAAK0B,SAAS,CAAEhB,cAAe,KAAMoB,U,kCFtDpC,IAAoBI,I,uJE0DNT,G,wEACjBA,EAAMI,iBACN7B,KAAK0B,SAAS,CAAEjB,YAAa,K,kBAErBxC,EAAO+B,KAAKM,MAAMpC,MAAO8B,KAAKM,MAAMnC,SAAU6B,KAAKM,MAAMM,U,uDAE/DZ,KAAK0B,SAAS,CAAEjB,YAAa,KAAMqB,U,wRAM7B7C,I,sDAENe,KAAK0B,SAAS,CAAElB,WAAY,KAAMsB,U,sRAM5BzC,I,sDAENW,KAAK0B,SAAS,CAAElB,WAAY,KAAMsB,U,8IAI3B,IAAD,OACRQ,SAASC,eAAe,aAAaC,UAAUC,OAAO,sBACtDC,YAAW,WACT,EAAKhB,SAAS,CAAEb,YAAY,MAC3B,O,mCAIHyB,SAASC,eAAe,aAAaC,UAAUG,IAAI,sBACnD3C,KAAK0B,SAAS,CAAEb,YAAY,M,iCAI5ByB,SAASC,eAAe,aAAaC,UAAUG,IAAI,sBACnD3C,KAAK0B,SAAS,CAAEb,YAAY,M,+BAI5B,OACE,yBAAKnB,GAAG,SACN,yBAAKC,UAAU,OACf,yBAAKD,GAAG,YAAYC,UAAU,mBAC1BK,KAAKM,MAAMO,WAmDX,yBAAKlB,UAAU,2CACb,0BACEiD,MAAO,CAAEC,OAAQ,QACjBC,aAAa,MACbC,SAAU/C,KAAKkB,kBAEf,+CACA,yBAAKvB,UAAU,cACb,kBAACqD,EAAA,EAAD,CACEC,UAAQ,EACRvD,GAAG,oBACHwD,MAAM,QACNpE,KAAK,QACLqE,SAAUnD,KAAKc,aACfsC,WAAY,CAAExB,MAAO5B,KAAKM,MAAMpC,SAEjC8B,KAAKM,MAAMI,cACV,uBAAGf,UAAU,eAAeK,KAAKM,MAAMI,eACrC,KACJ,4BACE2C,KAAK,SACLT,MAAO,CAAEU,QAAS,GAClB3D,UAAU,SAHZ,qBArEN,yBAAKA,UAAU,oCACb,uCACA,yBAAKA,UAAU,cACb,0BAAMmD,aAAa,MAAMC,SAAU/C,KAAKiB,cACtC,kBAAC+B,EAAA,EAAD,CACEtD,GAAG,WACHwD,MAAM,WACNpE,KAAK,WACLqE,SAAUnD,KAAKc,aACfsC,WAAY,CAAExB,MAAO5B,KAAKM,MAAMM,YAElC,kBAACoC,EAAA,EAAD,CACEC,UAAQ,EACRvD,GAAG,oBACHwD,MAAM,QACNpE,KAAK,QACLqE,SAAUnD,KAAKc,aACfsC,WAAY,CAAExB,MAAO5B,KAAKM,MAAMpC,SAElC,kBAAC8E,EAAA,EAAD,CACEC,UAAQ,EACRvD,GAAG,oBACHwD,MAAM,WACNG,KAAK,WACLvE,KAAK,WACLqE,SAAUnD,KAAKc,aACfsC,WAAY,CAAExB,MAAO5B,KAAKM,MAAMnC,YAEjC6B,KAAKM,MAAMG,YACV,uBAAGd,UAAU,eAAeK,KAAKM,MAAMG,aACrC,KACJ,4BAAQ4C,KAAK,SAAS1D,UAAU,SAAhC,cAKJ,yBAAKA,UAAU,SACb,kBAAC,IAAD,CACE4D,KAAMC,IACNC,KAAK,KACLtD,QAASH,KAAKqB,eAEhB,kBAAC,IAAD,CACEkC,KAAMG,IACND,KAAK,KACLtD,QAASH,KAAKoB,iBAoCtB,yBAAKzB,UAAU,oCACb,0BAAMmD,aAAa,MAAMC,SAAU/C,KAAKgB,cACtC,uCACA,yBAAKrB,UAAU,cACb,kBAACqD,EAAA,EAAD,CACEtD,GAAG,oBACHwD,MAAM,QACNpE,KAAK,QACLqE,SAAUnD,KAAKc,aACfsC,WAAY,CAAExB,MAAO5B,KAAKM,MAAMpC,SAElC,kBAAC8E,EAAA,EAAD,CACEtD,GAAG,oBACHwD,MAAM,WACNG,KAAK,WACLvE,KAAK,WACLqE,SAAUnD,KAAKc,aACfsC,WAAY,CAAExB,MAAO5B,KAAKM,MAAMnC,YAElC,0BACEyE,MAAO,CAAEe,QAAS,QAASC,UAAW,QACtCzD,QAASH,KAAKwB,UAFhB,oBAMCxB,KAAKM,MAAME,WACV,uBAAGb,UAAU,eAAeK,KAAKM,MAAME,YACrC,KACJ,4BAAQ6C,KAAK,SAAS1D,UAAU,SAAhC,SAGA,yBAAKA,UAAU,SACb,kBAAC,IAAD,CACE4D,KAAMC,IACNC,KAAK,KACLtD,QAASH,KAAKqB,eAEhB,kBAAC,IAAD,CACEkC,KAAMG,IACND,KAAK,KACLtD,QAASH,KAAKoB,mBAOxB,yBAAKzB,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,8BACb,4BACGK,KAAKM,MAAMO,WACR,qBACA,4BAEN,4BAAQV,QAASH,KAAKsB,QAAS3B,UAAU,SAAzC,YAIF,yBAAKA,UAAU,+BACb,sDACA,4BAAQQ,QAASH,KAAKuB,WAAY5B,UAAU,SAA5C,oB,GAjQIS,c,QCiPLyD,G,wDAxPb,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACX9B,KAAMV,IAAOW,YACbqF,MAAO,GACPC,MAAO,IAAIC,IACXC,QAAS,GACTC,UAAW,KACXC,WAAY,KACZC,cAAc,GAEhB,EAAKtD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKsD,aAAe,EAAKA,aAAatD,KAAlB,gBAZH,E,qLAiBjBf,KAAK0B,SAAS,CAAEwC,UAAW,KAAME,cAAc,IAE/C,IACErG,EAAGY,IAAI,SAAS2F,GAAG,SAAS,SAACC,GAC3B,IAAIT,EAAQ,GACZS,EAASC,SAAQ,SAACC,GAChBX,EAAMY,KAAKD,EAAKE,UAElBb,EAAMc,MAAK,SAAUrG,EAAGsG,GACtB,OAAOtG,EAAEuG,UAAYD,EAAEC,aAEzB,EAAKpD,SAAS,CAAEoC,UAEhB,EAAKpC,SAAS,CAAE0C,cAAc,OAEhC,MAAO7D,GACPP,KAAK0B,SAAS,CAAEwC,UAAW3D,EAAMuB,QAASsC,cAAc,IAE1D,IACErG,EAAGY,IAAI,SAAS2F,GAAG,SAAS,SAACC,GAC3B,IAAIR,EAAQ,IAAIC,IAChBO,EAASC,SAAQ,SAACC,GAChBV,EAAMlF,IAAI4F,EAAKM,IAAKN,EAAKE,UAG3B,EAAKjD,SAAS,CAAEqC,aAElB,MAAOxD,GACPP,KAAK0B,SAAS,CAAEwC,UAAW3D,EAAMuB,U,6PAIjC/D,EAAGY,IAAI,SAASqG,IAAI,SACpBjH,EAAGY,IAAI,SAASqG,IAAI,S,oIAGXvD,GACXzB,KAAK0B,SAAS,CACZuC,QAASxC,EAAME,OAAOC,U,4EAIPH,G,wEACjBA,EAAMI,iBACN7B,KAAK0B,SAAS,CAAEyC,WAAY,O,kBAGpBpG,EAAGY,IAAI,SAAS+F,KAAK,CACzBT,QAASjE,KAAKM,MAAM2D,QACpBa,UAAWG,KAAKC,MAChBtG,IAAKoB,KAAKM,MAAM9B,KAAKI,M,OAEvBoB,KAAK0B,SAAS,CAAEuC,QAAS,K,gDAGzBjE,KAAK0B,SAAS,CAAEyC,WAAY,KAAMrC,U,iJAI3BgD,GACT,IAAMK,EAAI,IAAIF,KAAKH,GAInB,MAHU,UAAMK,EAAEC,UAAR,YACRD,EAAEE,WAAa,EADP,YAENF,EAAEG,cAFI,YAEaH,EAAEI,WAFf,YAE6BJ,EAAEK,gB,+BAIjC,IAAD,OACP,OACE,yBAAK9F,GAAG,OAAOC,UAAU,IACvB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,kBACb,uCAEF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,2BACE0D,KAAK,OACL1D,UAAU,aACV8F,YAAY,WAEd,0BAAM9F,UAAU,qBACd,4BAAQ0D,KAAK,UACV,IACD,kBAAC,IAAD,CACEE,KAAMmC,IACNC,cAAY,SACX,SAMb,yBAAKhG,UAAU,cACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YACZ,IACD,yBACEC,IAAI,mDACJE,IAAI,aACH,KAEL,yBAAKH,UAAU,WACb,uCACU,0BAAMA,UAAU,aAAhB,WAEV,4DAIN,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YACZ,IACD,yBACEC,IAAI,mDACJE,IAAI,aACH,KAEL,yBAAKH,UAAU,WACb,uCACU,0BAAMA,UAAU,aAAhB,WAEV,+DAMV,yBAAKA,UAAU,SAGZK,KAAKM,MAAM8D,aACV,yBAAKzE,UAAU,8BAA8BiG,KAAK,UAChD,0BAAMjG,UAAU,WAAhB,eAGF,GAGF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WAGb,4BAAQA,UAAU,aAAlB,YAEF,yBAAKA,UAAU,WACZK,KAAKM,MAAMwD,MAAM+B,KAAI,SAACC,GACrB,OACE,yBACEf,IAAKe,EAAKhB,UACVnF,UACE,EAAKW,MAAM9B,KAAKI,MAAQkH,EAAKlH,IACzB,eACA,gBAGL,EAAK0B,MAAM9B,KAAKI,MAAQkH,EAAKlH,IAC5B,GAEA,yBAAKe,UAAU,oBACZ,IACD,yBACEC,IAAI,mDACJE,IAAI,UACH,KAGN,EAAKQ,MAAM9B,KAAKI,MAAQkH,EAAKlH,IAC5B,yBAAKe,UAAU,YACb,2BAAImG,EAAK7B,SACT,0BAAMtE,UAAU,aACb,EAAKoG,WAAWD,EAAKhB,aAI1B,yBAAKnF,UAAU,gBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,eACZ,EAAKW,MAAMyD,MAAMiC,IAAIF,EAAKlH,UAEvBqH,IADA,EAAK3F,MAAMyD,MAAMmC,IAAIJ,EAAKlH,KAAKE,KAE7B,EAAKwB,MAAMyD,MAAMmC,IAAIJ,EAAKlH,KAAKV,MAC/B,EAAKoC,MAAMyD,MAAMmC,IAAIJ,EAAKlH,KAAKE,KACjC,aAEN,2BAAIgH,EAAK7B,SACT,0BAAMtE,UAAU,aACb,EAAKoG,WAAWD,EAAKhB,mBAUtC,0BACEqB,UAAWnG,KAAKoG,eAChBrD,SAAU/C,KAAKqE,aACf1E,UAAU,YAEV,8BACE0D,KAAK,OACLoC,YAAY,iBACZ9F,UAAU,yBACVb,KAAK,UACLqE,SAAUnD,KAAKc,aACfc,MAAO5B,KAAKM,MAAM2D,UAEnBjE,KAAKM,MAAMC,MACV,uBAAGZ,UAAU,eAAeK,KAAKM,MAAMC,OACrC,KACJ,4BAAQZ,UAAU,eAAe0D,KAAK,UACpC,kBAAC,IAAD,CAAiBE,KAAM8C,IAAcV,cAAY,oB,GA7OlDvF,c,yDCiBZ,SAASkG,EAAiBxH,GAC/B,OAAOf,EAAGY,IAAI,WAAW+F,KAAK,CAC5B5F,OACAyH,iBAAkBtB,KAAKC,QCtB3B,IA0CesB,EA1CI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACtBC,EAAkB,uCAAG,sBAAApI,EAAA,+EDyBImB,ECvBJ+G,EAAO/G,GDwB3B3B,EAAGY,IAAH,kBAAkBe,IAAMkH,OAAO,CACpCC,iBAAkB5B,KAAKC,QC3BE,sDAIvB4B,MAAM,0CAAD,OAA2C,KAAIhF,UAJ7B,iCDyBtB,IAA0BpC,ICzBJ,oBAAH,qDAOxB,OACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,iBACb,kBAACoH,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAChCR,EAAO3H,MAEV,kBAAC,IAAD,CACEqB,QAASwG,EACTpD,KAAM2D,IACNzD,KAAK,QAGT,yBAAK9D,UAAU,aACb,4BACG+G,EAAMb,KAAI,SAACsB,EAAMC,GAChB,OAEE,wBAAIrC,IAAKqC,GACP,kBAACC,EAAA,EAAD,CAAML,QAAQ,YACZ,kBAACM,EAAA,EAAD,KACE,kBAACP,EAAA,EAAD,CAAYQ,MAAM,cAAcC,cAAY,GACzCL,EAAKrI,gB,iBC2Bb2I,EAxDO,WAAO,IAAD,EACQC,IAAMC,UAAS,GADvB,mBACnBC,EADmB,KACRC,EADQ,OAEFH,IAAMC,SAAS,IAFb,mBAEnB7I,EAFmB,KAEbgJ,EAFa,KAYpBC,EAAsB,WAC1BF,GAAa,GACbC,EAAQ,KAGJzD,EAAY,uCAAG,WAAO2D,GAAP,SAAAzJ,EAAA,6DACnByJ,EAAEnG,iBADiB,kBAGXyE,EAAiBxH,GAHN,OAIjBiJ,IAJiB,gDAMjBjB,MAAM,gDAAD,OAAiD,KAAIhF,UANzC,yDAAH,sDASlB,OACE,yBAAKpC,GAAG,6BACN,0BAAMqD,SAAUsB,GACbuD,EACC,yBAAKlI,GAAG,uBACN,2BACEyD,SAxBa,SAAC6E,GACxBF,EAAQE,EAAErG,OAAOC,QAwBPA,MAAO9C,EACP2G,YAAY,uBAEd,yBAAK/F,GAAG,iBACN,kBAACuI,EAAA,EAAD,CAAQ5E,KAAK,UAAb,YACA,kBAAC4E,EAAA,EAAD,CAAQ9H,QAAS4H,GACf,kBAAC,IAAD,CAAiBxE,KAAM2D,IAASzD,KAAK,UAK3C,yBAAK/D,GAAG,cACN,4BAAQS,QAzCS,WACzB0H,GAAcD,KAyCJ,kBAAC,IAAD,CAAiBrE,KAAM2E,IAAQzE,KAAK,OACpC,kBAACsD,EAAA,EAAD,CAAYE,UAAU,KAAtB,yBC7BRkB,EAAe,CACnB,CACErJ,KAAM,gCACNsJ,YACE,oFACFC,YAAapD,KAAKC,OAEpB,CACEpG,KAAM,eACNsJ,YAAa,oDACbC,YAAapD,KAAKC,MAAQ,MAgDfoD,EA5CG,WAAO,IAAD,EACQZ,IAAMC,SAAS,IADvB,mBACfY,EADe,KACNC,EADM,OAEYd,IAAMC,UAAS,GAF3B,mBAEfzD,EAFe,KAEJuE,EAFI,KA2BtB,OAxBAC,qBAAU,WACR,IACkB3K,EAAGY,IAAI,WACf2F,GAAG,SAAS,SAACC,GACnB,IAAMoE,EAAU,GAChBpE,EAASC,SAAQ,SAACoE,GAChB,IAAMjE,EAAMiE,EAAIjE,MACZA,EAAIkC,kBACR8B,EAAQjE,KAAR,aACEhF,GAAIkJ,EAAI7D,KACLJ,OAGP6D,EAAWG,GACXF,GAAa,MAEf,MAAOI,GACPJ,GAAa,GACb3B,MAAM,0CAAD,OAA2C+B,EAAI/G,UAEtD,OAAO,kBAAM/D,EAAGY,IAAI,WAAWqG,IAAI,YAClC,IAEH5C,QAAQC,IAAI,gBAAiB6B,GAE3B,yBAAKxE,GAAG,uBACN,yBAAKC,UAAU,oBACb,gDAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aACZ4I,EAAQ1C,KAAI,SAACY,GACZ,OAAO,kBAAC,EAAD,CAAYA,OAAQA,EAAQC,MAAOyB,OAE5C,kBAAC,EAAD,UCwFKW,G,wDA7Jb,WAAY7I,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACX9B,KAAMV,IAAOW,YACbP,MAAO,KACP0C,SAAU,KACVsD,UAAW,KACXC,WAAY,MAPG,E,gEAaE,IAAD,OAClBnE,KAAK0B,SAAS,CAAEwC,UAAW,OAE3B,IACEnG,EAAGY,IAAH,gBAAgBqB,KAAKM,MAAM9B,KAAKI,MAAOmK,KAAK,SAAS,SAACxE,GACpD,EAAK7C,SAAS,CACZxD,MAAOqG,EAASI,MAAMzG,MACtB0C,SAAU2D,EAASI,MAAM7F,KAAOyF,EAASI,MAAM7F,KAAO,UAG1D,MAAOyB,GACPP,KAAK0B,SAAS,CAAEwC,UAAW3D,EAAMuB,a,+BAKnC,OACE,yBAAKpC,GAAG,WACN,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,aAAf,KACA,uCACW,IACe,MAAvBK,KAAKM,MAAMM,SACRZ,KAAKM,MAAMM,SACXZ,KAAKM,MAAMpC,OAEjB,4FACA,yBAAKyB,UAAU,QACb,yBAAKA,UAAU,iBAAf,WACA,yBAAKA,UAAU,QACb,qCACA,yBAAKA,UAAU,WACb,wEAEF,yBAAKA,UAAU,QAAf,IAEE,yBAAKA,UAAU,SACb,yBACEqJ,kBAAgB,GAChBrD,cAAY,OACZsD,UAAU,QACVC,cAAY,MACZC,YAAU,SACVvD,KAAK,MACLwD,MAAM,6BACNC,QAAQ,cACR1J,UAAU,mCACViD,MAAO,CAAE0G,SAAU,SAEnB,0BACEN,kBAAgB,GAChBO,KAAK,eACLpE,EAAE,yVACFxF,UAAU,SAMpB,yBAAKA,UAAU,QACb,qCACA,yBAAKA,UAAU,WAAWK,KAAKM,MAAMpC,OACrC,yBAAKyB,UAAU,SACb,yBACEqJ,kBAAgB,GAChBrD,cAAY,OACZsD,UAAU,QACVC,cAAY,MACZC,YAAU,MACVvD,KAAK,MACLwD,MAAM,6BACNC,QAAQ,cACR1J,UAAU,iCAEV,0BACEqJ,kBAAgB,GAChBO,KAAK,eACLpE,EAAE,uPACFxF,UAAU,QAKlB,yBAAKA,UAAU,QACb,wCACA,yBAAKA,UAAU,WACW,MAAvBK,KAAKM,MAAMM,SACRZ,KAAKM,MAAMM,SACXZ,KAAKM,MAAMpC,OAEjB,yBAAKyB,UAAU,SACb,yBACEqJ,kBAAgB,GAChBrD,cAAY,OACZsD,UAAU,QACVC,cAAY,MACZC,YAAU,MACVvD,KAAK,MACLwD,MAAM,6BACNC,QAAQ,cACR1J,UAAU,iCAEV,0BACEqJ,kBAAgB,GAChBO,KAAK,eACLpE,EAAE,uPACFxF,UAAU,QAKlB,yBAAKA,UAAU,OAAOiD,MAAO,CAAE4G,aAAc,SAC3C,wCACA,yBAAK7J,UAAU,UAAU0D,KAAK,YAA9B,gBAGA,yBAAK1D,UAAU,SACb,yBACEiD,MAAO,CAAE6G,MAAO,OAAQH,SAAU,OAAQzG,OAAQ,QAClDmG,kBAAgB,GAChBrD,cAAY,OACZsD,UAAU,QACVC,cAAY,MACZC,YAAU,cACVvD,KAAK,MACLwD,MAAM,6BACNC,QAAQ,cACR1J,UAAU,yCAEV,0BACEqJ,kBAAgB,GAChBO,KAAK,eACLpE,EAAE,gQACFxF,UAAU,e,GAnJRS,c,MCatB,SAASsJ,EAAT,GAAwE,IAAtCtJ,EAAqC,EAAhD6G,UAAsB/G,EAA0B,EAA1BA,cAAkByJ,EAAQ,6CACrE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAC3J,GAAD,OACY,IAAlBC,EACE,kBAACE,EAAcH,GAEf,kBAAC,IAAD,CAAUF,GAAG,cAOvB,SAAS8J,EAAT,GAAyE,IAAtCzJ,EAAqC,EAAhD6G,UAAsB/G,EAA0B,EAA1BA,cAAkByJ,EAAQ,6CACtE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAC3J,GAAD,OACY,IAAlBC,EACE,kBAACE,EAAcH,GAEf,kBAAC,IAAD,CACEF,GAAI,CAAE+J,SAAU,SAAUxJ,MAAO,CAAEyJ,KAAM9J,EAAM+J,iB,IAsE5CC,E,kDA7Db,aAAe,IAAD,8BACZ,gBACK3J,MAAQ,CACXJ,eAAe,EACfgK,SAAS,GAJC,E,gEAQO,IAAD,OAClBpM,IAAOqM,oBAAmB,SAAC3L,GACrBA,EACF,EAAKkD,SAAS,CACZxB,eAAe,EACfgK,SAAS,IAGX,EAAKxI,SAAS,CACZxB,eAAe,EACfgK,SAAS,S,+BAOf,OAA8B,IAAvBlK,KAAKM,MAAM4J,QAChB,yBAAKvK,UAAU,8BAA8BiG,KAAK,UAChD,0BAAMjG,UAAU,WAAhB,eAGF,yBAAKA,UAAU,OACb,kBAAC,IAAD,CAAQyK,SAAUC,aAChB,kBAAC,EAAD,CAAQnK,cAAeF,KAAKM,MAAMJ,gBAClC,kBAAC,IAAD,KACE,kBAAC2J,EAAD,CACES,KAAK,QACLpK,cAAeF,KAAKM,MAAMJ,cAC1B+G,UAAWpD,IAEb,kBAAC6F,EAAD,CACEY,KAAK,SACLpK,cAAeF,KAAKM,MAAMJ,cAC1B+G,UAAW5G,IAEb,kBAACwJ,EAAD,CACES,KAAK,WACLpK,cAAeF,KAAKM,MAAMJ,cAC1B+G,UAAW6B,IAEb,kBAACe,EAAD,CACES,KAAK,aACLpK,cAAeF,KAAKM,MAAMJ,cAC1B+G,UAAWqB,W,GArDPlI,aCvCEmK,QACW,cAA7BC,OAAOR,SAASS,UAEe,UAA7BD,OAAOR,SAASS,UAEhBD,OAAOR,SAASS,SAASC,MACvB,2DCXNC,IAASf,OACP,kBAAC,IAAMgB,WAAP,KACE,kBAAC,EAAD,OAEFtI,SAASC,eAAe,SDwHpB,kBAAmBsI,WACrBA,UAAUC,cAAcC,MACrBzM,MAAK,SAAA0M,GACJA,EAAaC,gBAEdC,OAAM,SAAA3K,GACL6B,QAAQ7B,MAAMA,EAAMuB,c","file":"static/js/main.612c3646.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.b5d56f8d.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyADjSvD59x-xPFvLQOlfBJQ0HyPrh9O_Hc\",\n  authDomain: \"ses2b-group2.firebaseapp.com\",\n  databaseURL: \"https://ses2b-group2.firebaseio.com\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n","import { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\";\n\nexport function signup(email, password, userName) {\n  return auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(async function () {\n      const user = auth().currentUser;\n      user.sendEmailVerification();\n\n      await db.ref(\"users/\" + user.uid).set({\n        name: userName,\n        email: user.email,\n      });\n    });\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function updatepass(newPassword) {\n  return auth().currentuser().updatePassword(newPassword);\n}\n\nexport function forgotpass(emailAddress) {\n  return auth()\n    .sendPasswordResetEmail(emailAddress)\n    .then(function () {\n      // Email sent.\n      console.log(\"Email Sent\");\n    });\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).set({\n        email: user.email,\n      });\n    });\n}\n\nexport function signInWithGitHub() {\n  const provider = new auth.GithubAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).set({\n        email: user.email,\n      });\n    });\n}\n\nexport function logout() {\n  return auth().signOut();\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\nimport Icon from \"../img/icon.png\";\nimport { logout } from \"../helpers/auth\";\n\nclass Navbar extends Component {\n  render() {\n    // console.log(window.location.pathname === \"/teams-ui/chat\")\n    // if (window.location.pathname === \"/teams-ui/login\"\n    //   || window.location.pathname === \"/teams-ui\") {\n    return (\n      <div id=\"navbar\">\n        <div className=\"nav\">\n          <img src={Icon} alt=\"Chat Bubble\"></img>\n          <div>Chat App</div>\n        </div>\n\n        <div className=\"links\">\n          <ul>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            {!this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\" onClick={logout}>\n                  SignOut\n                </Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Login.scss\";\n\nimport {\n  signin,\n  signup,\n  signInWithGoogle,\n  signInWithGitHub,\n  forgotpass,\n  updatepass,\n} from \"../../helpers/auth\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      loginError: null,\n      signupError: null,\n      forgotpwError: null,\n      email: \"\",\n      password: \"\",\n      newpass: \"\",\n      username: \"\",\n      showForgot: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleForgotPass = this.handleForgotPass.bind(this);\n    this.handleUpdatePass = this.handleUpdatePass.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n    this.githubSignIn = this.githubSignIn.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n    this.onForgot = this.onForgot.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSignIn(event) {\n    event.preventDefault();\n    this.setState({ loginError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async handleUpdatePass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password).then(\n        async function () {\n          await updatepass(this.state.newpass);\n        }\n      );\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleForgotPass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await forgotpass(this.state.email);\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleSignUp(event) {\n    event.preventDefault();\n    this.setState({ signupError: \"\" });\n    try {\n      await signup(this.state.email, this.state.password, this.state.username);\n    } catch (error) {\n      this.setState({ signupError: error.message });\n    }\n  }\n\n  async googleSignIn() {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async githubSignIn() {\n    try {\n      await signInWithGitHub();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  onLogin() {\n    document.getElementById(\"container\").classList.remove(\"right-panel-active\");\n    setTimeout(() => {\n      this.setState({ showForgot: false });\n    }, 500);\n  }\n\n  onRegister() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: false });\n  }\n\n  onForgot() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: true });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"bg\" />\n        <div id=\"container\" className=\"login-container\">\n          {!this.state.showForgot ? (\n            <div className=\"form-container sign-up-container\">\n              <h1>Sign Up</h1>\n              <div className=\"input-wrap\">\n                <form autoComplete=\"off\" onSubmit={this.handleSignUp}>\n                  <TextField\n                    id=\"standard\"\n                    label=\"Username\"\n                    name=\"username\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.username }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.password }}\n                  />\n                  {this.state.signupError ? (\n                    <p className=\"text-danger\">{this.state.signupError}</p>\n                  ) : null}\n                  <button type=\"submit\" className=\"ghost\">\n                    Register\n                  </button>\n                </form>\n              </div>\n              <div className=\"icons\">\n                <FontAwesomeIcon\n                  icon={faGithub}\n                  size=\"2x\"\n                  onClick={this.githubSignIn}\n                />\n                <FontAwesomeIcon\n                  icon={faGoogle}\n                  size=\"2x\"\n                  onClick={this.googleSignIn}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"form-container sign-up-container forgot\">\n              <form\n                style={{ height: \"auto\" }}\n                autoComplete=\"off\"\n                onSubmit={this.handleForgotPass}\n              >\n                <h1>Forgot Password</h1>\n                <div className=\"input-wrap\">\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  {this.state.forgotpwError ? (\n                    <p className=\"text-danger\">{this.state.forgotpwError}</p>\n                  ) : null}\n                  <button\n                    type=\"submit\"\n                    style={{ padding: 0 }}\n                    className=\"ghost\"\n                  >\n                    Reset Password\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          <div className=\"form-container sign-in-container\">\n            <form autoComplete=\"off\" onSubmit={this.handleSignIn}>\n              <h1>Sign In</h1>\n              <div className=\"input-wrap\">\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.email }}\n                />\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.password }}\n                />\n                <span\n                  style={{ display: \"block\", textAlign: \"left\" }}\n                  onClick={this.onForgot}\n                >\n                  Forgot Password?\n                </span>\n                {this.state.loginError ? (\n                  <p className=\"text-danger\">{this.state.loginError}</p>\n                ) : null}\n                <button type=\"submit\" className=\"ghost\">\n                  Login\n                </button>\n                <div className=\"icons\">\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    size=\"2x\"\n                    onClick={this.githubSignIn}\n                  />\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    size=\"2x\"\n                    onClick={this.googleSignIn}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>\n                  {this.state.showForgot\n                    ? \"Remember password?\"\n                    : \"Already have an account?\"}\n                </h1>\n                <button onClick={this.onLogin} className=\"ghost\">\n                  Sign In\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Don't have an account?</h1>\n                <button onClick={this.onRegister} className=\"ghost\">\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { db } from \"../../services/firebase\";\nimport { auth } from \"../../services/firebase\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./Chat.scss\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      users: new Map(),\n      content: \"\",\n      readError: null,\n      writeError: null,\n      loadingChats: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //this.myRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ readError: null, loadingChats: true });\n    //const chatArea = this.myRef.current;\n    try {\n      db.ref(\"chats\").on(\"value\", (snapshot) => {\n        let chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n        chats.sort(function (a, b) {\n          return a.timestamp - b.timestamp;\n        });\n        this.setState({ chats });\n        //chatArea.scrollBy(0, chatArea.scrollHeight);\n        this.setState({ loadingChats: false });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message, loadingChats: false });\n    }\n    try {\n      db.ref(\"users\").on(\"value\", (snapshot) => {\n        let users = new Map();\n        snapshot.forEach((snap) => {\n          users.set(snap.key, snap.val());\n        });\n\n        this.setState({ users });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n  async componentWillUnmount() {\n      db.ref(\"users\").off('value');\n      db.ref(\"chats\").off('value');\n  }\n\n  handleChange(event) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ writeError: null });\n    //const chatArea = this.myRef.current;\n    try {\n      await db.ref(\"chats\").push({\n        content: this.state.content,\n        timestamp: Date.now(),\n        uid: this.state.user.uid,\n      });\n      this.setState({ content: \"\" });\n      //chatArea.scrollBy(0, chatArea.scrollHeight);\n    } catch (error) {\n      this.setState({ writeError: error.message });\n    }\n  }\n\n  formatTime(timestamp) {\n    const d = new Date(timestamp);\n    const time = `${d.getDate()}/${\n      d.getMonth() + 1\n    }/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n    return time;\n  }\n\n  render() {\n    return (\n      <div id=\"chat\" className=\"\">\n        <div className=\"messaging\">\n          <div className=\"inbox_msg\">\n            <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                <div className=\"recent_heading\">\n                  <h4>Recent</h4>\n                </div>\n                <div className=\"srch_bar\">\n                  <div className=\"stylish-input-group\">\n                    <input\n                      type=\"text\"\n                      className=\"search-bar\"\n                      placeholder=\"Search\"\n                    />\n                    <span className=\"input-group-addon\">\n                      <button type=\"button\">\n                        {\" \"}\n                        <FontAwesomeIcon\n                          icon={faSearch}\n                          aria-hidden=\"true\"\n                        />{\" \"}\n                      </button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"inbox_chat\">\n                <div className=\"chat_list active_chat\">\n                  <div className=\"chat_people\">\n                    <div className=\"chat_img\">\n                      {\" \"}\n                      <img\n                        src=\"https://ptetutorials.com/images/user-profile.png\"\n                        alt=\"group-no\"\n                      />{\" \"}\n                    </div>\n                    <div className=\"chat_ib\">\n                      <h5>\n                        Group 1 <span className=\"chat_date\">Dec 25</span>\n                      </h5>\n                      <p>Description / Last Message</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"chat_list\">\n                  <div className=\"chat_people\">\n                    <div className=\"chat_img\">\n                      {\" \"}\n                      <img\n                        src=\"https://ptetutorials.com/images/user-profile.png\"\n                        alt=\"group-no\"\n                      />{\" \"}\n                    </div>\n                    <div className=\"chat_ib\">\n                      <h5>\n                        Group 2 <span className=\"chat_date\">Dec 25</span>\n                      </h5>\n                      <p>Description / Last Message </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"mesgs\">\n              {/*ref={this.myRef}*/}\n              {/* loading indicator */}\n              {this.state.loadingChats ? (\n                <div className=\"spinner-border text-success\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {/* chat area */}\n              <div className=\"msg_history\">\n                <div className=\"msg-top\">\n                  {/* Logged in as:{\" \"}\n                  <strong className=\"text-info\">{this.state.user.email}</strong> */}\n                  <strong className=\"text-info\">Group 1</strong>\n                </div>\n                <div className=\"msg-mid\">\n                  {this.state.chats.map((chat) => {\n                    return (\n                      <div\n                        key={chat.timestamp}\n                        className={\n                          this.state.user.uid === chat.uid\n                            ? \"outgoing_msg\"\n                            : \"incoming_msg\"\n                        }\n                      >\n                        {this.state.user.uid === chat.uid ? (\n                          \"\"\n                        ) : (\n                          <div className=\"incoming_msg_img\">\n                            {\" \"}\n                            <img\n                              src=\"https://ptetutorials.com/images/user-profile.png\"\n                              alt=\"sunil\"\n                            />{\" \"}\n                          </div>\n                        )}\n                        {this.state.user.uid === chat.uid ? (\n                          <div className=\"sent_msg\">\n                            <p>{chat.content}</p>\n                            <span className=\"time_date\">\n                              {this.formatTime(chat.timestamp)}\n                            </span>\n                          </div>\n                        ) : (\n                          <div className=\"received_msg\">\n                            <div className=\"received_withd_msg\">\n                              <div className=\"name-header\">\n                                {this.state.users.has(chat.uid)\n                                  ? this.state.users.get(chat.uid).name ===\n                                    undefined\n                                    ? this.state.users.get(chat.uid).email\n                                    : this.state.users.get(chat.uid).name\n                                  : \"Anonymous\"}\n                              </div>\n                              <p>{chat.content}</p>\n                              <span className=\"time_date\">\n                                {this.formatTime(chat.timestamp)}\n                              </span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <form\n                  onKeyDown={this._handleKeyDown}\n                  onSubmit={this.handleSubmit}\n                  className=\"type_msg\"\n                >\n                  <textarea\n                    type=\"text\"\n                    placeholder=\"Type a message\"\n                    className=\"form-control write_msg\"\n                    name=\"content\"\n                    onChange={this.handleChange}\n                    value={this.state.content}\n                  ></textarea>\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button className=\"msg_send_btn\" type=\"submit\">\n                    <FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" />\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import { db } from \"../services/firebase\";\n\nexport function readChats() {\n  let abc = [];\n  db.ref(\"chats\").on(\"value\", (snapshot) => {\n    snapshot.forEach((snap) => {\n      abc.push(snap.val());\n    });\n    return abc;\n  });\n}\n\nexport function writeChats(message) {\n  return db.ref(\"chats\").push({\n    content: message.content,\n    timestamp: message.timestamp,\n    uid: message.uid,\n  });\n}\n\n/**\n * Create a new column in the database.\n * The return value is void in all cases.\n * @param {string} name - The name of the column\n */\n// TODO: This will also need to push into groups.<group-id>.taskboards when that exists\nexport function createTaskColumn(name) {\n  return db.ref(\"columns\").push({\n    name,\n    createdTimestamp: Date.now(),\n  });\n}\n\nexport function deleteTaskColumn(id) {\n  return db.ref(`columns/${id}`).update({\n    deletedTimestamp: Date.now(),\n  });\n}\n","import React from \"react\";\nimport \"./TaskColumn.scss\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { deleteTaskColumn } from \"../../../helpers/db\";\n\nconst TaskColumn = ({ column, tasks }) => {\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteTaskColumn(column.id);\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`); // TODO: Dont use alerts for error messages..\n    }\n  };\n  return (\n    <div className=\"task-column-container\">\n      <div className=\"header-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          {column.name}\n        </Typography>\n        <FontAwesomeIcon\n          onClick={handleDeleteColumn}\n          icon={faTimes}\n          size=\"1x\"\n        />\n      </div>\n      <div className=\"task-list\">\n        <ul>\n          {tasks.map((task, index) => {\n            return (\n              // TODO: Dont use index as key, use task id when we have it..\n              <li key={index}>\n                <Card variant=\"outlined\">\n                  <CardContent>\n                    <Typography color=\"textPrimary\" gutterBottom>\n                      {task.name}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskColumn;\n","import React from \"react\";\nimport \"./NewTaskColumn.scss\";\nimport { faTimes, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { createTaskColumn } from \"../../../helpers/db\";\n\nconst NewTaskColumn = () => {\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const handleSetIsEditing = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleCancelEditing = () => {\n    setIsEditing(false);\n    setName(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await createTaskColumn(name);\n      handleCancelEditing();\n    } catch (err) {\n      alert(`An error occurred when creating a new column ${err.message}`);\n    }\n  };\n  return (\n    <div id=\"new-task-column-container\">\n      <form onSubmit={handleSubmit}>\n        {isEditing ? (\n          <div id=\"add-column-selected\">\n            <input\n              onChange={handleNameChange}\n              value={name}\n              placeholder=\"Enter list name...\"\n            />\n            <div id=\"button-lockup\">\n              <Button type=\"submit\">Add List</Button>\n              <Button onClick={handleCancelEditing}>\n                <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div id=\"add-column\">\n            <button onClick={handleSetIsEditing}>\n              <FontAwesomeIcon icon={faPlus} size=\"1x\" />\n              <Typography component=\"p\">Add another list</Typography>\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default NewTaskColumn;\n","import React, { useEffect } from \"react\";\nimport \"./Taskboard.scss\";\nimport TaskColumn from \"../Presentational/TaskColumn/TaskColumn\";\nimport NewTaskColumn from \"../Presentational/NewTaskColumn/NewTaskColumn\";\nimport { db } from \"../../services/firebase\";\n\n/*\ntaskboard:\n  Name: string\n  Description: string\n  createdDate: Date\n  createdBy: string // userId\n  Columns: string[]\n  deletedDate: Date | null\ncolumn:\n  Name: string\n  Tasks: string[]\ntasks:\n  name: string\n  description: string\n  createdDate: Date\n  assignees: string[] // User IDs\n*/\n\n// These are just example tasks, we should be reading these from the database...\nconst exampleTasks = [\n  {\n    name: \"Assign a leader to a subgroup\",\n    description:\n      \"We will need to assign a leader to the frontend subgroup and the backend subgroup\",\n    createdDate: Date.now(),\n  },\n  {\n    name: \"Create tasks\",\n    description: \"Users should be able to create tasks on their own\",\n    createdDate: Date.now() - 300000,\n  },\n];\n\nconst Taskboard = () => {\n  const [columns, setColumns] = React.useState([]);\n  const [readError, setReadError] = React.useState(false); // TODO: use this\n  useEffect(() => {\n    try {\n      const columns = db.ref(\"columns\");\n      columns.on(\"value\", (snapshot) => {\n        const tmpCols = [];\n        snapshot.forEach((col) => {\n          const val = col.val();\n          if (val.deletedTimestamp) return; // Don't display deleted columns\n          tmpCols.push({\n            id: col.key,\n            ...val,\n          });\n        });\n        setColumns(tmpCols);\n        setReadError(false);\n      });\n    } catch (err) {\n      setReadError(true);\n      alert(`An error occurred when reading data... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(\"columns\").off(\"value\");\n  }, []);\n\n  console.log(\"Readerror is \", readError); // Just keeping this here until we look at using readError\n  return (\n    <div id=\"taskboard-container\">\n      <div className=\"taskboard-navbar\">\n        <p>Board Title Here</p>\n      </div>\n      <div className=\"taskboard-canvas\">\n        <div className=\"taskboard\">\n          {columns.map((column) => {\n            return <TaskColumn column={column} tasks={exampleTasks} />;\n          })}\n          <NewTaskColumn />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Taskboard;\n","import React, { Component } from \"react\";\nimport \"./Profile.scss\";\n\nimport { db } from \"../../services/firebase\";\nimport { auth } from \"../../services/firebase\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      email: null,\n      username: null,\n      readError: null,\n      writeError: null,\n    };\n    //this.handleChange = this.handleChange.bind(this);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ readError: null });\n\n    try {\n      db.ref(`users/${this.state.user.uid}`).once(\"value\", (snapshot) => {\n        this.setState({\n          email: snapshot.val().email,\n          username: snapshot.val().name ? snapshot.val().name : null,\n        });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"profile\">\n        <div className=\"content-wrap\">\n          <div className=\"name-icon\">D</div>\n          <h1>\n            Welcome,{\" \"}\n            {this.state.username != null\n              ? this.state.username\n              : this.state.email}\n          </h1>\n          <h2>Manage your information to make Chat App work better for you</h2>\n          <div className=\"card\">\n            <div className=\"inner-heading\">Profile</div>\n            <div className=\"info\">\n              <h3>PHOTO</h3>\n              <div className=\"content\">\n                <h4>Add a photo to personalise your account</h4>\n              </div>\n              <div className=\"icon\">\n                D\n                <div className=\"photo\">\n                  <svg\n                    data-v-d223ba98=\"\"\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"camera\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    className=\"svg-inline--fa fa-camera fa-w-16\"\n                    style={{ fontSize: \"17px\" }}\n                  >\n                    <path\n                      data-v-d223ba98=\"\"\n                      fill=\"currentColor\"\n                      d=\"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"\n                      className=\"\"\n                    ></path>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>EMAIL</h3>\n              <div className=\"content\">{this.state.email}</div>\n              <div className=\"popup\">\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>USERNAME</h3>\n              <div className=\"content\">\n                {this.state.username != null\n                  ? this.state.username\n                  : this.state.email}\n              </div>\n              <div className=\"popup\">\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\" style={{ borderBottom: \"none\" }}>\n              <h3>PASSWORD</h3>\n              <div className=\"content\" type=\"password\">\n                ************\n              </div>\n              <div className=\"popup\">\n                <svg\n                  style={{ width: \"20px\", fontSize: \"20px\", height: \"20px\" }}\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"arrow-right\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 448 512\"\n                  className=\"svg-inline--fa fa-arrow-right fa-w-14\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { auth } from \"./services/firebase\";\n\nimport Navbar from \"./Components/Navbar\";\n// import Home from \"./Components/Pages/Home\";\n// import Register from \"./Components/Pages/Register\";\nimport Login from \"./Components/Pages/Login\";\nimport Chat from \"./Components/Pages/Chat\";\nimport Taskboard from \"./Components/Pages/Taskboard\";\nimport Profile from \"./Components/Pages/Profile\";\nimport \"./App.scss\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Navbar authenticated={this.state.authenticated} />\n          <Switch>\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            />\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            />\n            <PrivateRoute\n              path=\"/profile\"\n              authenticated={this.state.authenticated}\n              component={Profile}\n            />\n            <PrivateRoute\n              path=\"/taskboard\"\n              authenticated={this.state.authenticated}\n              component={Taskboard}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './variables.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}