{"version":3,"sources":["services/firebase.js","helpers/auth.js","Components/Navbar.js","Components/Pages/Login.js","helpers/db.js","services/sha1.js","Components/Participant-Components/Participants-custom-hooks.js","Components/Participant-Components/AddParticipant.js","Components/Participant-Components/ParticipantListItem.js","Components/Participant-Components/ParticipantList.js","Components/Pages/Modal.js","Components/Pages/Chat.js","Components/Presentational/TaskDescription/TaskDescription.js","Components/Presentational/NewTaskComment/NewTaskComment.js","Components/Presentational/TaskActivity/TaskActivity.js","Components/Presentational/TaskDetails/TaskDetails.js","Components/Presentational/Modal/Modal.js","Components/Presentational/TaskColumn/TaskColumn.js","Components/Presentational/NewTaskColumn/NewTaskColumn.js","helpers/utils.js","Components/Pages/Taskboard.js","Components/Pages/Profile.js","App.js","serviceWorker.js","index.js","img/icon.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","signup","email","password","userName","createUserWithEmailAndPassword","then","a","user","currentUser","sendEmailVerification","ref","uid","set","name","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","logout","signOut","Navbar","id","className","src","Icon","alt","to","this","props","authenticated","onClick","Component","Login","state","error","loginError","signupError","forgotpwError","newpass","username","showForgot","handleChange","bind","handleSignIn","handleSignUp","handleForgotPass","handleUpdatePass","googleSignIn","githubSignIn","onLogin","onRegister","onForgot","event","setState","target","value","preventDefault","message","newPassword","currentuser","updatePassword","emailAddress","sendPasswordResetEmail","console","log","document","getElementById","classList","remove","setTimeout","add","style","height","autoComplete","onSubmit","TextField","required","label","onChange","InputProps","type","padding","icon","faGithub","size","faGoogle","display","textAlign","createTaskboard","userId","push","description","createdBy","createdTimestamp","Date","now","createTaskColumn","boardId","deleteTaskColumn","update","deletedTimestamp","createTask","columnId","task","updateTask","taskId","updatedFields","createComment","comment","deleteComment","commentId","getUserById","once","Sha1","msg","options","opt","Object","assign","msgFormat","outFormat","str","TextEncoder","encode","reduce","prev","curr","String","fromCharCode","e","unescape","encodeURIComponent","utf8Encode","hexStr","replace","match","map","byte","parseInt","join","hexBytesToString","K","H","l","length","N","Math","ceil","M","Array","i","j","charCodeAt","pow","floor","W","t","ROTL","b","c","d","s","T","f","h","toString","slice","separator","x","y","z","n","useInputValue","initialValue","useState","inputValue","setInputValue","changeInput","clearInput","keyInput","callback","which","keyCode","useParticipants","participants","addParticipants","text","regist","setParticipants","concat","checked","registered","userExists","userID","checkParticipants","idx","participant","index","removeParticipants","filter","AddParticipant","memo","Paper","margin","Grid","container","xs","md","item","paddingRight","placeholder","onInputChange","onKeyPress","onInputKeyPress","fullWidth","Button","variant","onButtonClick","ParticipantListItem","shortenedString","substring","ListItem","divider","Checkbox","onCheckBoxToggle","disableRipple","color","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","ParticipantList","items","List","overflow","key","onItemRemove","onItemCheck","AddGroupParticipant","clearInputAndAddParticipant","_","userEx","users","k","v","AddGroupLeader","useStyles","makeStyles","theme","modal","alignItems","justifyContent","paper","position","width","minWidth","backgroundColor","palette","background","borderRadius","boxShadow","maxHeight","AnimatedModal","classes","React","open","setOpen","savingGroup","setSavingGroup","saveError","setSaveError","groupName","setGroupName","groupDesc","setGroupDesc","leaders","setLeaders","handleClose","Fab","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","borderBottom","marginTop","inputProps","fontSize","marginBottom","role","marginLeft","marginRight","flexDirection","groupID","SHA1","hash","groups","has","displayName","get","undefined","groupAccess","fontWeight","border","borderColor","autoFocus","Chat","handleCreateTaskboard","taskboardResult","getKey","history","chats","boards","Map","content","readError","writeError","loadingChats","handleSubmit","on","snapshot","forEach","snap","val","sort","timestamp","board","boardVal","off","getDate","getMonth","getFullYear","getHours","getMinutes","faSearch","aria-hidden","FormControl","taskboardList","Select","labelId","displayEmpty","MenuItem","disabled","Typography","faPlus","chat","formatTime","onKeyDown","_handleKeyDown","faPaperPlane","withRouter","withStyles","TaskDescription","taskDetails","newDescription","setNewDescription","isEditing","setIsEditing","submitNewDescription","stopEditing","component","rows","faTimes","NewTaskComment","setText","submitComment","lastUpdatedTimestamp","TaskActivity","comments","setComments","usernameMap","setUsernameMap","useEffect","tmpComments","unshift","tmpUsernameMap","Promise","all","err","alert","handleDeleteComment","moment","utc","fromNow","TaskDetails","close","newTaskName","setNewTaskName","isEditingTaskName","setIsEditingTaskName","submitNewTaskName","onBlur","Modal","closeModal","children","handleKeyDown","window","addEventListener","removeEventListener","TaskColumn","column","tasks","setTasks","newTask","setNewTask","selectedTaskId","setSelectedTaskId","tmpTasks","col","handleDeleteColumn","handleCreateTask","createdTimeStamp","handleCloseModal","from","values","Card","CardContent","gutterBottom","NewTaskColumn","setName","handleCancelEditing","isEmptyObj","obj","keys","Taskboard","taskboardData","setTaskboardData","isBoardLoaded","setIsBoardLoaded","columns","setColumns","setReadError","setUser","URLSearchParams","location","search","result","Error","getTaskboardData","tmpCols","Profile","data-v-d223ba98","focusable","data-prefix","data-icon","xmlns","viewBox","fill","PublicRoute","rest","render","PrivateRoute","pathname","App","loading","onAuthStateChanged","basename","process","path","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.b54213ba.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyADjSvD59x-xPFvLQOlfBJQ0HyPrh9O_Hc\",\n  authDomain: \"ses2b-group2.firebaseapp.com\",\n  databaseURL: \"https://ses2b-group2.firebaseio.com\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n","import { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\";\n\nexport function signup(email, password, userName) {\n  return auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(async function () {\n      const user = auth().currentUser;\n      user.sendEmailVerification();\n\n      await db.ref(\"users/\" + user.uid).set({\n        name: userName,\n        email: user.email,\n      });\n    });\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function updatepass(newPassword) {\n  return auth().currentuser().updatePassword(newPassword);\n}\n\nexport function forgotpass(emailAddress) {\n  return auth()\n    .sendPasswordResetEmail(emailAddress)\n    .then(function () {\n      // Email sent.\n      console.log(\"Email Sent\");\n    });\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).set({\n        email: user.email,\n      });\n    });\n}\n\nexport function signInWithGitHub() {\n  const provider = new auth.GithubAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).set({\n        email: user.email,\n      });\n    });\n}\n\nexport function logout() {\n  return auth().signOut();\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\nimport Icon from \"../img/icon.png\";\nimport { logout } from \"../helpers/auth\";\n\nclass Navbar extends Component {\n  render() {\n    // console.log(window.location.pathname === \"/teams-ui/chat\")\n    // if (window.location.pathname === \"/teams-ui/login\"\n    //   || window.location.pathname === \"/teams-ui\") {\n    return (\n      <div id=\"navbar\">\n        <div className=\"nav\">\n          <img src={Icon} alt=\"Chat Bubble\"></img>\n          <div>Chat App</div>\n        </div>\n\n        <div className=\"links\">\n          <ul>\n            <li>\n              <Link to=\"/chat\">Groups</Link>\n            </li>\n            {!this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\" onClick={logout}>\n                  SignOut\n                </Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Login.scss\";\n\nimport {\n  signin,\n  signup,\n  signInWithGoogle,\n  signInWithGitHub,\n  forgotpass,\n  updatepass,\n} from \"../../helpers/auth\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      loginError: null,\n      signupError: null,\n      forgotpwError: null,\n      email: \"\",\n      password: \"\",\n      newpass: \"\",\n      username: \"\",\n      showForgot: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleForgotPass = this.handleForgotPass.bind(this);\n    this.handleUpdatePass = this.handleUpdatePass.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n    this.githubSignIn = this.githubSignIn.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n    this.onForgot = this.onForgot.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSignIn(event) {\n    event.preventDefault();\n    this.setState({ loginError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async handleUpdatePass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password).then(\n        async function () {\n          await updatepass(this.state.newpass);\n        }\n      );\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleForgotPass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await forgotpass(this.state.email);\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleSignUp(event) {\n    event.preventDefault();\n    this.setState({ signupError: \"\" });\n    try {\n      await signup(this.state.email, this.state.password, this.state.username);\n    } catch (error) {\n      this.setState({ signupError: error.message });\n    }\n  }\n\n  async googleSignIn() {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async githubSignIn() {\n    try {\n      await signInWithGitHub();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  onLogin() {\n    document.getElementById(\"container\").classList.remove(\"right-panel-active\");\n    setTimeout(() => {\n      this.setState({ showForgot: false });\n    }, 500);\n  }\n\n  onRegister() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: false });\n  }\n\n  onForgot() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: true });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"bg\" />\n        <div id=\"container\" className=\"login-container\">\n          {!this.state.showForgot ? (\n            <div className=\"form-container sign-up-container\">\n              <h1>Sign Up</h1>\n              <div className=\"input-wrap\">\n                <form autoComplete=\"off\" onSubmit={this.handleSignUp}>\n                  <TextField\n                    id=\"standard\"\n                    label=\"Username\"\n                    name=\"username\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.username }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.password }}\n                  />\n                  {this.state.signupError ? (\n                    <p className=\"text-danger\">{this.state.signupError}</p>\n                  ) : null}\n                  <button type=\"submit\" className=\"ghost\">\n                    Register\n                  </button>\n                </form>\n              </div>\n              <div className=\"icons\">\n                <FontAwesomeIcon\n                  icon={faGithub}\n                  size=\"2x\"\n                  onClick={this.githubSignIn}\n                />\n                <FontAwesomeIcon\n                  icon={faGoogle}\n                  size=\"2x\"\n                  onClick={this.googleSignIn}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"form-container sign-up-container forgot\">\n              <form\n                style={{ height: \"auto\" }}\n                autoComplete=\"off\"\n                onSubmit={this.handleForgotPass}\n              >\n                <h1>Forgot Password</h1>\n                <div className=\"input-wrap\">\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  {this.state.forgotpwError ? (\n                    <p className=\"text-danger\">{this.state.forgotpwError}</p>\n                  ) : null}\n                  <button\n                    type=\"submit\"\n                    style={{ padding: 0 }}\n                    className=\"ghost\"\n                  >\n                    Reset Password\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          <div className=\"form-container sign-in-container\">\n            <form autoComplete=\"off\" onSubmit={this.handleSignIn}>\n              <h1>Sign In</h1>\n              <div className=\"input-wrap\">\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.email }}\n                />\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.password }}\n                />\n                <span\n                  style={{ display: \"block\", textAlign: \"left\" }}\n                  onClick={this.onForgot}\n                >\n                  Forgot Password?\n                </span>\n                {this.state.loginError ? (\n                  <p className=\"text-danger\">{this.state.loginError}</p>\n                ) : null}\n                <button type=\"submit\" className=\"ghost\">\n                  Login\n                </button>\n                <div className=\"icons\">\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    size=\"2x\"\n                    onClick={this.githubSignIn}\n                  />\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    size=\"2x\"\n                    onClick={this.googleSignIn}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>\n                  {this.state.showForgot\n                    ? \"Remember password?\"\n                    : \"Already have an account?\"}\n                </h1>\n                <button onClick={this.onLogin} className=\"ghost\">\n                  Sign In\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Don't have an account?</h1>\n                <button onClick={this.onRegister} className=\"ghost\">\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import { db } from \"../services/firebase\";\n\nexport function readChats() {\n  let abc = [];\n  db.ref(\"chats\").on(\"value\", (snapshot) => {\n    snapshot.forEach((snap) => {\n      abc.push(snap.val());\n    });\n    return abc;\n  });\n}\n\nexport function writeChats(message) {\n  return db.ref(\"chats\").push({\n    content: message.content,\n    timestamp: message.timestamp,\n    uid: message.uid,\n  });\n}\n\nexport async function createTaskboard(userId) {\n  return db.ref(\"taskboards\").push({\n    name: \"New Taskboard\",\n    description: \"This is a new taskboard\",\n    createdBy: userId,\n    createdTimestamp: Date.now(),\n  });\n}\n\n/**\n * Create a new column in the database.\n * The return value is void in all cases.\n * @param {string} columnsKey - The unique key that all columns are created under\n * @param {string} name - The name of the column\n */\nexport function createTaskColumn(boardId, name) {\n  return db.ref(`columns/${boardId}`).push({\n    name,\n    createdTimestamp: Date.now(),\n  });\n}\n\nexport function deleteTaskColumn(boardId, id) {\n  return db.ref(`columns/${boardId}/${id}`).update({\n    deletedTimestamp: Date.now(),\n  });\n}\n\nexport function createTask(columnId, task) {\n  return db.ref(`tasks/${columnId}`).push(task);\n}\n\nexport function updateTask(columnId, taskId, updatedFields) {\n  return db.ref(`tasks/${columnId}/${taskId}`).update(updatedFields);\n}\n\nexport function createComment(taskId, comment) {\n  return db.ref(`taskComments/${taskId}`).push(comment);\n}\n\nexport function deleteComment(taskId, commentId) {\n  return db.ref(`taskComments/${taskId}/${commentId}`).remove();\n}\n\nexport async function getUserById(userId) {\n  return db.ref(`users/${userId}`).once(\"value\");\n}\n","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n/* SHA-1 (FIPS 180-4) implementation in JavaScript                    (c) Chris Veness 2002-2019  */\n/*                                                                                   MIT Licence  */\n/* www.movable-type.co.uk/scripts/sha1.html                                                       */\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n/**\n * SHA-1 hash function reference implementation.\n *\n * This is an annotated direct implementation of FIPS 180-4, without any optimisations. It is\n * intended to aid understanding of the algorithm rather than for production use.\n *\n * While it could be used where performance is not critical, I would recommend using the ‘Web\n * Cryptography API’ (developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest) for the browser,\n * or the ‘crypto’ library (nodejs.org/api/crypto.html#crypto_class_hash) in Node.js.\n *\n * See csrc.nist.gov/groups/ST/toolkit/secure_hashing.html\n *     csrc.nist.gov/groups/ST/toolkit/examples.html\n */\nclass Sha1 {\n  /**\n   * Generates SHA-1 hash of string.\n   *\n   * @param   {string} msg - (Unicode) string to be hashed.\n   * @param   {Object} [options]\n   * @param   {string} [options.msgFormat=string] - Message format: 'string' for JavaScript string\n   *   (gets converted to UTF-8 for hashing); 'hex-bytes' for string of hex bytes ('616263' ≡ 'abc') .\n   * @param   {string} [options.outFormat=hex] - Output format: 'hex' for string of contiguous\n   *   hex bytes; 'hex-w' for grouping hex bytes into groups of (4 byte / 8 character) words.\n   * @returns {string} Hash of msg as hex character string.\n   *\n   * @example\n   *   import Sha1 from './sha1.js';\n   *   const hash = Sha1.hash('abc'); // 'a9993e364706816aba3e25717850c26c9cd0d89d'\n   */\n  static hash(msg, options) {\n    const defaults = { msgFormat: \"string\", outFormat: \"hex\" };\n    const opt = Object.assign(defaults, options);\n\n    switch (opt.msgFormat) {\n      default: // default is to convert string to UTF-8, as SHA only deals with byte-streams\n      case \"string\":\n        msg = utf8Encode(msg);\n        break;\n      case \"hex-bytes\":\n        msg = hexBytesToString(msg);\n        break; // mostly for running tests\n    }\n\n    // constants [§4.2.1]\n    const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n\n    // initial hash value [§5.3.1]\n    const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n    // PREPROCESSING [§6.1.1]\n\n    msg += String.fromCharCode(0x80); // add trailing '1' bit (+ 0's padding) to string [§5.1.1]\n\n    // convert string msg into 512-bit/16-integer blocks arrays of ints [§5.2.1]\n    const l = msg.length / 4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length\n    const N = Math.ceil(l / 16); // number of 16-integer-blocks required to hold 'l' ints\n    const M = new Array(N);\n\n    for (let i = 0; i < N; i++) {\n      M[i] = new Array(16);\n      for (let j = 0; j < 16; j++) {\n        // encode 4 chars per integer, big-endian encoding\n        M[i][j] =\n          (msg.charCodeAt(i * 64 + j * 4 + 0) << 24) |\n          (msg.charCodeAt(i * 64 + j * 4 + 1) << 16) |\n          (msg.charCodeAt(i * 64 + j * 4 + 2) << 8) |\n          (msg.charCodeAt(i * 64 + j * 4 + 3) << 0);\n      } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\n    }\n    // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]\n    // note: most significant word would be (len-1)*8 >>> 32, but since JS converts\n    // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\n    M[N - 1][14] = ((msg.length - 1) * 8) / Math.pow(2, 32);\n    M[N - 1][14] = Math.floor(M[N - 1][14]);\n    M[N - 1][15] = ((msg.length - 1) * 8) & 0xffffffff;\n\n    // HASH COMPUTATION [§6.1.2]\n\n    for (let i = 0; i < N; i++) {\n      const W = new Array(80);\n\n      // 1 - prepare message schedule 'W'\n      for (let t = 0; t < 16; t++) W[t] = M[i][t];\n      for (let t = 16; t < 80; t++)\n        W[t] = Sha1.ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n\n      // 2 - initialise five working variables a, b, c, d, e with previous hash value\n      let a = H[0],\n        b = H[1],\n        c = H[2],\n        d = H[3],\n        e = H[4];\n\n      // 3 - main loop (use JavaScript '>>> 0' to emulate UInt32 variables)\n      for (let t = 0; t < 80; t++) {\n        const s = Math.floor(t / 20); // seq for blocks of 'f' functions and 'K' constants\n        const T =\n          (Sha1.ROTL(a, 5) + Sha1.f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n        e = d;\n        d = c;\n        c = Sha1.ROTL(b, 30) >>> 0;\n        b = a;\n        a = T;\n      }\n\n      // 4 - compute the new intermediate hash value (note 'addition modulo 2^32' – JavaScript\n      // '>>> 0' coerces to unsigned UInt32 which achieves modulo 2^32 addition)\n      H[0] = (H[0] + a) >>> 0;\n      H[1] = (H[1] + b) >>> 0;\n      H[2] = (H[2] + c) >>> 0;\n      H[3] = (H[3] + d) >>> 0;\n      H[4] = (H[4] + e) >>> 0;\n    }\n\n    // convert H0..H4 to hex strings (with leading zeros)\n    for (let h = 0; h < H.length; h++)\n      H[h] = (\"00000000\" + H[h].toString(16)).slice(-8);\n\n    // concatenate H0..H4, with separator if required\n    const separator = opt.outFormat === \"hex-w\" ? \" \" : \"\";\n\n    return H.join(separator);\n\n    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n    function utf8Encode(str) {\n      try {\n        return new TextEncoder()\n          .encode(str, \"utf-8\")\n          .reduce((prev, curr) => prev + String.fromCharCode(curr), \"\");\n      } catch (e) {\n        // no TextEncoder available?\n        return unescape(encodeURIComponent(str)); // monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n      }\n    }\n\n    function hexBytesToString(hexStr) {\n      // convert string of hex numbers to a string of chars (eg '616263' -> 'abc').\n      const str = hexStr.replace(\" \", \"\"); // allow space-separated groups\n      return str === \"\"\n        ? \"\"\n        : str\n            .match(/.{2}/g)\n            .map((byte) => String.fromCharCode(parseInt(byte, 16)))\n            .join(\"\");\n    }\n  }\n\n  /**\n   * Function 'f' [§4.1.1].\n   * @private\n   */\n  static f(s, x, y, z) {\n    switch (s) {\n      case 0:\n        return (x & y) ^ (~x & z); // Ch()\n      case 1:\n        return x ^ y ^ z; // Parity()\n      case 2:\n        return (x & y) ^ (x & z) ^ (y & z); // Maj()\n      case 3:\n        return x ^ y ^ z; // Parity()\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Rotates left (circular left shift) value x by n positions [§3.2.5].\n   * @private\n   */\n  static ROTL(x, n) {\n    return (x << n) | (x >>> (32 - n));\n  }\n}\n\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\nexport default Sha1;\n","import { useState } from \"react\";\n\nexport const useInputValue = (initialValue = \"\") => {\n  const [inputValue, setInputValue] = useState(initialValue);\n\n  return {\n    inputValue,\n    changeInput: (event) => setInputValue(event.target.value),\n    clearInput: () => setInputValue(\"\"),\n    keyInput: (event, callback) => {\n      if (event.which === 13 || event.keyCode === 13) {\n        callback(inputValue);\n        return true;\n      }\n\n      return false;\n    },\n  };\n};\n\nexport const useParticipants = (props) => {\n  //const [participants, setParticipants] = useState(initialValue);\n  let participants = props.participants;\n\n  return {\n    //participants: participants,\n    addParticipants: (text, regist) => {\n      //console.log(regist);\n      if (text !== \"\") {\n        props.setParticipants(\n          participants.concat({\n            text,\n            checked: false,\n            registered: regist.userExists,\n            uid: regist.userID,\n          })\n        );\n      }\n    },\n    checkParticipants: (idx) => {\n      props.setParticipants(\n        participants.map((participant, index) => {\n          if (idx === index) {\n            participant.checked = !participant.checked;\n          }\n\n          return participant;\n        })\n      );\n    },\n    removeParticipants: (idx) => {\n      props.setParticipants(\n        participants.filter((participant, index) => idx !== index)\n      );\n    },\n  };\n};\n","import React, { memo } from \"react\";\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nconst AddParticipant = memo((props) => {\n  return (\n    <Paper style={{ margin: 0, padding: 10 }}>\n      <Grid container>\n        <Grid xs={10} md={10} item style={{ paddingRight: 16 }}>\n          <TextField\n            placeholder=\"Add Participants Here\"\n            value={props.inputValue}\n            onChange={props.onInputChange}\n            onKeyPress={props.onInputKeyPress}\n            fullWidth\n          />\n        </Grid>\n        <Grid xs={2} md={1} item>\n          <Button fullWidth variant=\"outlined\" onClick={props.onButtonClick}>\n            <PersonAddIcon />\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n});\n\nexport default AddParticipant;\n","import React, { memo } from \"react\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport {\n  ListItem,\n  Checkbox,\n  IconButton,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\n\nconst ParticipantListItem = memo((props) => {\n  let shortenedString;\n\n  if (props.text.length > 10) {\n    shortenedString = `${props.text.substring(0, 10)}...`;\n  } else {\n    shortenedString = props.text;\n  }\n\n  return (\n    <ListItem divider={props.divider} style={{ margin: -12 }}>\n      <Checkbox\n        onClick={props.onCheckBoxToggle}\n        checked={props.checked}\n        disableRipple\n      />\n      <PersonIcon style={{ color: \"#05728f\", paddingRight: 5 }} />\n      <ListItemText primary={shortenedString} />\n      {/*<ListItemText primary=\"Test\" />*/}\n      <ListItemText\n        primary={props.registered ? \"Registered\" : \"UnRegistered\"}\n        style={props.registered ? { color: \"green\" } : { color: \"red\" }}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label=\"Delete Participant\"\n          onClick={props.onButtonClick}\n        >\n          <DeleteOutlined />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n});\n\nexport default ParticipantListItem;\n","import React, { memo } from \"react\";\nimport { List, Paper } from \"@material-ui/core\";\n\nimport ParticipantListItem from \"./ParticipantListItem\";\n\nconst ParticipantList = memo((props) => (\n  <div>\n    {props.items.length > 0 && (\n      <Paper style={{ margin: 10 }}>\n        <List style={{ overflow: \"visible\" }}>\n          {props.items.map((participant, idx) => (\n            <ParticipantListItem\n              {...participant}\n              key={`ParticipantItem.${idx}`}\n              divider={idx !== props.items.length - 1}\n              onButtonClick={() => props.onItemRemove(idx)}\n              onCheckBoxToggle={() => props.onItemCheck(idx)}\n            />\n          ))}\n        </List>\n      </Paper>\n    )}\n  </div>\n));\n\nexport default ParticipantList;\n","import React, { memo, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Modal from \"@material-ui/core/Modal\";\nimport \"./Modal.scss\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport SHA1 from \"../../services/sha1\";\n\nimport {\n  useInputValue,\n  useParticipants,\n} from \"../Participant-Components/Participants-custom-hooks\";\nimport AddParticipant from \"../Participant-Components/AddParticipant\";\nimport ParticipantList from \"../Participant-Components/ParticipantList\";\n\nimport { db } from \"../../services/firebase\";\n\nconst AddGroupParticipant = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = (_) => {\n    const userExists = () => {\n      let userEx = false;\n\n      let uid = null;\n\n      for (let [k, v] of props.users) {\n        //console.log(\"Key: \" + k);\n        //console.log(\"Value: \" + v);\n        if (v.email === inputValue || v.name === inputValue) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, userExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n      />\n    </div>\n  );\n});\n\nconst AddGroupLeader = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = (_) => {\n    const userExists = () => {\n      let userEx = false;\n      let uid = null;\n\n      for (let [k, v] of props.users) {\n        //console.log(\"Key: \" + k);\n        //console.log(\"Value: \" + v);\n        if (v.email === inputValue || v.name === inputValue) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, userExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n      />\n    </div>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"35%\",\n    minWidth: \"620px\",\n    height: \"auto\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"0px, 0px 0px 0px\",\n    borderRadius: \"10px\",\n    boxShadow:\n      \"0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)\",\n    overflow: \"auto\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function AnimatedModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [savingGroup, setSavingGroup] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupDesc, setGroupDesc] = useState(\"\");\n\n  const [participants, setParticipants] = useState([]);\n  const [leaders, setLeaders] = useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleNameChange = (event) => {\n    setGroupName(event.target.value);\n  };\n\n  const handleDescChange = (event) => {\n    setGroupDesc(event.target.value);\n  };\n\n  const handleSaveGroup = (event) => {\n    setSavingGroup(true);\n    setSaveError(null);\n\n    try {\n      let groupID = SHA1.hash(groupName);\n\n      if (!props.groups.has(groupID)) {\n        db.ref(\"groups/\" + groupID).update({\n          name: groupName,\n          description: groupDesc,\n        });\n\n        /* Template db call for storing chats to a group\n        db.ref(\"groups/6c48a6eadfed63a0af3e39eb36911e24b4e356de/chats/\").push({\n          content: this.state.content,\n          timestamp: Date.now(),\n          uid: this.state.user.uid,\n        });\n        */\n\n        for (let i = 0; i < participants.length; ++i) {\n          if (\n            participants[i].registered === true &&\n            participants[i].checked === true\n          ) {\n            let displayName = props.users.get(participants[i].uid).name;\n\n            if (props.users.get(participants[i].uid).name === undefined) {\n              displayName = props.users.get(participants[i].uid).email;\n            }\n\n            db.ref(`groups/${groupID}/members/${participants[i].uid}`).update({\n              displayName: displayName,\n              groupAccess: \"member\",\n            });\n\n            db.ref(`users/${participants[i].uid}/groups/${groupID}`).update({\n              displayName: displayName,\n              groupAccess: \"member\",\n            });\n          }\n        }\n\n        for (let i = 0; i < leaders.length; ++i) {\n          if (leaders[i].registered === true && leaders[i].checked === true) {\n            let displayName = props.users.get(leaders[i].uid).name;\n\n            if (props.users.get(leaders[i].uid).name === undefined) {\n              displayName = props.users.get(leaders[i].uid).email;\n            }\n            db.ref(`groups/${groupID}/members/${leaders[i].uid}`).update({\n              displayName: displayName,\n              groupAccess: \"leader\",\n            });\n            db.ref(`users/${leaders[i].uid}/groups/${groupID}`).update({\n              displayName: displayName,\n              groupAccess: \"member\",\n            });\n          }\n        }\n\n        setSavingGroup(false);\n        setOpen(false);\n        setParticipants([]);\n        setLeaders([]);\n      } else {\n        setSavingGroup(false);\n        setSaveError(\"Group exists\");\n      }\n    } catch (error) {\n      setSaveError(error);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"fab\">\n        <Fab color=\"primary\" aria-label=\"add\" onClick={handleOpen}>\n          <GroupAddIcon />\n        </Fab>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <form className={classes.paper}>\n            <div className=\"new_group_header\" style={{ background: \"#05728f\" }}>\n              <h2\n                style={{\n                  color: \"#fff\",\n                  borderBottom: \"1px solid #05728f\",\n                  padding: \"1em 4em 1em 4em\",\n                }}\n              >\n                {\" \"}\n                Create Group\n              </h2>\n            </div>\n            <div\n              className=\"new_group_details\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\", marginTop: \"50px\" }}>\n                {\" \"}\n                Group Name{\" \"}\n              </h6>\n              <TextField\n                className=\"group_name\"\n                inputProps={{ style: { fontSize: 20 } }}\n                onChange={handleNameChange}\n                style={{ size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n              <h6 style={{ color: \"#05728f\", marginTop: \"40px\" }}>\n                {\" \"}\n                Group Description{\" \"}\n              </h6>\n              <TextField\n                className=\"group_description\"\n                fullWidth={true}\n                inputProps={{ style: { fontSize: 16 } }}\n                onChange={handleDescChange}\n                style={{ marginBottom: \"55px\", size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n            </div>\n            <div\n              className=\"add_group_leaders\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Assign Group Leader(s) </h6>\n              <AddGroupLeader\n                participants={leaders}\n                setParticipants={setLeaders}\n                users={props.users}\n              />\n            </div>\n            <div\n              className=\"add_group_participant\"\n              style={{ padding: \"0px 100px 0px 100px\", marginTop: \"55px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Invite People </h6>\n              <AddGroupParticipant\n                participants={participants}\n                setParticipants={setParticipants}\n                users={props.users}\n              />\n            </div>\n            {savingGroup ? (\n              <div\n                className=\"spinner-border text-success\"\n                role=\"status\"\n                style={{\n                  display: \"flex\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"1em\",\n                  marginBottom: \"1em\",\n                }}\n              >\n                <span className=\"sr-only\" style={{}}>\n                  Saving...\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {saveError !== null && saveError !== \"null\" ? (\n              <div\n                className=\"\"\n                style={{ textAlign: \"center\", marginTop: \"2em\" }}\n              >\n                {saveError}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div\n              className=\"create_new_group_button\"\n              style={{\n                display: \"flex\",\n                padding: \"0px 95px 0px 95px\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginBottom: \"1em\",\n                marginTop: \"2.5em\",\n              }}\n            >\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={handleSaveGroup}\n                //fullWidth={true}\n                style={{\n                  backgroundColor: \"#05728f\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  borderColor: \"#05728f\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Save\n              </Button>\n              <Button\n                autoFocus\n                onClick={handleClose}\n                variant=\"outlined\"\n                color=\"inherit\"\n                //fullWidth={true}\n                style={{\n                  color: \"#05728f\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { db } from \"../../services/firebase\";\nimport { createTaskboard } from \"../../helpers/db\";\nimport { auth } from \"../../services/firebase\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  withStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPaperPlane,\n  faSearch,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport AnimatedModal from \"./Modal\";\nimport \"./Chat.scss\";\n\nconst useStyles = (theme) => ({\n  taskboardList: {\n    width: \"11em\",\n    marginLeft: \"1em\",\n  },\n});\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      boards: [],\n      groups: new Map(),\n      users: new Map(),\n      content: \"\",\n      readError: null,\n      writeError: null,\n      loadingChats: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //this.myRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ readError: null, loadingChats: true });\n    //const chatArea = this.myRef.current;\n    try {\n      db.ref(\"chats\").on(\"value\", (snapshot) => {\n        let chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n        chats.sort(function (a, b) {\n          return a.timestamp - b.timestamp;\n        });\n        this.setState({ chats });\n        //chatArea.scrollBy(0, chatArea.scrollHeight);\n        this.setState({ loadingChats: false });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message, loadingChats: false });\n    }\n    try {\n      db.ref(\"groups\").on(\"value\", (snapshot) => {\n        let groups = new Map();\n        snapshot.forEach((snap) => {\n          groups.set(snap.key, snap.val());\n        });\n\n        this.setState({ groups });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n    try {\n      db.ref(\"users\").on(\"value\", (snapshot) => {\n        let users = new Map();\n        snapshot.forEach((snap) => {\n          users.set(snap.key, snap.val());\n        });\n\n        this.setState({ users });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n    try {\n      db.ref(\"taskboards\").on(\"value\", (snapshot) => {\n        const boards = [];\n        snapshot.forEach((board) => {\n          const boardVal = board.val();\n          boards.push({\n            id: board.key,\n            ...boardVal,\n          });\n        });\n        this.setState({ boards });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n  async componentWillUnmount() {\n    db.ref(\"users\").off(\"value\");\n    db.ref(\"chats\").off(\"value\");\n    db.ref(\"groups\").off(\"value\");\n    db.ref(\"taskboards\").off(\"value\");\n  }\n\n  handleChange(event) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n\n  handleCreateTaskboard = async () => {\n    try {\n      const taskboardResult = await createTaskboard(this.state.user.uid);\n      let boardId = taskboardResult.getKey();\n      this.props.history.push(`/taskboard?id=${boardId}`);\n    } catch (err) {\n      console.error(`An error occurred when creating a new taskboard`, err);\n    }\n  };\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ writeError: null });\n    //const chatArea = this.myRef.current;\n    try {\n      await db.ref(\"chats\").push({\n        content: this.state.content,\n        timestamp: Date.now(),\n        uid: this.state.user.uid,\n      });\n      this.setState({ content: \"\" });\n      //chatArea.scrollBy(0, chatArea.scrollHeight);\n    } catch (error) {\n      this.setState({ writeError: error.message });\n    }\n  }\n\n  formatTime(timestamp) {\n    const d = new Date(timestamp);\n    const time = `${d.getDate()}/${\n      d.getMonth() + 1\n    }/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n    return time;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div id=\"chat\" className=\"\">\n        <div className=\"messaging\">\n          <div className=\"inbox_msg\">\n            <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                <div className=\"recent_heading\">\n                  <h4>Recent</h4>\n                </div>\n                <div className=\"srch_bar\">\n                  <div className=\"stylish-input-group\">\n                    <input\n                      type=\"text\"\n                      className=\"search-bar\"\n                      placeholder=\"Search\"\n                    />\n                    <span className=\"input-group-addon\">\n                      <button type=\"button\">\n                        {\" \"}\n                        <FontAwesomeIcon\n                          icon={faSearch}\n                          aria-hidden=\"true\"\n                        />{\" \"}\n                      </button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"inbox_chat\">\n                <div className=\"chat_list active_chat\">\n                  <div className=\"chat_people\">\n                    <div className=\"chat_img\">\n                      {\" \"}\n                      <img\n                        src=\"https://ptetutorials.com/images/user-profile.png\"\n                        alt=\"group-no\"\n                      />{\" \"}\n                    </div>\n                    <div className=\"chat_ib\">\n                      <h5>\n                        Group 1 <span className=\"chat_date\">Dec 25</span>\n                      </h5>\n                      <p>Description / Last Message</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"chat_list\">\n                  <div className=\"chat_people\">\n                    <div className=\"chat_img\">\n                      {\" \"}\n                      <img\n                        src=\"https://ptetutorials.com/images/user-profile.png\"\n                        alt=\"group-no\"\n                      />{\" \"}\n                    </div>\n                    <div className=\"chat_ib\">\n                      <h5>\n                        Group 2 <span className=\"chat_date\">Dec 25</span>\n                      </h5>\n                      <p>Description / Last Message </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"fab\">\n                <AnimatedModal\n                  className=\"fab\"\n                  users={this.state.users}\n                  groups={this.state.groups}\n                />\n              </div>\n            </div>\n            <div className=\"mesgs\">\n              {/*ref={this.myRef}*/}\n\n              {/* chat area */}\n              <div className=\"msg_history\">\n                <div className=\"msg-top\">\n                  {/* Logged in as:{\" \"}\n                  <strong className=\"text-info\">{this.state.user.email}</strong> */}\n\n                  <div className=\"group_header\">\n                    <strong className=\"text-info\">Group 1</strong>\n                    <FormControl className={classes.taskboardList}>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value=\"\"\n                        displayEmpty\n                      >\n                        <MenuItem value=\"\" disabled>\n                          Select a taskboard\n                        </MenuItem>\n                        {this.state.boards.map((board) => {\n                          return (\n                            <MenuItem key={board.id} value={board.id}>\n                              <Link to={`/taskboard?id=${board.id}`}>\n                                {board.name}\n                              </Link>\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  </div>\n                  <div className=\"create_subgroup_btn\">\n                    <button type=\"button\" onClick={this.handleCreateTaskboard}>\n                      <Typography>Create new taskboard</Typography>\n                    </button>\n                    <button type=\"button\">\n                      {\" \"}\n                      <FontAwesomeIcon icon={faPlus} />{\" \"}\n                    </button>\n                  </div>\n                </div>\n\n                {/* loading indicator */}\n                {this.state.loadingChats ? (\n                  <div\n                    className=\"spinner-border text-success\"\n                    role=\"status\"\n                    style={{\n                      display: \"flex\",\n                      marginLeft: \"auto\",\n                      marginRight: \"auto\",\n                      marginTop: \"1em\",\n                      marginBottom: \"1em\",\n                    }}\n                  >\n                    <span className=\"sr-only\" style={{}}>\n                      Loading...\n                    </span>\n                  </div>\n                ) : (\n                  <div className=\"msg-mid\">\n                    {this.state.chats.map((chat) => {\n                      return (\n                        <div\n                          key={chat.timestamp}\n                          className={\n                            this.state.user.uid === chat.uid\n                              ? \"outgoing_msg\"\n                              : \"incoming_msg\"\n                          }\n                        >\n                          {this.state.user.uid === chat.uid ? (\n                            \"\"\n                          ) : (\n                            <div className=\"incoming_msg_img\">\n                              {\" \"}\n                              <img\n                                src=\"https://ptetutorials.com/images/user-profile.png\"\n                                alt=\"sunil\"\n                              />{\" \"}\n                            </div>\n                          )}\n                          {this.state.user.uid === chat.uid ? (\n                            <div className=\"sent_msg\">\n                              <p>{chat.content}</p>\n                              <span className=\"time_date\">\n                                {this.formatTime(chat.timestamp)}\n                              </span>\n                            </div>\n                          ) : (\n                            <div className=\"received_msg\">\n                              <div className=\"received_withd_msg\">\n                                <div className=\"name-header\">\n                                  {this.state.users.has(chat.uid)\n                                    ? this.state.users.get(chat.uid).name ===\n                                      undefined\n                                      ? this.state.users.get(chat.uid).email\n                                      : this.state.users.get(chat.uid).name\n                                    : \"Anonymous\"}\n                                </div>\n                                <p>{chat.content}</p>\n                                <span className=\"time_date\">\n                                  {this.formatTime(chat.timestamp)}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n\n                <form\n                  onKeyDown={this._handleKeyDown}\n                  onSubmit={this.handleSubmit}\n                  className=\"type_msg\"\n                >\n                  <textarea\n                    type=\"text\"\n                    placeholder=\"Type a message\"\n                    className=\"form-control write_msg\"\n                    name=\"content\"\n                    onChange={this.handleChange}\n                    value={this.state.content}\n                  ></textarea>\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button className=\"msg_send_btn\" type=\"submit\">\n                    <FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" />\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(Chat));\n","import React from \"react\";\nimport \"./TaskDescription.scss\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { updateTask } from \"../../../helpers/db\";\n\nconst TaskDescription = ({ columnId, taskDetails }) => {\n  const [newDescription, setNewDescription] = React.useState(\"\");\n  const [isEditing, setIsEditing] = React.useState(\n    taskDetails.description.length === 0\n  );\n\n  const submitNewDescription = async () => {\n    if (taskDetails.description === newDescription) {\n      stopEditing();\n      return;\n    }\n    try {\n      await updateTask(columnId, taskDetails.id, {\n        description: newDescription,\n      });\n      stopEditing();\n    } catch (err) {\n      console.log(\"an error occured when saving new description\", err);\n    }\n  };\n\n  const handleStartEditing = () => {\n    setNewDescription(taskDetails.description);\n    setIsEditing(true);\n  };\n\n  const handleChangeDescription = (e) => {\n    setNewDescription(e.target.value);\n  };\n\n  const stopEditing = () => {\n    setNewDescription(\"\");\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"task-description\">\n      <div className=\"title-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          Description\n        </Typography>\n        {!isEditing && <Button onClick={handleStartEditing}>Edit</Button>}\n      </div>\n      {isEditing ? (\n        <div className=\"editing-lockup\">\n          <textarea\n            label=\"Description\"\n            value={newDescription}\n            onChange={handleChangeDescription}\n            placeholder=\"Add a more detailed description\"\n            rows={5}\n          />\n          <div className=\"button-lockup\">\n            <Button onClick={submitNewDescription}>Save</Button>\n            <Button onClick={stopEditing}>\n              <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <Typography>\n          {taskDetails.description || \"Add a more detailed description... \"}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default TaskDescription;\n","import React from \"react\";\nimport \"./NewTaskComment.scss\";\nimport { Button } from \"@material-ui/core\";\nimport { createComment } from \"../../../helpers/db\";\nimport { auth } from \"../../../services/firebase\";\n\nconst NewTaskComment = ({ taskId }) => {\n  const [text, setText] = React.useState(\"\");\n\n  const handleChangeComment = (e) => {\n    setText(e.target.value);\n  };\n  const submitComment = async () => {\n    let userId = auth().currentUser.uid;\n    try {\n      await createComment(taskId, {\n        text,\n        createdBy: userId,\n        lastUpdatedTimestamp: Date.now(),\n      });\n      setText(\"\");\n    } catch (err) {\n      console.log(\"An error occurred when submitting the comment\");\n    }\n  };\n  return (\n    <div className=\"new-task-comment-lockup\">\n      <textarea\n        label=\"Description\"\n        value={text}\n        onChange={handleChangeComment}\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n        rows={2}\n      />\n      {text.length > 0 && <Button onClick={submitComment}>Save</Button>}\n    </div>\n  );\n};\n\nexport default NewTaskComment;\n","import React, { useEffect } from \"react\";\nimport \"./TaskActivity.scss\";\nimport { Typography } from \"@material-ui/core\";\nimport NewTaskComment from \"../NewTaskComment/NewTaskComment\";\nimport { db } from \"../../../services/firebase\";\nimport { getUserById, deleteComment } from \"../../../helpers/db\";\nimport moment from \"moment\";\n\nconst TaskActivity = ({ columnId, taskDetails }) => {\n  const [comments, setComments] = React.useState([]);\n  const [usernameMap, setUsernameMap] = React.useState({});\n\n  useEffect(() => {\n    getUserById(\"3wHGLaOci8gI9Mk1e3jVQ7HA8gD2\");\n    try {\n      const columns = db.ref(`taskComments/${taskDetails.id}`);\n      columns.on(\"value\", async (snapshot) => {\n        const tmpComments = [];\n        snapshot.forEach((comment) => {\n          const val = comment.val();\n          if (val.deletedTimestamp) return; // Don't display deleted columns\n          // TODO: Unshift isnt the best to use here for displaying tasks with most recent first, can sort the list (potentially from firebase) or something else but works for now\n          tmpComments.unshift({\n            id: comment.key,\n            ...val,\n          });\n        });\n\n        // TODO: Look at caching names\n        const tmpUsernameMap = {};\n        await Promise.all(\n          tmpComments.map(async (comment) => {\n            const user = await getUserById(comment.createdBy);\n            tmpUsernameMap[comment.createdBy] = user.val().name;\n          })\n        );\n        setUsernameMap(tmpUsernameMap);\n        setComments(tmpComments);\n      });\n    } catch (err) {\n      alert(`An error occurred when getting comments... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`taskComments/${taskDetails.id}`).off(\"value\");\n  }, [taskDetails.id]);\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      await deleteComment(taskDetails.id, commentId);\n    } catch (err) {\n      console.log(\"An error occurred when deleting comment\", err);\n    }\n  };\n\n  return (\n    <div className=\"task-activity\">\n      <div className=\"title-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          Activity:\n        </Typography>\n      </div>\n      <NewTaskComment taskId={taskDetails.id} />\n      <ul>\n        {comments.map((comment) => {\n          return (\n            <li key={comment.id}>\n              <div key={comment.id} className=\"comment\">\n                <Typography className=\"comment-username\">\n                  {usernameMap[comment.createdBy]}\n                </Typography>\n                <p className=\"comment-timestamp\">\n                  {moment\n                    .utc(parseInt(comment.lastUpdatedTimestamp))\n                    .fromNow(true)}\n                </p>\n                <Typography className=\"comment-text\">{comment.text}</Typography>\n              </div>\n              <div className=\"button-lockup\">\n                <p onClick={() => handleDeleteComment(comment.id)}>Delete</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskActivity;\n","import React from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./TaskDetails.scss\";\nimport TaskDescription from \"../TaskDescription/TaskDescription\";\nimport TaskActivity from \"../TaskActivity/TaskActivity\";\nimport { updateTask } from \"../../../helpers/db\";\n\nconst TaskDetails = ({ columnId, taskDetails, close }) => {\n  const [newTaskName, setNewTaskName] = React.useState(\"\");\n  const [isEditingTaskName, setIsEditingTaskName] = React.useState(false);\n  const submitNewTaskName = async () => {\n    if (taskDetails.name === newTaskName) {\n      stopEditing();\n      return;\n    }\n    try {\n      await updateTask(columnId, taskDetails.id, {\n        name: newTaskName,\n      });\n      stopEditing();\n    } catch (err) {\n      console.log(\"err is \", err);\n    }\n  };\n\n  const handleStartEditing = () => {\n    setNewTaskName(taskDetails.name);\n    setIsEditingTaskName(true);\n  };\n\n  const handleChangeName = (e) => {\n    setNewTaskName(e.target.value);\n  };\n  const stopEditing = () => {\n    setNewTaskName(\"\");\n    setIsEditingTaskName(false);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      return submitNewTaskName();\n    }\n  };\n\n  return (\n    <div className=\"task-details-lockup\">\n      <div className=\"header\">\n        {isEditingTaskName ? (\n          <input\n            onChange={handleChangeName}\n            onBlur={submitNewTaskName}\n            onKeyPress={handleKeyPress}\n            value={newTaskName}\n            placeholder=\"Enter a title for this card...\"\n          />\n        ) : (\n          <Typography variant=\"h5\" component=\"h1\" onClick={handleStartEditing}>\n            {taskDetails.name}\n          </Typography>\n        )}\n        <Button onClick={close}>\n          <FontAwesomeIcon icon={faTimes} size=\"1x\" />\n        </Button>\n      </div>\n      <div className=\"grid-lockup\">\n        <div className=\"main-col\">\n          <div className=\"task-detail\"></div>\n          <TaskDescription columnId={columnId} taskDetails={taskDetails} />\n          <TaskActivity columnId={columnId} taskDetails={taskDetails} />\n        </div>\n        <div className=\"sidebar\">\n          <Typography>This is the sidebar</Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDetails;\n","import React, { useEffect } from \"react\";\nimport \"./Modal.scss\";\n\nconst Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Used to close modals on Escape\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [closeModal]);\n\n  return (\n    <div>\n      <div className=\"modalOverlay\" />\n      <div className=\"modalContent\">{children}</div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport \"./TaskColumn.scss\";\nimport { Button, Card, CardContent, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { deleteTaskColumn, createTask } from \"../../../helpers/db\";\nimport { db } from \"../../../services/firebase\";\nimport TaskDetails from \"../TaskDetails/TaskDetails\";\nimport Modal from \"../Modal/Modal\";\n\nconst TaskColumn = ({ boardId, column, user }) => {\n  const [tasks, setTasks] = React.useState(new Map());\n  const [newTask, setNewTask] = React.useState(\"\");\n  const [selectedTaskId, setSelectedTaskId] = React.useState(\"\");\n\n  useEffect(() => {\n    try {\n      const tasks = db.ref(`tasks/${column.id}`);\n      tasks.on(\"value\", (snapshot) => {\n        const tmpTasks = new Map();\n        snapshot.forEach((col) => {\n          const val = col.val();\n          if (val.deletedTimestamp) return; // Don't display deleted tasks\n          tmpTasks.set(col.key, {\n            id: col.key,\n            ...val,\n          });\n        });\n        setTasks(tmpTasks);\n      });\n    } catch (err) {\n      alert(`An error occurred when reading data... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`tasks/${column.id}`).off(\"value\");\n  }, [column.id]);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteTaskColumn(boardId, column.id);\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`); // TODO: Dont use alerts for error messages..\n    }\n  };\n\n  const handleCreateTask = async (e) => {\n    e.preventDefault();\n    const task = {\n      name: newTask,\n      description: \"\",\n      createdTimeStamp: Date.now(),\n      createdBy: user.uid,\n      deletedTimestamp: null,\n    };\n\n    try {\n      await createTask(column.id, task);\n      setNewTask(\"\");\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`);\n    }\n  };\n\n  const handleNewTaskChange = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTaskId(\"\");\n  };\n\n  return (\n    <div className=\"task-column-container\">\n      <div className=\"task-column-lockup\">\n        <div className=\"header-lockup\">\n          <Typography variant=\"h5\" component=\"h2\">\n            {column.name}\n          </Typography>\n          <FontAwesomeIcon\n            onClick={handleDeleteColumn}\n            icon={faTimes}\n            size=\"1x\"\n          />\n        </div>\n        <div className=\"task-list\">\n          <ul>\n            {Array.from(tasks.values()).map((task) => {\n              return (\n                <li key={task.id} onClick={(e) => setSelectedTaskId(task.id)}>\n                  <Card variant=\"outlined\">\n                    <CardContent>\n                      <Typography color=\"textPrimary\" gutterBottom>\n                        {task.name}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"new-task-lockup\">\n          <form onSubmit={handleCreateTask}>\n            <input\n              onChange={handleNewTaskChange}\n              value={newTask}\n              placeholder=\"Enter a title for this card...\"\n            />\n            <Button type=\"submit\">Add Task</Button>\n          </form>\n        </div>\n      </div>\n      {!!selectedTaskId && (\n        <Modal closeModal={handleCloseModal}>\n          <TaskDetails\n            columnId={column.id}\n            taskDetails={tasks.get(selectedTaskId)}\n            close={handleCloseModal}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default TaskColumn;\n","import React from \"react\";\nimport \"./NewTaskColumn.scss\";\nimport { faTimes, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { createTaskColumn } from \"../../../helpers/db\";\n\nconst NewTaskColumn = ({ boardId }) => {\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const handleSetIsEditing = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleCancelEditing = () => {\n    setIsEditing(false);\n    setName(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await createTaskColumn(boardId, name);\n      handleCancelEditing();\n    } catch (err) {\n      alert(`An error occurred when creating a new column ${err.message}`);\n    }\n  };\n\n  return (\n    <div id=\"new-task-column-container\">\n      <form onSubmit={handleSubmit}>\n        {isEditing ? (\n          <div id=\"add-column-selected\">\n            <input\n              onChange={handleNameChange}\n              value={name}\n              placeholder=\"Enter list name...\"\n            />\n            <div id=\"button-lockup\">\n              <Button type=\"submit\">Add List</Button>\n              <Button onClick={handleCancelEditing}>\n                <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div id=\"add-column\">\n            <button onClick={handleSetIsEditing}>\n              <FontAwesomeIcon icon={faPlus} size=\"1x\" />\n              <Typography component=\"p\">Add another list</Typography>\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default NewTaskColumn;\n","export const readUrlQueryParam = (key) => {\n  const params = new URLSearchParams(window.location.search);\n  return params.get(key);\n};\n\nexport const isEmptyObj = (obj) => {\n  return Object.keys(obj).length === 0;\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Taskboard.scss\";\nimport TaskColumn from \"../Presentational/TaskColumn/TaskColumn\";\nimport NewTaskColumn from \"../Presentational/NewTaskColumn/NewTaskColumn\";\nimport { db } from \"../../services/firebase\";\nimport { readUrlQueryParam, isEmptyObj } from \"../../helpers/utils\";\nimport { Typography } from \"@material-ui/core\";\nimport { auth } from \"../../services/firebase\";\n\n/*\ntaskboard:\n  Name: string\n  Description: string\n  createdDate: Date\n  createdBy: string // userId\n  Columns: string[]\n  deletedDate: Date | null\ncolumn:\n  Name: string\n  Tasks: string[]\ntasks:\n  name: string\n  description: string\n  createdDate: Date\n  assignees: string[] // User IDs\n*/\n\nconst Taskboard = () => {\n  const [taskboardData, setTaskboardData] = React.useState({});\n  const [isBoardLoaded, setIsBoardLoaded] = React.useState(false);\n  const [columns, setColumns] = React.useState([]);\n  const [readError, setReadError] = React.useState(false); // TODO: use this\n  const [user, setUser] = React.useState(null);\n\n  useEffect(() => {\n    const boardId = readUrlQueryParam(\"id\");\n    const getTaskboardData = async () => {\n      try {\n        const result = await db.ref(`/taskboards/${boardId}`).once(\"value\");\n        if (!result.val()) {\n          throw new Error(\"Taskboard does not exist\");\n        }\n        setTaskboardData({\n          id: result.key,\n          ...result.val(),\n        });\n      } catch (err) {\n        console.log(\"An error occurred when getting taskboard data\", err);\n        setTaskboardData({});\n      }\n      setIsBoardLoaded(true);\n    };\n    getTaskboardData();\n  }, []);\n\n  useEffect(() => {\n    if (isEmptyObj(taskboardData)) return;\n    setUser(auth().currentUser);\n    try {\n      const columns = db.ref(`columns/${taskboardData.id}`);\n      columns.on(\"value\", (snapshot) => {\n        const tmpCols = [];\n        snapshot.forEach((col) => {\n          const val = col.val();\n          if (val.deletedTimestamp) return; // Don't display deleted columns\n          tmpCols.push({\n            id: col.key,\n            ...val,\n          });\n        });\n        setColumns(tmpCols);\n        setReadError(false);\n      });\n    } catch (err) {\n      setReadError(true);\n      console.error(`An error occurred when reading data... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`columns/${taskboardData.id}`).off(\"value\");\n  }, [taskboardData]);\n\n  console.log(\"Readerror is \", readError); // Just keeping this here until we look at using readError\n  if (isBoardLoaded && isEmptyObj(taskboardData)) {\n    return (\n      <div className=\"taskboard-error-lockup\">\n        <Typography variant=\"h5\">Taskboard does not exist</Typography>\n        <Link to=\"chat\">Go back to Home Page</Link>\n      </div>\n    );\n  }\n  return (\n    <div id=\"taskboard-container\">\n      <div className=\"taskboard-navbar\">\n        <p>Board Title Here</p>\n      </div>\n      <div className=\"taskboard-canvas\">\n        {isBoardLoaded ? (\n          <div className=\"taskboard\">\n            {columns.map((column) => {\n              return (\n                <TaskColumn\n                  key={column.id}\n                  boardId={taskboardData.id}\n                  column={column}\n                  user={user}\n                />\n              );\n            })}\n            <NewTaskColumn boardId={taskboardData.id} />\n          </div>\n        ) : (\n          <div className=\"loading-lockup\">\n            <div className=\"spinner-border text-success\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Taskboard;\n","import React, { Component } from \"react\";\nimport \"./Profile.scss\";\n\nimport { db } from \"../../services/firebase\";\nimport { auth } from \"../../services/firebase\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      email: null,\n      username: null,\n      readError: null,\n      writeError: null,\n    };\n    //this.handleChange = this.handleChange.bind(this);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ readError: null });\n\n    try {\n      db.ref(`users/${this.state.user.uid}`).once(\"value\", (snapshot) => {\n        this.setState({\n          email: snapshot.val().email,\n          username: snapshot.val().name ? snapshot.val().name : null,\n        });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"profile\">\n        <div className=\"content-wrap\">\n          <div className=\"name-icon\">D</div>\n          <h1>\n            Welcome,{\" \"}\n            {this.state.username != null\n              ? this.state.username\n              : this.state.email}\n          </h1>\n          <h2>Manage your information to make Chat App work better for you</h2>\n          <div className=\"card\">\n            <div className=\"inner-heading\">Profile</div>\n            <div className=\"info\">\n              <h3>PHOTO</h3>\n              <div className=\"content\">\n                <h4>Add a photo to personalise your account</h4>\n              </div>\n              <div className=\"icon\">\n                D\n                <div className=\"photo\">\n                  <svg\n                    data-v-d223ba98=\"\"\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"camera\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    className=\"svg-inline--fa fa-camera fa-w-16\"\n                    style={{ fontSize: \"17px\" }}\n                  >\n                    <path\n                      data-v-d223ba98=\"\"\n                      fill=\"currentColor\"\n                      d=\"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"\n                      className=\"\"\n                    ></path>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>EMAIL</h3>\n              <div className=\"content\">{this.state.email}</div>\n              <div className=\"popup\">\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>USERNAME</h3>\n              <div className=\"content\">\n                {this.state.username != null\n                  ? this.state.username\n                  : this.state.email}\n              </div>\n              <div className=\"popup\">\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\" style={{ borderBottom: \"none\" }}>\n              <h3>PASSWORD</h3>\n              <div className=\"content\" type=\"password\">\n                ************\n              </div>\n              <div className=\"popup\">\n                <svg\n                  style={{ width: \"20px\", fontSize: \"20px\", height: \"20px\" }}\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"arrow-right\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 448 512\"\n                  className=\"svg-inline--fa fa-arrow-right fa-w-14\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { auth } from \"./services/firebase\";\n\nimport Navbar from \"./Components/Navbar\";\n// import Home from \"./Components/Pages/Home\";\n// import Register from \"./Components/Pages/Register\";\nimport Login from \"./Components/Pages/Login\";\nimport Chat from \"./Components/Pages/Chat\";\nimport Taskboard from \"./Components/Pages/Taskboard\";\nimport Profile from \"./Components/Pages/Profile\";\nimport \"./App.scss\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Navbar authenticated={this.state.authenticated} />\n          <Switch>\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            />\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            />\n            <PrivateRoute\n              path=\"/profile\"\n              authenticated={this.state.authenticated}\n              component={Profile}\n            />\n            <PrivateRoute\n              path=\"/taskboard\"\n              authenticated={this.state.authenticated}\n              component={Taskboard}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"./variables.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.b5d56f8d.png\";"],"sourceRoot":""}