{"version":3,"sources":["img/icon.png","services/firebase.js","helpers/auth.js","Components/Navbar.js","Components/Pages/Login.js","Components/Pages/ForgotPw.js","Components/Pages/Chat.js","Components/Pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","signup","email","password","userName","createUserWithEmailAndPassword","then","a","user","currentUser","sendEmailVerification","ref","uid","set","name","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","logout","signOut","Navbar","id","className","src","Icon","alt","to","this","props","authenticated","onClick","Component","Login","state","error","newpass","username","showForgot","handleChange","bind","handleSignIn","handleSignUp","handleForgotPass","handleUpdatePass","googleSignIn","githubSignIn","onLogin","onRegister","onForgot","event","setState","target","value","preventDefault","message","newPassword","currentuser","updatePassword","emailAddress","sendPasswordResetEmail","console","log","document","getElementById","classList","remove","setTimeout","add","style","height","autoComplete","onSubmit","TextField","required","label","onChange","InputProps","type","padding","icon","faGithub","size","faGoogle","vw","Math","max","documentElement","clientWidth","window","innerWidth","defaultValue","Chat","chats","users","Map","content","readError","writeError","loadingChats","handleSubmit","myRef","React","createRef","chatArea","current","on","snapshot","forEach","snap","push","val","sort","b","timestamp","scrollBy","scrollHeight","key","Date","now","d","getDate","getMonth","getFullYear","getHours","getMinutes","placeholder","faSearch","aria-hidden","role","map","chat","formatTime","has","undefined","get","faPaperPlane","Profile","PublicRoute","component","rest","render","PrivateRoute","pathname","from","location","App","loading","onAuthStateChanged","basename","process","path","ForgotPw","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.439e3125.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.b5d56f8d.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyADjSvD59x-xPFvLQOlfBJQ0HyPrh9O_Hc\",\n  authDomain: \"ses2b-group2.firebaseapp.com\",\n  databaseURL: \"https://ses2b-group2.firebaseio.com\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n","import { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\";\n\nexport function signup(email, password, userName) {\n  return auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(async function () {\n      const user = auth().currentUser;\n      user.sendEmailVerification();\n\n      await db.ref(\"users/\" + user.uid).set({\n        name: userName,\n        email: user.email,\n      });\n    });\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function updatepass(newPassword) {\n  return auth().currentuser().updatePassword(newPassword);\n}\n\nexport function forgotpass(emailAddress) {\n  return auth()\n    .sendPasswordResetEmail(emailAddress)\n    .then(function () {\n      // Email sent.\n      console.log(\"Email Sent\");\n    });\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).set({\n        email: user.email,\n      });\n    });\n}\n\nexport function signInWithGitHub() {\n  const provider = new auth.GithubAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).set({\n        email: user.email,\n      });\n    });\n}\n\nexport function logout() {\n  return auth().signOut();\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\nimport Icon from \"../img/icon.png\";\nimport { logout } from \"../helpers/auth\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div id=\"navbar\">\n        <div className=\"nav\">\n          <img src={Icon} alt=\"Chat Bubble\"></img>\n          <div>Chat App</div>\n        </div>\n\n        <div className=\"links\">\n          <ul>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            {!this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\" onClick={logout}>\n                  SignOut\n                </Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Login.scss\";\n\nimport {\n  signin,\n  signup,\n  signInWithGoogle,\n  signInWithGitHub,\n  forgotpass,\n  updatepass,\n} from \"../../helpers/auth\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      email: \"\",\n      password: \"\",\n      newpass: \"\",\n      username: \"\",\n      showForgot: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleForgotPass = this.handleForgotPass.bind(this);\n    this.handleUpdatePass = this.handleUpdatePass.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n    this.githubSignIn = this.githubSignIn.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n    this.onForgot = this.onForgot.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSignIn(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async handleUpdatePass(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signin(this.state.email, this.state.password).then(\n        async function () {\n          await updatepass(this.state.newpass);\n        }\n      );\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async handleForgotPass(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await forgotpass(this.state.email);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async handleSignUp(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signup(this.state.email, this.state.password, this.state.username);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async googleSignIn() {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async githubSignIn() {\n    try {\n      await signInWithGitHub();\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  onLogin() {\n    document.getElementById(\"container\").classList.remove(\"right-panel-active\");\n    setTimeout(() => {\n      this.setState({ showForgot: false });\n    }, 500);\n  }\n\n  onRegister() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: false });\n  }\n\n  onForgot() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: true });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"bg\" />\n        <div id=\"container\" className=\"login-container\">\n          {!this.state.showForgot ? (\n            <div className=\"form-container sign-up-container\">\n              <h1>Sign Up</h1>\n              <div className=\"input-wrap\">\n                <form autoComplete=\"off\" onSubmit={this.handleSignUp}>\n                  <TextField\n                    id=\"standard\"\n                    label=\"Username\"\n                    name=\"username\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.username }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.password }}\n                  />\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button type=\"submit\" className=\"ghost\">\n                    Register\n                  </button>\n                </form>\n              </div>\n              <div className=\"icons\">\n                <FontAwesomeIcon\n                  icon={faGithub}\n                  size=\"2x\"\n                  onClick={this.githubSignIn}\n                />\n                <FontAwesomeIcon\n                  icon={faGoogle}\n                  size=\"2x\"\n                  onClick={this.googleSignIn}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"form-container sign-up-container forgot\">\n              <form\n                style={{ height: \"auto\" }}\n                autoComplete=\"off\"\n                onSubmit={this.handleForgotPass}\n              >\n                <h1>Forgot Password</h1>\n                <div className=\"input-wrap\">\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button\n                    type=\"submit\"\n                    style={{ padding: 0 }}\n                    className=\"ghost\"\n                  >\n                    Reset Password\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          <div className=\"form-container sign-in-container\">\n            <form autoComplete=\"off\" onSubmit={this.handleSignIn}>\n              <h1>Sign In</h1>\n              <div className=\"input-wrap\">\n                <TextField\n                  required\n                  id=\"standard-required\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.email }}\n                />\n                <TextField\n                  required\n                  id=\"standard-required\"\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.password }}\n                />\n                <span onClick={this.onForgot}>Forgot Password?</span>\n                {this.state.error ? (\n                  <p className=\"text-danger\">{this.state.error}</p>\n                ) : null}\n                <button type=\"submit\" className=\"ghost\">\n                  Login\n                </button>\n                <div className=\"icons\">\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    size=\"2x\"\n                    onClick={this.githubSignIn}\n                  />\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    size=\"2x\"\n                    onClick={this.googleSignIn}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>\n                  {this.state.showForgot\n                    ? \"Remembered password?\"\n                    : \"Already have an account?\"}\n                </h1>\n                <button onClick={this.onLogin} className=\"ghost\">\n                  Sign In\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Don't have an account?</h1>\n                <button onClick={this.onRegister} className=\"ghost\">\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport \"./ForgotPw.scss\";\n\nclass Login extends Component {\n  state = {\n    vw: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n  };\n  render() {\n    return (\n      <div id=\"forgotpw\">\n        {this.state.vw > 768 ? <div className=\"bg\" /> : null}\n\n        <div id=\"container\" className=\"login-container\">\n          <div className=\"form-container sign-up-container\">\n            <h1>Forgot Password</h1>\n            <div className=\"input-wrap\">\n              <TextField\n                required\n                id=\"standard-required\"\n                label=\"Email\"\n                defaultValue=\"\"\n              />\n              <TextField\n                required\n                id=\"standard-required\"\n                label=\"New Password\"\n                type=\"password\"\n                defaultValue=\"\"\n              />\n              <button className=\"ghost\">Change password</button>\n            </div>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>Remembered password?</h1>\n                <Link to=\"/teams-ui\">\n                  <button className=\"ghost\">Sign In</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { db } from \"../../services/firebase\";\nimport { auth } from \"../../services/firebase\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./Chat.scss\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      users: new Map(),\n      content: \"\",\n      readError: null,\n      writeError: null,\n      loadingChats: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.myRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ readError: null, loadingChats: true });\n    const chatArea = this.myRef.current;\n    try {\n      db.ref(\"chats\").on(\"value\", (snapshot) => {\n        let chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n        chats.sort(function (a, b) {\n          return a.timestamp - b.timestamp;\n        });\n        this.setState({ chats });\n        chatArea.scrollBy(0, chatArea.scrollHeight);\n        this.setState({ loadingChats: false });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message, loadingChats: false });\n    }\n    try {\n      db.ref(\"users\").on(\"value\", (snapshot) => {\n        let users = new Map();\n        snapshot.forEach((snap) => {\n          users.set(snap.key, snap.val());\n        });\n\n        this.setState({ users });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ writeError: null });\n    const chatArea = this.myRef.current;\n    try {\n      await db.ref(\"chats\").push({\n        content: this.state.content,\n        timestamp: Date.now(),\n        uid: this.state.user.uid,\n      });\n      this.setState({ content: \"\" });\n      chatArea.scrollBy(0, chatArea.scrollHeight);\n    } catch (error) {\n      this.setState({ writeError: error.message });\n    }\n  }\n\n  formatTime(timestamp) {\n    const d = new Date(timestamp);\n    const time = `${d.getDate()}/${\n      d.getMonth() + 1\n    }/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n    return time;\n  }\n\n  render() {\n    return (\n      <div id=\"chat\" className=\"container\">\n        <h1>Chat</h1>\n        <div className=\"messaging\">\n          <div className=\"inbox_msg\">\n            <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                <div className=\"recent_heading\">\n                  <h4>Recent</h4>\n                </div>\n                <div className=\"srch_bar\">\n                  <div className=\"stylish-input-group\">\n                    <input\n                      type=\"text\"\n                      className=\"search-bar\"\n                      placeholder=\"Search\"\n                    />\n                    <span className=\"input-group-addon\">\n                      <button type=\"button\">\n                        {\" \"}\n                        <FontAwesomeIcon\n                          icon={faSearch}\n                          aria-hidden=\"true\"\n                        />{\" \"}\n                      </button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"inbox_chat\">\n                <div className=\"chat_list active_chat\">\n                  <div className=\"chat_people\">\n                    <div className=\"chat_img\">\n                      {\" \"}\n                      <img\n                        src=\"https://ptetutorials.com/images/user-profile.png\"\n                        alt=\"group-no\"\n                      />{\" \"}\n                    </div>\n                    <div className=\"chat_ib\">\n                      <h5>\n                        Group 1 <span className=\"chat_date\">Dec 25</span>\n                      </h5>\n                      <p>Description / Last Message</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"chat_list\">\n                  <div className=\"chat_people\">\n                    <div className=\"chat_img\">\n                      {\" \"}\n                      <img\n                        src=\"https://ptetutorials.com/images/user-profile.png\"\n                        alt=\"group-no\"\n                      />{\" \"}\n                    </div>\n                    <div className=\"chat_ib\">\n                      <h5>\n                        Group 2 <span className=\"chat_date\">Dec 25</span>\n                      </h5>\n                      <p>Description / Last Message </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"mesgs\" ref={this.myRef}>\n              {/* loading indicator */}\n              {this.state.loadingChats ? (\n                <div className=\"spinner-border text-success\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {/* chat area */}\n              <div className=\"msg_history\">\n                <div className=\"pb-1 mx-3\">\n                  Logged in as:{\" \"}\n                  <strong className=\"text-info\">{this.state.user.email}</strong>\n                </div>\n                <hr />\n                {this.state.chats.map((chat) => {\n                  return (\n                    <div\n                      key={chat.timestamp}\n                      className={\n                        this.state.user.uid === chat.uid\n                          ? \"outgoing_msg\"\n                          : \"incoming_msg\"\n                      }\n                    >\n                      {this.state.user.uid === chat.uid ? (\n                        \"\"\n                      ) : (\n                        <div className=\"incoming_msg_img\">\n                          {\" \"}\n                          <img\n                            src=\"https://ptetutorials.com/images/user-profile.png\"\n                            alt=\"sunil\"\n                          />{\" \"}\n                        </div>\n                      )}\n                      {this.state.user.uid === chat.uid ? (\n                        <div className=\"sent_msg\">\n                          <p>{chat.content}</p>\n                          <span className=\"time_date\">\n                            {this.formatTime(chat.timestamp)}\n                          </span>\n                        </div>\n                      ) : (\n                        <div className=\"received_msg\">\n                          <div className=\"received_withd_msg\">\n                            <div className=\"name-header\">\n                              {this.state.users.has(chat.uid)\n                                ? this.state.users.get(chat.uid).name ===\n                                  undefined\n                                  ? this.state.users.get(chat.uid).email\n                                  : this.state.users.get(chat.uid).name\n                                : \"Anonymous\"}\n                            </div>\n                            <p>{chat.content}</p>\n                            <span className=\"time_date\">\n                              {this.formatTime(chat.timestamp)}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n\n              <form onSubmit={this.handleSubmit} className=\"type_msg\">\n                <div className=\"input_msg_write\">\n                  <textarea\n                    type=\"text\"\n                    placeholder=\"Type a message\"\n                    className=\"form-control write_msg\"\n                    name=\"content\"\n                    onChange={this.handleChange}\n                    value={this.state.content}\n                  ></textarea>\n                  <input />\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button className=\"msg_send_btn\" type=\"submit\">\n                    <FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport \"./Profile.scss\";\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div id=\"profile\">\n        <h1>Profile</h1>\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { auth } from \"./services/firebase\";\n\nimport Navbar from \"./Components/Navbar\";\n// import Home from \"./Components/Pages/Home\";\n// import Register from \"./Components/Pages/Register\";\nimport Login from \"./Components/Pages/Login\";\nimport ForgotPw from \"./Components/Pages/ForgotPw\";\nimport Chat from \"./Components/Pages/Chat\";\nimport Profile from \"./Components/Pages/Profile\";\nimport \"./App.scss\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Navbar authenticated={this.state.authenticated} />\n          <Switch>\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            ></PrivateRoute>\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            ></PublicRoute>\n            <PublicRoute\n              path=\"/forgot-password\"\n              authenticated={this.state.authenticated}\n              component={ForgotPw}\n            ></PublicRoute>\n            <PrivateRoute\n              path=\"/profile\"\n              authenticated={this.state.authenticated}\n              component={Profile}\n            ></PrivateRoute>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './variables.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}