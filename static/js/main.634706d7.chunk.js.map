{"version":3,"sources":["img/icon.png","services/firebase.js","helpers/auth.js","Components/Navbar.js","Components/Pages/Login.js","Components/Pages/ForgotPw.js","Components/Pages/Chat.js","Components/Pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","auth","database","signin","email","password","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","logout","signOut","Navbar","id","className","src","Icon","alt","to","this","props","authenticated","onClick","Component","Login","state","error","newpass","showForgot","handleChange","bind","handleSignIn","handleSignUp","handleForgotPass","handleUpdatePass","googleSignIn","githubSignIn","onLogin","onRegister","onForgot","event","setState","target","name","value","preventDefault","message","then","a","newPassword","currentuser","updatePassword","emailAddress","sendPasswordResetEmail","console","log","catch","createUserWithEmailAndPassword","currentUser","sendEmailVerification","document","getElementById","classList","remove","setTimeout","add","style","height","autoComplete","onSubmit","TextField","required","label","onChange","InputProps","type","padding","defaultValue","icon","faGithub","size","faGoogle","vw","Math","max","documentElement","clientWidth","window","innerWidth","Chat","PublicRoute","component","rest","render","PrivateRoute","pathname","from","location","App","loading","onAuthStateChanged","user","role","basename","process","path","ForgotPw","Profile","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.634706d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.b5d56f8d.png\";","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyADjSvD59x-xPFvLQOlfBJQ0HyPrh9O_Hc\",\n  authDomain: \"ses2b-group2.firebaseapp.com\",\n  databaseURL: \"https://ses2b-group2.firebaseio.com\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n","import { auth } from \"../services/firebase\";\n\nexport function signup(email, password) {\n  return auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(function () {\n      auth().currentUser.sendEmailVerification();\n    });\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function updatepass(newPassword) {\n  return auth().currentuser().updatePassword(newPassword);\n}\n\nexport function forgotpass(emailAddress) {\n  return auth()\n    .sendPasswordResetEmail(emailAddress)\n    .then(function () {\n      // Email sent.\n      console.log(\"Email Sent\");\n    })\n    .catch(function (error) {\n      // An error happened.\n    });\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth().signInWithPopup(provider);\n}\n\nexport function signInWithGitHub() {\n  const provider = new auth.GithubAuthProvider();\n  return auth().signInWithPopup(provider);\n}\n\nexport function logout() {\n  return auth().signOut();\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\nimport Icon from \"../img/icon.png\";\nimport { logout } from \"../helpers/auth\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div id=\"navbar\">\n        <div className=\"nav\">\n          <img src={Icon} alt=\"Chat Bubble\"></img>\n          <div>Chat App</div>\n        </div>\n\n        <div className=\"links\">\n          <ul>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\" onClick={logout}>\n                  SignOut\n                </Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Login.scss\";\n\nimport {\n  signin,\n  signup,\n  signInWithGoogle,\n  signInWithGitHub,\n  forgotpass,\n  updatepass,\n} from \"../../helpers/auth\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      email: \"\",\n      password: \"\",\n      newpass: \"\",\n      showForgot: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleForgotPass = this.handleForgotPass.bind(this);\n    this.handleUpdatePass = this.handleUpdatePass.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n    this.githubSignIn = this.githubSignIn.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n    this.onForgot = this.onForgot.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSignIn(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async handleUpdatePass(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signin(this.state.email, this.state.password).then(\n        async function () {\n          await updatepass(this.state.newpass);\n        }\n      );\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async handleForgotPass(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await forgotpass(this.state.email);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async handleSignUp(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signup(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async googleSignIn() {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async githubSignIn() {\n    try {\n      await signInWithGitHub();\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  onLogin() {\n    document.getElementById(\"container\").classList.remove(\"right-panel-active\");\n    setTimeout(() => {\n      this.setState({ showForgot: false });\n    }, 500);\n  }\n\n  onRegister() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: false });\n  }\n\n  onForgot() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: true });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"bg\" />\n        <div id=\"container\" className=\"login-container\">\n          {!this.state.showForgot ? (\n            <div className=\"form-container sign-up-container\">\n              <h1>Sign Up</h1>\n              <div className=\"input-wrap\">\n                <form autoComplete=\"off\" onSubmit={this.handleSignUp}>\n                  <TextField id=\"standard\" label=\"Username\" defaultValue=\"\" />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.password }}\n                  />\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button type=\"submit\" className=\"ghost\">\n                    Register\n                  </button>\n                </form>\n              </div>\n              <div className=\"icons\">\n                <FontAwesomeIcon\n                  icon={faGithub}\n                  size=\"2x\"\n                  onClick={this.githubSignIn}\n                />\n                <FontAwesomeIcon\n                  icon={faGoogle}\n                  size=\"2x\"\n                  onClick={this.googleSignIn}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"form-container sign-up-container forgot\">\n              <form\n                style={{ height: \"auto\" }}\n                autoComplete=\"off\"\n                onSubmit={this.handleForgotPass}\n              >\n                <h1>Forgot Password</h1>\n                <div className=\"input-wrap\">\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button\n                    type=\"submit\"\n                    style={{ padding: 0 }}\n                    className=\"ghost\"\n                  >\n                    Reset Password\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          <div className=\"form-container sign-in-container\">\n            <form autoComplete=\"off\" onSubmit={this.handleSignIn}>\n              <h1>Sign In</h1>\n              <div className=\"input-wrap\">\n                <TextField\n                  required\n                  id=\"standard-required\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.email }}\n                />\n                <TextField\n                  required\n                  id=\"standard-required\"\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.password }}\n                />\n                <span onClick={this.onForgot}>Forgot Password?</span>\n                {this.state.error ? (\n                  <p className=\"text-danger\">{this.state.error}</p>\n                ) : null}\n                <button type=\"submit\" className=\"ghost\">\n                  Login\n                </button>\n                <div className=\"icons\">\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    size=\"2x\"\n                    onClick={this.githubSignIn}\n                  />\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    size=\"2x\"\n                    onClick={this.googleSignIn}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>\n                  {this.state.showForgot\n                    ? \"Remembered password?\"\n                    : \"Already have an account?\"}\n                </h1>\n                <button onClick={this.onLogin} className=\"ghost\">\n                  Sign In\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Don't have an account?</h1>\n                <button onClick={this.onRegister} className=\"ghost\">\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport \"./ForgotPw.scss\";\n\nclass Login extends Component {\n  state = {\n    vw: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n  };\n  render() {\n    return (\n      <div id=\"forgotpw\">\n        {this.state.vw > 768 ? <div className=\"bg\" /> : null}\n\n        <div id=\"container\" className=\"login-container\">\n          <div className=\"form-container sign-up-container\">\n            <h1>Forgot Password</h1>\n            <div className=\"input-wrap\">\n              <TextField\n                required\n                id=\"standard-required\"\n                label=\"Email\"\n                defaultValue=\"\"\n              />\n              <TextField\n                required\n                id=\"standard-required\"\n                label=\"New Password\"\n                type=\"password\"\n                defaultValue=\"\"\n              />\n              <button className=\"ghost\">Change password</button>\n            </div>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>Remembered password?</h1>\n                <Link to=\"/teams-ui\">\n                  <button className=\"ghost\">Sign In</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport \"./Chat.scss\";\n\nclass Chat extends Component {\n  render() {\n    return (\n      <div id=\"chat\">\n        <h1>Chat</h1>\n      </div>\n    );\n  }\n};\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport \"./Profile.scss\";\n\nclass Chat extends Component {\n  render() {\n    return (\n      <div id=\"profile\">\n        <h1>Profile</h1>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { auth } from \"./services/firebase\";\n\nimport Navbar from \"./Components/Navbar\";\n// import Home from \"./Components/Pages/Home\";\n// import Register from \"./Components/Pages/Register\";\nimport Login from \"./Components/Pages/Login\";\nimport ForgotPw from \"./Components/Pages/ForgotPw\";\nimport Chat from \"./Components/Pages/Chat\";\nimport Profile from \"./Components/Pages/Profile\";\nimport \"./App.scss\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Navbar authenticated={this.state.authenticated} />\n          <Switch>\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            ></PrivateRoute>\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            ></PublicRoute>\n            <PublicRoute\n              path=\"/forgot-password\"\n              authenticated={this.state.authenticated}\n              component={ForgotPw}\n            ></PublicRoute>\n            <PrivateRoute\n              path=\"/profile\"\n              authenticated={this.state.authenticated}\n              component={Profile}\n            ></PrivateRoute>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './variables.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}