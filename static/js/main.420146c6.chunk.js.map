{"version":3,"sources":["services/firebase.js","helpers/auth.js","Components/Navbar.js","Components/Pages/Login.js","helpers/db.js","services/sha1.js","Components/Participant-Components/Participants-custom-hooks.js","Components/Participant-Components/AddParticipant.js","Components/Participant-Components/ParticipantListItem.js","Components/Participant-Components/ParticipantList.js","Components/Pages/Modal.js","Components/Pages/Chat.js","Components/Presentational/TaskDescription/TaskDescription.js","Components/Presentational/NewTaskComment/NewTaskComment.js","Components/Presentational/TaskActivity/TaskActivity.js","Components/Presentational/TaskDelete/TaskDelete.js","Components/Presentational/TaskDetails/TaskDetails.js","Components/Presentational/Modal/Modal.js","Components/Presentational/TaskColumn/TaskColumn.js","Components/Presentational/NewTaskColumn/NewTaskColumn.js","Components/Presentational/TaskboardNavbar/TaskboardNavbar.js","helpers/utils.js","Components/Pages/Taskboard.js","Components/Pages/Profile.js","App.js","serviceWorker.js","index.js","img/icon.png"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","auth","db","database","signup","email","password","userName","createUserWithEmailAndPassword","then","a","user","currentUser","sendEmailVerification","ref","uid","set","name","signin","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","update","displayName","signInWithGitHub","GithubAuthProvider","logout","signOut","Navbar","id","className","src","Icon","alt","to","this","props","authenticated","onClick","Component","Login","state","error","loginError","signupError","forgotpwError","newpass","username","showForgot","handleChange","bind","handleSignIn","handleSignUp","handleForgotPass","handleUpdatePass","googleSignIn","githubSignIn","onLogin","onRegister","onForgot","event","setState","target","value","preventDefault","message","newPassword","currentuser","updatePassword","emailAddress","sendPasswordResetEmail","console","log","document","getElementById","classList","remove","setTimeout","add","style","height","autoComplete","onSubmit","TextField","required","label","onChange","InputProps","type","padding","icon","faGithub","size","faGoogle","display","textAlign","createTaskboard","userId","groupId","push","description","createdBy","createdTimestamp","Date","now","taskboard","getKey","updateTaskboard","taskboardId","createTaskColumn","boardId","deleteTaskColumn","deletedTimestamp","deleteTask","columnId","taskId","createTask","task","updateTaskColumn","newColumnId","oldColumnId","once","val","updateTask","updatedFields","createComment","comment","deleteComment","commentId","getUserById","Sha1","msg","options","opt","Object","assign","msgFormat","outFormat","str","TextEncoder","encode","reduce","prev","curr","String","fromCharCode","e","unescape","encodeURIComponent","utf8Encode","hexStr","replace","match","map","byte","parseInt","join","hexBytesToString","K","H","l","length","N","Math","ceil","M","Array","i","j","charCodeAt","pow","floor","W","t","ROTL","b","c","d","s","T","f","h","toString","slice","separator","x","y","z","n","useInputValue","initialValue","useState","inputValue","setInputValue","changeInput","clearInput","keyInput","callback","which","keyCode","useParticipants","participants","addParticipants","text","regist","setParticipants","concat","checked","registered","userExists","userID","checkParticipants","idx","participant","index","removeParticipants","filter","AddParticipant","memo","Paper","margin","Grid","container","xs","md","item","paddingRight","placeholder","onInputChange","onKeyPress","onInputKeyPress","fullWidth","Button","variant","onButtonClick","ParticipantListItem","shortenedString","substring","ListItem","divider","Checkbox","onCheckBoxToggle","disableRipple","color","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","ParticipantList","items","List","overflow","key","onItemRemove","onItemCheck","AddGroupParticipant","clearInputAndAddParticipant","_","userEx","users","k","v","AddGroupLeader","useStyles","makeStyles","theme","modal","alignItems","justifyContent","paper","position","width","minWidth","backgroundColor","palette","background","borderRadius","boxShadow","maxHeight","AnimatedModal","classes","React","open","setOpen","savingGroup","setSavingGroup","saveError","setSaveError","groupName","setGroupName","groupDesc","setGroupDesc","leaders","setLeaders","Map","groups","setGroups","useEffect","on","snapshot","groups_temp","forEach","snap","off","handleClose","Fab","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","borderBottom","marginTop","inputProps","fontSize","marginBottom","role","marginLeft","marginRight","flexDirection","groupID","SHA1","hash","has","get","undefined","groupAccess","refreshGroups","fontWeight","border","borderColor","autoFocus","Chat","handleSelectGroup","selectedGroupID","selectedGroupName","chats","sort","timestamp","currentTarget","handleCreateTaskboard","localStorage","setItem","history","usrGroups","boards","content","readError","writeError","loadingChats","handleSubmit","groupsList","groupsTemp","keys","next","prevProps","prevState","board","boardVal","getDate","getMonth","getFullYear","getHours","getMinutes","faSearch","aria-hidden","overflowY","paddingBottom","from","values","result","FormControl","taskboardList","Select","labelId","displayEmpty","MenuItem","disabled","Typography","faPlus","chat","formatTime","onKeyDown","_handleKeyDown","faPaperPlane","withRouter","withStyles","TaskDescription","taskDetails","newDescription","setNewDescription","isEditing","setIsEditing","submitNewDescription","stopEditing","component","rows","faTimes","NewTaskComment","setText","submitComment","lastUpdatedTimestamp","TaskActivity","comments","setComments","usernameMap","setUsernameMap","tmpComments","unshift","tmpUsernameMap","Promise","all","err","alert","handleDeleteComment","moment","utc","fromNow","TaskDelete","close","handleDeleteTask","TaskDetails","newTaskName","setNewTaskName","isEditingTaskName","setIsEditingTaskName","submitNewTaskName","onBlur","Modal","closeModal","children","handleKeyDown","window","addEventListener","removeEventListener","TaskColumn","column","tasks","setTasks","newTask","setNewTask","selectedTaskId","setSelectedTaskId","tmpTasks","col","handleDeleteColumn","handleCreateTask","createdTimeStamp","handleMoveTask","targetListId","sourceListId","handleCloseModal","onDrop","sourceId","dataTransfer","getData","sourceEl","targetEl","sourceTaskListId","closest","targetTaskListId","handleDrop","onDragStart","setData","handleDragStart","onDragOver","handleDragOver","draggable","Card","CardContent","gutterBottom","NewTaskColumn","setName","handleCancelEditing","TaskboardNavbar","isEditingTitle","setIsEditingTitle","newTitleText","setNewTitleText","titleText","setTitleText","saveNewTitle","faCheckCircle","faTimesCircle","faEdit","isEmptyObj","obj","Taskboard","taskboardData","setTaskboardData","isBoardLoaded","setIsBoardLoaded","columns","setColumns","setReadError","setUser","getItem","URLSearchParams","location","search","Error","getTaskboardData","tmpCols","Profile","data-v-d223ba98","focusable","data-prefix","data-icon","xmlns","viewBox","fill","PublicRoute","rest","render","PrivateRoute","pathname","App","loading","onAuthStateChanged","basename","process","path","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.420146c6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyADjSvD59x-xPFvLQOlfBJQ0HyPrh9O_Hc\",\n  authDomain: \"ses2b-group2.firebaseapp.com\",\n  databaseURL: \"https://ses2b-group2.firebaseio.com\",\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n","import { auth } from \"../services/firebase\";\nimport { db } from \"../services/firebase\";\n\nexport function signup(email, password, userName) {\n  return auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(async function () {\n      const user = auth().currentUser;\n      user.sendEmailVerification();\n\n      await db.ref(\"users/\" + user.uid).set({\n        name: userName,\n        email: user.email,\n      });\n    });\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function updatepass(newPassword) {\n  return auth().currentuser().updatePassword(newPassword);\n}\n\nexport function forgotpass(emailAddress) {\n  return auth()\n    .sendPasswordResetEmail(emailAddress)\n    .then(function () {\n      // Email sent.\n      console.log(\"Email Sent\");\n    });\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).update({\n        email: user.email,\n        name: user.displayName,\n      });\n    });\n}\n\nexport function signInWithGitHub() {\n  const provider = new auth.GithubAuthProvider();\n  return auth()\n    .signInWithPopup(provider)\n    .then(async function () {\n      const user = auth().currentUser;\n      await db.ref(\"users/\" + user.uid).update({\n        email: user.email,\n        name: user.displayName,\n      });\n    });\n}\n\nexport function logout() {\n  return auth().signOut();\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.scss\";\nimport Icon from \"../img/icon.png\";\nimport { logout } from \"../helpers/auth\";\n\nclass Navbar extends Component {\n  render() {\n    // console.log(window.location.pathname === \"/teams-ui/chat\")\n    // if (window.location.pathname === \"/teams-ui/login\"\n    //   || window.location.pathname === \"/teams-ui\") {\n    return (\n      <div id=\"navbar\">\n        <div className=\"nav\">\n          <img src={Icon} alt=\"Chat Bubble\"></img>\n          <div>Chat App</div>\n        </div>\n\n        <div className=\"links\">\n          <ul>\n            <li>\n              <Link to=\"/chat\">Groups</Link>\n            </li>\n            {!this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n            {this.props.authenticated ? (\n              <li>\n                <Link to=\"/login\" onClick={logout}>\n                  SignOut\n                </Link>\n              </li>\n            ) : (\n              \"\"\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Login.scss\";\n\nimport {\n  signin,\n  signup,\n  signInWithGoogle,\n  signInWithGitHub,\n  forgotpass,\n  updatepass,\n} from \"../../helpers/auth\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      loginError: null,\n      signupError: null,\n      forgotpwError: null,\n      email: \"\",\n      password: \"\",\n      newpass: \"\",\n      username: \"\",\n      showForgot: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSignIn = this.handleSignIn.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleForgotPass = this.handleForgotPass.bind(this);\n    this.handleUpdatePass = this.handleUpdatePass.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n    this.githubSignIn = this.githubSignIn.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n    this.onRegister = this.onRegister.bind(this);\n    this.onForgot = this.onForgot.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSignIn(event) {\n    event.preventDefault();\n    this.setState({ loginError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async handleUpdatePass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await signin(this.state.email, this.state.password).then(\n        async function () {\n          await updatepass(this.state.newpass);\n        }\n      );\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleForgotPass(event) {\n    event.preventDefault();\n    this.setState({ forgotpwError: \"\" });\n    try {\n      await forgotpass(this.state.email);\n    } catch (error) {\n      this.setState({ forgotpwError: error.message });\n    }\n  }\n\n  async handleSignUp(event) {\n    event.preventDefault();\n    this.setState({ signupError: \"\" });\n    try {\n      await signup(this.state.email, this.state.password, this.state.username);\n    } catch (error) {\n      this.setState({ signupError: error.message });\n    }\n  }\n\n  async googleSignIn() {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  async githubSignIn() {\n    try {\n      await signInWithGitHub();\n    } catch (error) {\n      this.setState({ loginError: error.message });\n    }\n  }\n\n  onLogin() {\n    document.getElementById(\"container\").classList.remove(\"right-panel-active\");\n    setTimeout(() => {\n      this.setState({ showForgot: false });\n    }, 500);\n  }\n\n  onRegister() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: false });\n  }\n\n  onForgot() {\n    document.getElementById(\"container\").classList.add(\"right-panel-active\");\n    this.setState({ showForgot: true });\n  }\n\n  render() {\n    return (\n      <div id=\"login\">\n        <div className=\"bg\" />\n        <div id=\"container\" className=\"login-container\">\n          {!this.state.showForgot ? (\n            <div className=\"form-container sign-up-container\">\n              <h1>Sign Up</h1>\n              <div className=\"input-wrap\">\n                <form autoComplete=\"off\" onSubmit={this.handleSignUp}>\n                  <TextField\n                    id=\"standard\"\n                    label=\"Username\"\n                    name=\"username\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.username }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.password }}\n                  />\n                  {this.state.signupError ? (\n                    <p className=\"text-danger\">{this.state.signupError}</p>\n                  ) : null}\n                  <button type=\"submit\" className=\"ghost\">\n                    Register\n                  </button>\n                </form>\n              </div>\n              <div className=\"icons\">\n                <FontAwesomeIcon\n                  icon={faGithub}\n                  size=\"2x\"\n                  onClick={this.githubSignIn}\n                />\n                <FontAwesomeIcon\n                  icon={faGoogle}\n                  size=\"2x\"\n                  onClick={this.googleSignIn}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"form-container sign-up-container forgot\">\n              <form\n                style={{ height: \"auto\" }}\n                autoComplete=\"off\"\n                onSubmit={this.handleForgotPass}\n              >\n                <h1>Forgot Password</h1>\n                <div className=\"input-wrap\">\n                  <TextField\n                    required\n                    id=\"standard-required\"\n                    label=\"Email\"\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    InputProps={{ value: this.state.email }}\n                  />\n                  {this.state.forgotpwError ? (\n                    <p className=\"text-danger\">{this.state.forgotpwError}</p>\n                  ) : null}\n                  <button\n                    type=\"submit\"\n                    style={{ padding: 0 }}\n                    className=\"ghost\"\n                  >\n                    Reset Password\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n\n          <div className=\"form-container sign-in-container\">\n            <form autoComplete=\"off\" onSubmit={this.handleSignIn}>\n              <h1>Sign In</h1>\n              <div className=\"input-wrap\">\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.email }}\n                />\n                <TextField\n                  id=\"standard-required\"\n                  label=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  InputProps={{ value: this.state.password }}\n                />\n                <span\n                  style={{ display: \"block\", textAlign: \"left\" }}\n                  onClick={this.onForgot}\n                >\n                  Forgot Password?\n                </span>\n                {this.state.loginError ? (\n                  <p className=\"text-danger\">{this.state.loginError}</p>\n                ) : null}\n                <button type=\"submit\" className=\"ghost\">\n                  Login\n                </button>\n                <div className=\"icons\">\n                  <FontAwesomeIcon\n                    icon={faGithub}\n                    size=\"2x\"\n                    onClick={this.githubSignIn}\n                  />\n                  <FontAwesomeIcon\n                    icon={faGoogle}\n                    size=\"2x\"\n                    onClick={this.googleSignIn}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <h1>\n                  {this.state.showForgot\n                    ? \"Remember password?\"\n                    : \"Already have an account?\"}\n                </h1>\n                <button onClick={this.onLogin} className=\"ghost\">\n                  Sign In\n                </button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Don't have an account?</h1>\n                <button onClick={this.onRegister} className=\"ghost\">\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import { db } from \"../services/firebase\";\n\nexport function readChats() {\n  let abc = [];\n  db.ref(\"chats\").on(\"value\", (snapshot) => {\n    snapshot.forEach((snap) => {\n      abc.push(snap.val());\n    });\n    return abc;\n  });\n}\n\nexport function writeChats(message) {\n  return db.ref(\"chats\").push({\n    content: message.content,\n    timestamp: message.timestamp,\n    uid: message.uid,\n  });\n}\n\nexport async function createTaskboard(userId, groupId) {\n  const taskboard = await db.ref(`taskboards/${groupId}`).push({\n    name: \"New Taskboard\",\n    description: \"This is a new taskboard\",\n    createdBy: userId,\n    createdTimestamp: Date.now(),\n  });\n  return taskboard.getKey();\n}\n\nexport function updateTaskboard(groupId, taskboardId, taskboard) {\n  return db.ref(`taskboards/${groupId}/${taskboardId}`).update(taskboard);\n}\n\n/**\n * Create a new column in the database.\n * The return value is void in all cases.\n * @param {string} columnsKey - The unique key that all columns are created under\n * @param {string} name - The name of the column\n */\nexport function createTaskColumn(boardId, name) {\n  return db.ref(`columns/${boardId}`).push({\n    name,\n    createdTimestamp: Date.now(),\n  });\n}\n\nexport function deleteTaskColumn(boardId, id) {\n  return db.ref(`columns/${boardId}/${id}`).update({\n    deletedTimestamp: Date.now(),\n  });\n}\n\nexport function deleteTask(columnId, taskId) {\n  return db.ref(`tasks/${columnId}/${taskId}`).update({\n    deletedTimestamp: Date.now(),\n  });\n}\n\nexport function createTask(columnId, task) {\n  return db.ref(`tasks/${columnId}`).push(task);\n}\n\nexport async function updateTaskColumn(newColumnId, oldColumnId, taskId) {\n  try {\n    //TODO: Make this logic more sound when second operation fails need to undo first\n    let task = await db.ref(`tasks/${oldColumnId}/${taskId}`).once(\"value\");\n    await db.ref(`tasks/${newColumnId}/${taskId}`).update(task.val());\n    await db.ref(`tasks/${oldColumnId}/${taskId}`).remove();\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function updateTask(columnId, taskId, updatedFields) {\n  return db.ref(`tasks/${columnId}/${taskId}`).update(updatedFields);\n}\n\nexport function createComment(taskId, comment) {\n  return db.ref(`taskComments/${taskId}`).push(comment);\n}\n\nexport function deleteComment(taskId, commentId) {\n  return db.ref(`taskComments/${taskId}/${commentId}`).remove();\n}\n\nexport async function getUserById(userId) {\n  return db.ref(`users/${userId}`).once(\"value\");\n}\n","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n/* SHA-1 (FIPS 180-4) implementation in JavaScript                    (c) Chris Veness 2002-2019  */\n/*                                                                                   MIT Licence  */\n/* www.movable-type.co.uk/scripts/sha1.html                                                       */\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n/**\n * SHA-1 hash function reference implementation.\n *\n * This is an annotated direct implementation of FIPS 180-4, without any optimisations. It is\n * intended to aid understanding of the algorithm rather than for production use.\n *\n * While it could be used where performance is not critical, I would recommend using the ‘Web\n * Cryptography API’ (developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest) for the browser,\n * or the ‘crypto’ library (nodejs.org/api/crypto.html#crypto_class_hash) in Node.js.\n *\n * See csrc.nist.gov/groups/ST/toolkit/secure_hashing.html\n *     csrc.nist.gov/groups/ST/toolkit/examples.html\n */\nclass Sha1 {\n  /**\n   * Generates SHA-1 hash of string.\n   *\n   * @param   {string} msg - (Unicode) string to be hashed.\n   * @param   {Object} [options]\n   * @param   {string} [options.msgFormat=string] - Message format: 'string' for JavaScript string\n   *   (gets converted to UTF-8 for hashing); 'hex-bytes' for string of hex bytes ('616263' ≡ 'abc') .\n   * @param   {string} [options.outFormat=hex] - Output format: 'hex' for string of contiguous\n   *   hex bytes; 'hex-w' for grouping hex bytes into groups of (4 byte / 8 character) words.\n   * @returns {string} Hash of msg as hex character string.\n   *\n   * @example\n   *   import Sha1 from './sha1.js';\n   *   const hash = Sha1.hash('abc'); // 'a9993e364706816aba3e25717850c26c9cd0d89d'\n   */\n  static hash(msg, options) {\n    const defaults = { msgFormat: \"string\", outFormat: \"hex\" };\n    const opt = Object.assign(defaults, options);\n\n    switch (opt.msgFormat) {\n      default: // default is to convert string to UTF-8, as SHA only deals with byte-streams\n      case \"string\":\n        msg = utf8Encode(msg);\n        break;\n      case \"hex-bytes\":\n        msg = hexBytesToString(msg);\n        break; // mostly for running tests\n    }\n\n    // constants [§4.2.1]\n    const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n\n    // initial hash value [§5.3.1]\n    const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n    // PREPROCESSING [§6.1.1]\n\n    msg += String.fromCharCode(0x80); // add trailing '1' bit (+ 0's padding) to string [§5.1.1]\n\n    // convert string msg into 512-bit/16-integer blocks arrays of ints [§5.2.1]\n    const l = msg.length / 4 + 2; // length (in 32-bit integers) of msg + ‘1’ + appended length\n    const N = Math.ceil(l / 16); // number of 16-integer-blocks required to hold 'l' ints\n    const M = new Array(N);\n\n    for (let i = 0; i < N; i++) {\n      M[i] = new Array(16);\n      for (let j = 0; j < 16; j++) {\n        // encode 4 chars per integer, big-endian encoding\n        M[i][j] =\n          (msg.charCodeAt(i * 64 + j * 4 + 0) << 24) |\n          (msg.charCodeAt(i * 64 + j * 4 + 1) << 16) |\n          (msg.charCodeAt(i * 64 + j * 4 + 2) << 8) |\n          (msg.charCodeAt(i * 64 + j * 4 + 3) << 0);\n      } // note running off the end of msg is ok 'cos bitwise ops on NaN return 0\n    }\n    // add length (in bits) into final pair of 32-bit integers (big-endian) [§5.1.1]\n    // note: most significant word would be (len-1)*8 >>> 32, but since JS converts\n    // bitwise-op args to 32 bits, we need to simulate this by arithmetic operators\n    M[N - 1][14] = ((msg.length - 1) * 8) / Math.pow(2, 32);\n    M[N - 1][14] = Math.floor(M[N - 1][14]);\n    M[N - 1][15] = ((msg.length - 1) * 8) & 0xffffffff;\n\n    // HASH COMPUTATION [§6.1.2]\n\n    for (let i = 0; i < N; i++) {\n      const W = new Array(80);\n\n      // 1 - prepare message schedule 'W'\n      for (let t = 0; t < 16; t++) W[t] = M[i][t];\n      for (let t = 16; t < 80; t++)\n        W[t] = Sha1.ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n\n      // 2 - initialise five working variables a, b, c, d, e with previous hash value\n      let a = H[0],\n        b = H[1],\n        c = H[2],\n        d = H[3],\n        e = H[4];\n\n      // 3 - main loop (use JavaScript '>>> 0' to emulate UInt32 variables)\n      for (let t = 0; t < 80; t++) {\n        const s = Math.floor(t / 20); // seq for blocks of 'f' functions and 'K' constants\n        const T =\n          (Sha1.ROTL(a, 5) + Sha1.f(s, b, c, d) + e + K[s] + W[t]) >>> 0;\n        e = d;\n        d = c;\n        c = Sha1.ROTL(b, 30) >>> 0;\n        b = a;\n        a = T;\n      }\n\n      // 4 - compute the new intermediate hash value (note 'addition modulo 2^32' – JavaScript\n      // '>>> 0' coerces to unsigned UInt32 which achieves modulo 2^32 addition)\n      H[0] = (H[0] + a) >>> 0;\n      H[1] = (H[1] + b) >>> 0;\n      H[2] = (H[2] + c) >>> 0;\n      H[3] = (H[3] + d) >>> 0;\n      H[4] = (H[4] + e) >>> 0;\n    }\n\n    // convert H0..H4 to hex strings (with leading zeros)\n    for (let h = 0; h < H.length; h++)\n      H[h] = (\"00000000\" + H[h].toString(16)).slice(-8);\n\n    // concatenate H0..H4, with separator if required\n    const separator = opt.outFormat === \"hex-w\" ? \" \" : \"\";\n\n    return H.join(separator);\n\n    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n    function utf8Encode(str) {\n      try {\n        return new TextEncoder()\n          .encode(str, \"utf-8\")\n          .reduce((prev, curr) => prev + String.fromCharCode(curr), \"\");\n      } catch (e) {\n        // no TextEncoder available?\n        return unescape(encodeURIComponent(str)); // monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n      }\n    }\n\n    function hexBytesToString(hexStr) {\n      // convert string of hex numbers to a string of chars (eg '616263' -> 'abc').\n      const str = hexStr.replace(\" \", \"\"); // allow space-separated groups\n      return str === \"\"\n        ? \"\"\n        : str\n            .match(/.{2}/g)\n            .map((byte) => String.fromCharCode(parseInt(byte, 16)))\n            .join(\"\");\n    }\n  }\n\n  /**\n   * Function 'f' [§4.1.1].\n   * @private\n   */\n  static f(s, x, y, z) {\n    switch (s) {\n      case 0:\n        return (x & y) ^ (~x & z); // Ch()\n      case 1:\n        return x ^ y ^ z; // Parity()\n      case 2:\n        return (x & y) ^ (x & z) ^ (y & z); // Maj()\n      case 3:\n        return x ^ y ^ z; // Parity()\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Rotates left (circular left shift) value x by n positions [§3.2.5].\n   * @private\n   */\n  static ROTL(x, n) {\n    return (x << n) | (x >>> (32 - n));\n  }\n}\n\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\nexport default Sha1;\n","import { useState } from \"react\";\n\nexport const useInputValue = (initialValue = \"\") => {\n  const [inputValue, setInputValue] = useState(initialValue);\n\n  return {\n    inputValue,\n    changeInput: (event) => setInputValue(event.target.value),\n    clearInput: () => setInputValue(\"\"),\n    keyInput: (event, callback) => {\n      if (event.which === 13 || event.keyCode === 13) {\n        callback(inputValue);\n        return true;\n      }\n\n      return false;\n    },\n  };\n};\n\nexport const useParticipants = (props) => {\n  //const [participants, setParticipants] = useState(initialValue);\n  let participants = props.participants;\n\n  return {\n    //participants: participants,\n    addParticipants: (text, regist) => {\n      //console.log(regist);\n      if (text !== \"\") {\n        props.setParticipants(\n          participants.concat({\n            text,\n            checked: false,\n            registered: regist.userExists,\n            uid: regist.userID,\n          })\n        );\n      }\n    },\n    checkParticipants: (idx) => {\n      props.setParticipants(\n        participants.map((participant, index) => {\n          if (idx === index) {\n            participant.checked = !participant.checked;\n          }\n\n          return participant;\n        })\n      );\n    },\n    removeParticipants: (idx) => {\n      props.setParticipants(\n        participants.filter((participant, index) => idx !== index)\n      );\n    },\n  };\n};\n","import React, { memo } from \"react\";\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nconst AddParticipant = memo((props) => {\n  return (\n    <Paper style={{ margin: 0, padding: 10 }}>\n      <Grid container>\n        <Grid xs={10} md={10} item style={{ paddingRight: 16 }}>\n          <TextField\n            placeholder=\"Add Participants Here\"\n            value={props.inputValue}\n            onChange={props.onInputChange}\n            onKeyPress={props.onInputKeyPress}\n            fullWidth\n          />\n        </Grid>\n        <Grid xs={2} md={1} item>\n          <Button fullWidth variant=\"outlined\" onClick={props.onButtonClick}>\n            <PersonAddIcon />\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n});\n\nexport default AddParticipant;\n","import React, { memo } from \"react\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport {\n  ListItem,\n  Checkbox,\n  IconButton,\n  ListItemText,\n  ListItemSecondaryAction,\n} from \"@material-ui/core\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\n\nconst ParticipantListItem = memo((props) => {\n  let shortenedString;\n\n  if (props.text.length > 10) {\n    shortenedString = `${props.text.substring(0, 10)}...`;\n  } else {\n    shortenedString = props.text;\n  }\n\n  return (\n    <ListItem divider={props.divider} style={{ margin: -12 }}>\n      <Checkbox\n        onClick={props.onCheckBoxToggle}\n        checked={props.checked}\n        disableRipple\n      />\n      <PersonIcon style={{ color: \"#05728f\", paddingRight: 5 }} />\n      <ListItemText primary={shortenedString} />\n      {/*<ListItemText primary=\"Test\" />*/}\n      <ListItemText\n        primary={props.registered ? \"Registered\" : \"UnRegistered\"}\n        style={props.registered ? { color: \"green\" } : { color: \"red\" }}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label=\"Delete Participant\"\n          onClick={props.onButtonClick}\n        >\n          <DeleteOutlined />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n});\n\nexport default ParticipantListItem;\n","import React, { memo } from \"react\";\nimport { List, Paper } from \"@material-ui/core\";\n\nimport ParticipantListItem from \"./ParticipantListItem\";\n\nconst ParticipantList = memo((props) => (\n  <div>\n    {props.items.length > 0 && (\n      <Paper style={{ margin: 10 }}>\n        <List style={{ overflow: \"visible\" }}>\n          {props.items.map((participant, idx) => (\n            <ParticipantListItem\n              {...participant}\n              key={`ParticipantItem.${idx}`}\n              divider={idx !== props.items.length - 1}\n              onButtonClick={() => props.onItemRemove(idx)}\n              onCheckBoxToggle={() => props.onItemCheck(idx)}\n            />\n          ))}\n        </List>\n      </Paper>\n    )}\n  </div>\n));\n\nexport default ParticipantList;\n","import React, { memo, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Modal from \"@material-ui/core/Modal\";\nimport \"./Modal.scss\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport SHA1 from \"../../services/sha1\";\n\nimport {\n  useInputValue,\n  useParticipants,\n} from \"../Participant-Components/Participants-custom-hooks\";\nimport AddParticipant from \"../Participant-Components/AddParticipant\";\nimport ParticipantList from \"../Participant-Components/ParticipantList\";\n\nimport { db } from \"../../services/firebase\";\n\nconst AddGroupParticipant = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = (_) => {\n    const userExists = () => {\n      let userEx = false;\n\n      let uid = null;\n\n      for (let [k, v] of props.users) {\n        //console.log(\"Key: \" + k);\n        //console.log(\"Value: \" + v);\n        if (v.email === inputValue || v.name === inputValue) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, userExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n      />\n    </div>\n  );\n});\n\nconst AddGroupLeader = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const {\n    //participants,\n    addParticipants,\n    checkParticipants,\n    removeParticipants,\n  } = useParticipants(props);\n  const clearInputAndAddParticipant = (_) => {\n    const userExists = () => {\n      let userEx = false;\n      let uid = null;\n\n      for (let [k, v] of props.users) {\n        //console.log(\"Key: \" + k);\n        //console.log(\"Value: \" + v);\n        if (v.email === inputValue || v.name === inputValue) {\n          userEx = true;\n          uid = k;\n        }\n      }\n      return {\n        userExists: userEx,\n        userID: uid,\n      };\n    };\n\n    clearInput();\n    addParticipants(inputValue, userExists());\n  };\n  return (\n    <div>\n      <AddParticipant\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddParticipant}\n        onInputKeyPress={(event) =>\n          keyInput(event, clearInputAndAddParticipant)\n        }\n      />\n      <ParticipantList\n        items={props.participants}\n        onItemCheck={(idx) => checkParticipants(idx)}\n        onItemRemove={(idx) => removeParticipants(idx)}\n      />\n    </div>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    position: \"absolute\",\n    width: \"35%\",\n    minWidth: \"620px\",\n    height: \"auto\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"0px, 0px 0px 0px\",\n    borderRadius: \"10px\",\n    boxShadow:\n      \"0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)\",\n    overflow: \"auto\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function AnimatedModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [savingGroup, setSavingGroup] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n\n  const [groupName, setGroupName] = useState(\"\");\n  const [groupDesc, setGroupDesc] = useState(\"\");\n\n  const [participants, setParticipants] = useState([]);\n  const [leaders, setLeaders] = useState([]);\n\n  const [groups, setGroups] = useState(new Map());\n\n  useEffect(() => {\n    try {\n      db.ref(\"groups\").on(\"value\", (snapshot) => {\n        let groups_temp = new Map();\n        snapshot.forEach((snap) => {\n          groups_temp.set(snap.key, snap.val());\n        });\n\n        setGroups(groups_temp);\n      });\n    } catch (error) {\n      setSaveError(error.message);\n    }\n    return () => {\n      db.ref(\"groups\").off(\"value\");\n    };\n  }, []);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleNameChange = (event) => {\n    setGroupName(event.target.value);\n  };\n\n  const handleDescChange = (event) => {\n    setGroupDesc(event.target.value);\n  };\n\n  const handleSaveGroup = (event) => {\n    setSavingGroup(true);\n    setSaveError(null);\n\n    try {\n      let groupID = SHA1.hash(groupName);\n\n      if (!groups.has(groupID)) {\n        db.ref(\"groups/\" + groupID).update({\n          name: groupName,\n          description: groupDesc,\n          id: groupID,\n        });\n\n        /* Template db call for storing chats to a group\n        db.ref(\"groups/6c48a6eadfed63a0af3e39eb36911e24b4e356de/chats/\").push({\n          content: this.state.content,\n          timestamp: Date.now(),\n          uid: this.state.user.uid,\n        });\n        */\n\n        for (let i = 0; i < participants.length; ++i) {\n          if (\n            participants[i].registered === true &&\n            participants[i].checked === true\n          ) {\n            let displayName = props.users.get(participants[i].uid).name;\n\n            if (props.users.get(participants[i].uid).name === undefined) {\n              displayName = props.users.get(participants[i].uid).email;\n            }\n\n            db.ref(`groups/${groupID}/members/${participants[i].uid}`).update({\n              displayName: displayName,\n              groupAccess: \"member\",\n            });\n\n            db.ref(`users/${participants[i].uid}/groups/${groupID}`).update({\n              displayName: displayName,\n              groupAccess: \"member\",\n            });\n          }\n        }\n\n        for (let i = 0; i < leaders.length; ++i) {\n          if (leaders[i].registered === true && leaders[i].checked === true) {\n            let displayName = props.users.get(leaders[i].uid).name;\n\n            if (props.users.get(leaders[i].uid).name === undefined) {\n              displayName = props.users.get(leaders[i].uid).email;\n            }\n            db.ref(`groups/${groupID}/members/${leaders[i].uid}`).update({\n              displayName: displayName,\n              groupAccess: \"leader\",\n            });\n            db.ref(`users/${leaders[i].uid}/groups/${groupID}`).update({\n              displayName: displayName,\n              groupAccess: \"leader\",\n            });\n          }\n        }\n\n        props.refreshGroups();\n\n        setSavingGroup(false);\n        setOpen(false);\n        setParticipants([]);\n        setLeaders([]);\n      } else {\n        setSavingGroup(false);\n        setSaveError(\"Group exists\");\n      }\n    } catch (error) {\n      setSaveError(error);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"fab\">\n        <Fab color=\"primary\" aria-label=\"add\" onClick={handleOpen}>\n          <GroupAddIcon />\n        </Fab>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <form className={classes.paper}>\n            <div className=\"new_group_header\" style={{ background: \"#05728f\" }}>\n              <h2\n                style={{\n                  color: \"#fff\",\n                  borderBottom: \"1px solid #05728f\",\n                  padding: \"1em 4em 1em 4em\",\n                }}\n              >\n                {\" \"}\n                Create Group\n              </h2>\n            </div>\n            <div\n              className=\"new_group_details\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\", marginTop: \"50px\" }}>\n                {\" \"}\n                Group Name{\" \"}\n              </h6>\n              <TextField\n                className=\"group_name\"\n                inputProps={{ style: { fontSize: 20 } }}\n                onChange={handleNameChange}\n                style={{ size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n              <h6 style={{ color: \"#05728f\", marginTop: \"40px\" }}>\n                {\" \"}\n                Group Description{\" \"}\n              </h6>\n              <TextField\n                className=\"group_description\"\n                fullWidth={true}\n                inputProps={{ style: { fontSize: 16 } }}\n                onChange={handleDescChange}\n                style={{ marginBottom: \"55px\", size: \"small\" }}\n              >\n                {\" \"}\n              </TextField>\n            </div>\n            <div\n              className=\"add_group_leaders\"\n              style={{ padding: \"0px 100px 0px 100px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Assign Group Leader(s) </h6>\n              <AddGroupLeader\n                participants={leaders}\n                setParticipants={setLeaders}\n                users={props.users}\n              />\n            </div>\n            <div\n              className=\"add_group_participant\"\n              style={{ padding: \"0px 100px 0px 100px\", marginTop: \"55px\" }}\n            >\n              <h6 style={{ color: \"#05728f\" }}> Invite People </h6>\n              <AddGroupParticipant\n                participants={participants}\n                setParticipants={setParticipants}\n                users={props.users}\n              />\n            </div>\n            {savingGroup ? (\n              <div\n                className=\"spinner-border text-success\"\n                role=\"status\"\n                style={{\n                  display: \"flex\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"1em\",\n                  marginBottom: \"1em\",\n                }}\n              >\n                <span className=\"sr-only\" style={{}}>\n                  Saving...\n                </span>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {saveError !== null && saveError !== \"null\" ? (\n              <div\n                className=\"\"\n                style={{ textAlign: \"center\", marginTop: \"2em\" }}\n              >\n                {saveError}\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div\n              className=\"create_new_group_button\"\n              style={{\n                display: \"flex\",\n                padding: \"0px 95px 0px 95px\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                marginBottom: \"1em\",\n                marginTop: \"2.5em\",\n              }}\n            >\n              <Button\n                variant=\"outlined\"\n                color=\"inherit\"\n                onClick={handleSaveGroup}\n                //fullWidth={true}\n                style={{\n                  backgroundColor: \"#05728f\",\n                  color: \"#fff\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  borderColor: \"#05728f\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Save\n              </Button>\n              <Button\n                autoFocus\n                onClick={handleClose}\n                variant=\"outlined\"\n                color=\"inherit\"\n                //fullWidth={true}\n                style={{\n                  color: \"#05728f\",\n                  fontWeight: \"bold\",\n                  height: \"45px\",\n                  width: \"10em\",\n                  border: \"2px solid\",\n                  borderRadius: 20,\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { db } from \"../../services/firebase\";\nimport { createTaskboard } from \"../../helpers/db\";\nimport { auth } from \"../../services/firebase\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  withStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPaperPlane,\n  faSearch,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport AnimatedModal from \"./Modal\";\nimport \"./Chat.scss\";\n\nconst useStyles = (theme) => ({\n  taskboardList: {\n    width: \"11em\",\n    marginLeft: \"1em\",\n  },\n});\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      usrGroups: new Map(),\n      boards: [],\n      groups: new Map(),\n      selectedGroupID: \"\",\n      selectedGroupName: \"\",\n      users: new Map(),\n      content: \"\",\n      readError: null,\n      writeError: null,\n      loadingChats: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.refreshGroups = this.refreshGroups.bind(this);\n    //this.myRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.setState({ readError: null, loadingChats: true });\n    //const chatArea = this.myRef.current;\n\n    try {\n      db.ref(\"users\").on(\"value\", (snapshot) => {\n        const users = new Map();\n        snapshot.forEach((snap) => {\n          users.set(snap.key, snap.val());\n        });\n\n        this.setState({ users });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n\n    const groupsList = new Map();\n    try {\n      db.ref(`users/${this.state.user.uid}/groups`).on(\"value\", (snapshot) => {\n        snapshot.forEach((snap) => {\n          groupsList.set(snap.key, snap.val());\n        });\n        this.setState({ usrGroups: groupsList });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n\n    try {\n      db.ref(`groups`).on(\"value\", (snapshot) => {\n        const groupsTemp = new Map();\n        snapshot.forEach((snap) => {\n          if (this.state.usrGroups.has(snap.key)) {\n            groupsTemp.set(snap.key, snap.val());\n          }\n        });\n        this.setState({ groups: groupsTemp });\n        if (!this.state.selectedGroupID) {\n          this.setState({\n            selectedGroupID: this.state.groups.keys().next().value,\n          });\n        }\n\n        db.ref(`groups/${this.state.selectedGroupID}/chats`).once(\n          \"value\",\n          (snapshot) => {\n            const chats = [];\n            snapshot.forEach((snap) => {\n              chats.push(snap.val());\n            });\n\n            chats.sort((a, b) => {\n              return a.timestamp - b.timestamp;\n            });\n\n            this.setState({ chats });\n          }\n        );\n        this.setState({ loadingChats: false });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Set taskboard listener when a group is selected and remove for the old taskboard\n    if (\n      this.state.selectedGroupID &&\n      this.state.selectedGroupID !== prevState.selectedGroupID\n    ) {\n      db.ref(`taskboards/${prevState.selectedGroupID}`).off(\"value\");\n      try {\n        db.ref(`taskboards/${this.state.selectedGroupID}`).on(\n          \"value\",\n          (snapshot) => {\n            const boards = [];\n            snapshot.forEach((board) => {\n              const boardVal = board.val();\n              boards.push({\n                id: board.key,\n                ...boardVal,\n              });\n            });\n            this.setState({ boards });\n          }\n        );\n      } catch (error) {\n        this.setState({ readError: error.message });\n      }\n    }\n  }\n\n  async componentWillUnmount() {\n    db.ref(\"users\").off(\"value\");\n    db.ref(\"chats\").off(\"value\");\n    db.ref(`users/${this.state.user.uid}/groups`).off(\"value\");\n    db.ref(`groups`).off(\"value\");\n  }\n\n  refreshGroups() {\n    try {\n      db.ref(`groups`).once(\"value\", (snapshot) => {\n        const groupsTemp = new Map();\n        snapshot.forEach((snap) => {\n          if (this.state.usrGroups.has(snap.key)) {\n            groupsTemp.set(snap.key, snap.val());\n          }\n        });\n        this.setState({ groups: groupsTemp });\n        if (!this.state.selectedGroupID) {\n          this.setState({\n            selectedGroupID: this.state.groups.keys().next().value,\n          });\n        }\n\n        db.ref(`groups/${this.state.selectedGroupID}/chats`).once(\n          \"value\",\n          (snapshot) => {\n            const chats = [];\n            snapshot.forEach((snap) => {\n              chats.push(snap.val());\n            });\n\n            chats.sort((a, b) => {\n              return a.timestamp - b.timestamp;\n            });\n\n            this.setState({ chats });\n          }\n        );\n        this.setState({ loadingChats: false });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n\n  handleSelectGroup = (event) => {\n    if (event.target.id) {\n      this.setState({\n        selectedGroupID: event.target.id,\n        selectedGroupName: this.state.groups.get(event.target.id).name,\n      });\n\n      db.ref(`groups/${event.target.id}/chats`).once(\"value\", (snapshot) => {\n        const chats = [];\n        snapshot.forEach((snap) => {\n          chats.push(snap.val());\n        });\n\n        chats.sort((a, b) => {\n          return a.timestamp - b.timestamp;\n        });\n\n        this.setState({ chats });\n      });\n    } else {\n      this.setState({\n        selectedGroupID: event.currentTarget.id,\n        selectedGroupName: this.state.groups.get(event.currentTarget.id).name,\n      });\n\n      db.ref(`groups/${event.currentTarget.id}/chats`).once(\n        \"value\",\n        (snapshot) => {\n          let chats = [];\n          snapshot.forEach((snap) => {\n            chats.push(snap.val());\n          });\n\n          chats.sort(function (a, b) {\n            return a.timestamp - b.timestamp;\n          });\n\n          this.setState({ chats });\n        }\n      );\n    }\n  };\n\n  handleCreateTaskboard = async () => {\n    if (!this.state.user.uid || !this.state.selectedGroupID) {\n      console.log(\"UserID or Group ID is empty\");\n      return;\n    }\n    try {\n      const boardId = await createTaskboard(\n        this.state.user.uid,\n        this.state.selectedGroupID\n      );\n      localStorage.setItem(\"groupId\", this.state.selectedGroupID);\n      this.props.history.push(`/taskboard?id=${boardId}`);\n    } catch (err) {\n      console.error(`An error occurred when creating a new taskboard`, err);\n    }\n  };\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ writeError: null });\n    //const chatArea = this.myRef.current;\n    try {\n      await db.ref(`groups/${this.state.selectedGroupID}/chats`).push({\n        content: this.state.content,\n        timestamp: Date.now(),\n        uid: this.state.user.uid,\n      });\n      this.setState({ content: \"\" });\n      //chatArea.scrollBy(0, chatArea.scrollHeight);\n    } catch (error) {\n      this.setState({ writeError: error.message });\n    }\n  }\n\n  formatTime(timestamp) {\n    const d = new Date(timestamp);\n    const time = `${d.getDate()}/${\n      d.getMonth() + 1\n    }/${d.getFullYear()} ${d.getHours()}:${d.getMinutes()}`;\n    return time;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div id=\"chat\" className=\"\">\n        <div className=\"messaging\">\n          <div className=\"inbox_msg\">\n            <div className=\"inbox_people\">\n              <div className=\"headind_srch\">\n                <div className=\"recent_heading\">\n                  <h4>Recent</h4>\n                </div>\n                <div className=\"srch_bar\">\n                  <div className=\"stylish-input-group\">\n                    <input\n                      type=\"text\"\n                      className=\"search-bar\"\n                      placeholder=\"Search\"\n                    />\n                    <span className=\"input-group-addon\">\n                      <button type=\"button\">\n                        {\" \"}\n                        <FontAwesomeIcon\n                          icon={faSearch}\n                          aria-hidden=\"true\"\n                        />{\" \"}\n                      </button>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"inbox_chat\"\n                style={{ overflowY: \"auto\", paddingBottom: \"10%\" }}\n              >\n                {Array.from(this.state.groups.values()).map((result, index) => {\n                  return (\n                    <div\n                      key={result.id}\n                      id={result.id}\n                      className={\n                        result.id === this.state.selectedGroupID\n                          ? \"chat_list active_chat\"\n                          : \"chat_list\"\n                      }\n                      onClick={this.handleSelectGroup}\n                    >\n                      <div className=\"chat_people\">\n                        <div className=\"chat_img\">\n                          {\" \"}\n                          <img\n                            src=\"https://ptetutorials.com/images/user-profile.png\"\n                            alt=\"group-no\"\n                          />{\" \"}\n                        </div>\n                        <div className=\"chat_ib\">\n                          <h5>\n                            {result.name}{\" \"}\n                            <span\n                              className=\"chat_date\"\n                              style={{ display: \"none\" }}\n                            >\n                              Dec 25\n                            </span>\n                          </h5>\n                          <p>{result.description}</p>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"fab\">\n                <AnimatedModal\n                  className=\"fab\"\n                  users={this.state.users}\n                  groups={this.state.groups}\n                  refreshGroups={this.refreshGroups}\n                />\n              </div>\n            </div>\n            <div className=\"mesgs\">\n              {/*ref={this.myRef}*/}\n\n              {/* chat area */}\n              <div className=\"msg_history\">\n                <div className=\"msg-top\">\n                  {/* Logged in as:{\" \"}\n                  <strong className=\"text-info\">{this.state.user.email}</strong> */}\n\n                  <div className=\"group_header\">\n                    <strong className=\"text-info\">\n                      {this.state.selectedGroupName || \"Group Name\"}\n                    </strong>\n                    <FormControl className={classes.taskboardList}>\n                      <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value=\"\"\n                        displayEmpty\n                      >\n                        <MenuItem value=\"\" disabled>\n                          Select a taskboard\n                        </MenuItem>\n                        {this.state.boards.map((board) => {\n                          return (\n                            <MenuItem key={board.id} value={board.id}>\n                              <Link\n                                to={`/taskboard?id=${board.id}`}\n                                onClick={() =>\n                                  localStorage.setItem(\n                                    \"groupId\",\n                                    this.state.selectedGroupID\n                                  )\n                                }\n                              >\n                                {board.name}\n                              </Link>\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  </div>\n                  <div className=\"create_subgroup_btn\">\n                    <button type=\"button\" onClick={this.handleCreateTaskboard}>\n                      <Typography>Create new taskboard</Typography>\n                    </button>\n                    <button type=\"button\">\n                      {\" \"}\n                      <FontAwesomeIcon icon={faPlus} />{\" \"}\n                    </button>\n                  </div>\n                </div>\n\n                {/* loading indicator */}\n                {this.state.loadingChats ? (\n                  <div\n                    className=\"spinner-border text-success\"\n                    role=\"status\"\n                    style={{\n                      display: \"flex\",\n                      marginLeft: \"auto\",\n                      marginRight: \"auto\",\n                      marginTop: \"1em\",\n                      marginBottom: \"1em\",\n                    }}\n                  >\n                    <span className=\"sr-only\" style={{}}>\n                      Loading...\n                    </span>\n                  </div>\n                ) : (\n                  <div className=\"msg-mid\">\n                    {this.state.chats.map((chat) => {\n                      return (\n                        <div\n                          key={chat.timestamp}\n                          className={\n                            this.state.user.uid === chat.uid\n                              ? \"outgoing_msg\"\n                              : \"incoming_msg\"\n                          }\n                        >\n                          {this.state.user.uid === chat.uid ? (\n                            \"\"\n                          ) : (\n                            <div className=\"incoming_msg_img\">\n                              {\" \"}\n                              <img\n                                src=\"https://ptetutorials.com/images/user-profile.png\"\n                                alt=\"sunil\"\n                              />{\" \"}\n                            </div>\n                          )}\n                          {this.state.user.uid === chat.uid ? (\n                            <div className=\"sent_msg\">\n                              <p>{chat.content}</p>\n                              <span className=\"time_date\">\n                                {this.formatTime(chat.timestamp)}\n                              </span>\n                            </div>\n                          ) : (\n                            <div className=\"received_msg\">\n                              <div className=\"received_withd_msg\">\n                                <div className=\"name-header\">\n                                  {this.state.users.has(chat.uid)\n                                    ? this.state.users.get(chat.uid).name ===\n                                      undefined\n                                      ? this.state.users.get(chat.uid).email\n                                      : this.state.users.get(chat.uid).name\n                                    : \"Anonymous\"}\n                                </div>\n                                <p>{chat.content}</p>\n                                <span className=\"time_date\">\n                                  {this.formatTime(chat.timestamp)}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n\n                <form\n                  onKeyDown={this._handleKeyDown}\n                  onSubmit={this.handleSubmit}\n                  className=\"type_msg\"\n                >\n                  <textarea\n                    type=\"text\"\n                    placeholder=\"Type a message\"\n                    className=\"form-control write_msg\"\n                    name=\"content\"\n                    onChange={this.handleChange}\n                    value={this.state.content}\n                  ></textarea>\n                  {this.state.error ? (\n                    <p className=\"text-danger\">{this.state.error}</p>\n                  ) : null}\n                  <button className=\"msg_send_btn\" type=\"submit\">\n                    <FontAwesomeIcon icon={faPaperPlane} aria-hidden=\"true\" />\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(useStyles)(Chat));\n","import React from \"react\";\nimport \"./TaskDescription.scss\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { updateTask } from \"../../../helpers/db\";\n\nconst TaskDescription = ({ columnId, taskDetails }) => {\n  const [newDescription, setNewDescription] = React.useState(\"\");\n  const [isEditing, setIsEditing] = React.useState(\n    taskDetails.description.length === 0\n  );\n\n  const submitNewDescription = async () => {\n    if (taskDetails.description === newDescription) {\n      stopEditing();\n      return;\n    }\n    try {\n      await updateTask(columnId, taskDetails.id, {\n        description: newDescription,\n      });\n      stopEditing();\n    } catch (err) {\n      console.log(\"an error occured when saving new description\", err);\n    }\n  };\n\n  const handleStartEditing = () => {\n    setNewDescription(taskDetails.description);\n    setIsEditing(true);\n  };\n\n  const handleChangeDescription = (e) => {\n    setNewDescription(e.target.value);\n  };\n\n  const stopEditing = () => {\n    setNewDescription(\"\");\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"task-description\">\n      <div className=\"title-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          Description\n        </Typography>\n        {!isEditing && <Button onClick={handleStartEditing}>Edit</Button>}\n      </div>\n      {isEditing ? (\n        <div className=\"editing-lockup\">\n          <textarea\n            label=\"Description\"\n            value={newDescription}\n            onChange={handleChangeDescription}\n            placeholder=\"Add a more detailed description\"\n            rows={5}\n          />\n          <div className=\"button-lockup\">\n            <Button onClick={submitNewDescription}>Save</Button>\n            <Button onClick={stopEditing}>\n              <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <Typography>\n          {taskDetails.description || \"Add a more detailed description... \"}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default TaskDescription;\n","import React from \"react\";\nimport \"./NewTaskComment.scss\";\nimport { Button } from \"@material-ui/core\";\nimport { createComment } from \"../../../helpers/db\";\nimport { auth } from \"../../../services/firebase\";\n\nconst NewTaskComment = ({ taskId }) => {\n  const [text, setText] = React.useState(\"\");\n\n  const handleChangeComment = (e) => {\n    setText(e.target.value);\n  };\n  const submitComment = async () => {\n    let userId = auth().currentUser.uid;\n    try {\n      await createComment(taskId, {\n        text,\n        createdBy: userId,\n        lastUpdatedTimestamp: Date.now(),\n      });\n      setText(\"\");\n    } catch (err) {\n      console.log(\"An error occurred when submitting the comment\");\n    }\n  };\n  return (\n    <div className=\"new-task-comment-lockup\">\n      <textarea\n        label=\"Description\"\n        value={text}\n        onChange={handleChangeComment}\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n        rows={2}\n      />\n      {text.length > 0 && <Button onClick={submitComment}>Save</Button>}\n    </div>\n  );\n};\n\nexport default NewTaskComment;\n","import React, { useEffect } from \"react\";\nimport \"./TaskActivity.scss\";\nimport { Typography } from \"@material-ui/core\";\nimport NewTaskComment from \"../NewTaskComment/NewTaskComment\";\nimport { db } from \"../../../services/firebase\";\nimport { getUserById, deleteComment } from \"../../../helpers/db\";\nimport moment from \"moment\";\n\nconst TaskActivity = ({ columnId, taskDetails }) => {\n  const [comments, setComments] = React.useState([]);\n  const [usernameMap, setUsernameMap] = React.useState({});\n\n  useEffect(() => {\n    try {\n      const columns = db.ref(`taskComments/${taskDetails.id}`);\n      columns.on(\"value\", async (snapshot) => {\n        const tmpComments = [];\n        snapshot.forEach((comment) => {\n          const val = comment.val();\n          if (val.deletedTimestamp) return; // Don't display deleted columns\n          // TODO: Unshift isnt the best to use here for displaying tasks with most recent first, can sort the list (potentially from firebase) or something else but works for now\n          tmpComments.unshift({\n            id: comment.key,\n            ...val,\n          });\n        });\n\n        // TODO: Look at caching names\n        const tmpUsernameMap = {};\n        await Promise.all(\n          tmpComments.map(async (comment) => {\n            const user = await getUserById(comment.createdBy);\n            tmpUsernameMap[comment.createdBy] = user.val().name;\n          })\n        );\n        setUsernameMap(tmpUsernameMap);\n        setComments(tmpComments);\n      });\n    } catch (err) {\n      alert(`An error occurred when getting comments... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`taskComments/${taskDetails.id}`).off(\"value\");\n  }, [taskDetails.id]);\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      await deleteComment(taskDetails.id, commentId);\n    } catch (err) {\n      console.log(\"An error occurred when deleting comment\", err);\n    }\n  };\n\n  return (\n    <div className=\"task-activity\">\n      <div className=\"title-lockup\">\n        <Typography variant=\"h5\" component=\"h2\">\n          Activity:\n        </Typography>\n      </div>\n      <NewTaskComment taskId={taskDetails.id} />\n      <ul>\n        {comments.map((comment) => {\n          return (\n            <li key={comment.id}>\n              <div key={comment.id} className=\"comment\">\n                <Typography className=\"comment-username\">\n                  {usernameMap[comment.createdBy]}\n                </Typography>\n                <p className=\"comment-timestamp\">\n                  {moment\n                    .utc(parseInt(comment.lastUpdatedTimestamp))\n                    .fromNow(true)}\n                </p>\n                <Typography className=\"comment-text\">{comment.text}</Typography>\n              </div>\n              <div className=\"button-lockup\">\n                <p onClick={() => handleDeleteComment(comment.id)}>Delete</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TaskActivity;\n","import React from \"react\";\nimport \"./TaskDelete.scss\";\nimport { deleteTask } from \"../../../helpers/db\";\nimport { Button } from \"@material-ui/core\";\n\nconst TaskDelete = ({ columnId, taskDetails, close }) => {\n  const handleDeleteTask = async () => {\n    try {\n      await deleteTask(columnId, taskDetails.id);\n      console.log(\"Delete pressed\" + columnId + \" \" + taskDetails.id);\n      close();\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`); // TODO: Dont use alerts for error messages..\n    }\n  };\n\n  return (\n    <div className=\"task-delete\">\n      <div className=\"button-lockup\">\n        <Button onClick={() => handleDeleteTask()}>Delete</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDelete;\n","import React from \"react\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./TaskDetails.scss\";\nimport TaskDescription from \"../TaskDescription/TaskDescription\";\nimport TaskActivity from \"../TaskActivity/TaskActivity\";\nimport { updateTask } from \"../../../helpers/db\";\nimport TaskDelete from \"../TaskDelete/TaskDelete\";\n\nconst TaskDetails = ({ columnId, taskDetails, close }) => {\n  const [newTaskName, setNewTaskName] = React.useState(\"\");\n  const [isEditingTaskName, setIsEditingTaskName] = React.useState(false);\n  const submitNewTaskName = async () => {\n    if (taskDetails.name === newTaskName) {\n      stopEditing();\n      return;\n    }\n    try {\n      await updateTask(columnId, taskDetails.id, {\n        name: newTaskName,\n      });\n      stopEditing();\n    } catch (err) {\n      console.log(\"err is \", err);\n    }\n  };\n\n  const handleStartEditing = () => {\n    setNewTaskName(taskDetails.name);\n    setIsEditingTaskName(true);\n  };\n\n  const handleChangeName = (e) => {\n    setNewTaskName(e.target.value);\n  };\n  const stopEditing = () => {\n    setNewTaskName(\"\");\n    setIsEditingTaskName(false);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      return submitNewTaskName();\n    }\n  };\n\n  return (\n    <div className=\"task-details-lockup\">\n      <div className=\"header\">\n        {isEditingTaskName ? (\n          <input\n            onChange={handleChangeName}\n            onBlur={submitNewTaskName}\n            onKeyPress={handleKeyPress}\n            value={newTaskName}\n            placeholder=\"Enter a title for this card...\"\n          />\n        ) : (\n          <Typography variant=\"h4\" component=\"h1\" onClick={handleStartEditing}>\n            {taskDetails.name}\n          </Typography>\n        )}\n        <Button onClick={close}>\n          <FontAwesomeIcon icon={faTimes} size=\"1x\" />\n        </Button>\n      </div>\n      <div className=\"grid-lockup\">\n        <div className=\"main-col\">\n          <div className=\"task-detail\"></div>\n          <TaskDescription columnId={columnId} taskDetails={taskDetails} />\n          <TaskActivity columnId={columnId} taskDetails={taskDetails} />\n        </div>\n        <div className=\"sidebar\">\n          <TaskDelete\n            columnId={columnId}\n            taskDetails={taskDetails}\n            close={close}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDetails;\n","import React, { useEffect } from \"react\";\nimport \"./Modal.scss\";\n\nconst Modal = ({ closeModal, children }) => {\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Used to close modals on Escape\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [closeModal]);\n\n  return (\n    <div>\n      <div className=\"modalOverlay\" />\n      <div className=\"modalContent\">{children}</div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\nimport \"./TaskColumn.scss\";\nimport { Button, Card, CardContent, Typography } from \"@material-ui/core\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  deleteTaskColumn,\n  createTask,\n  updateTaskColumn,\n} from \"../../../helpers/db\";\nimport { db } from \"../../../services/firebase\";\nimport TaskDetails from \"../TaskDetails/TaskDetails\";\nimport Modal from \"../Modal/Modal\";\n\nconst TaskColumn = ({ boardId, column, user }) => {\n  const [tasks, setTasks] = React.useState(new Map());\n  const [newTask, setNewTask] = React.useState(\"\");\n  const [selectedTaskId, setSelectedTaskId] = React.useState(\"\");\n\n  useEffect(() => {\n    try {\n      const tasks = db.ref(`tasks/${column.id}`);\n      tasks.on(\"value\", (snapshot) => {\n        const tmpTasks = new Map();\n        snapshot.forEach((col) => {\n          const val = col.val();\n          if (val.deletedTimestamp) return; // Don't display deleted tasks\n          tmpTasks.set(col.key, {\n            id: col.key,\n            ...val,\n          });\n        });\n        setTasks(tmpTasks);\n      });\n    } catch (err) {\n      alert(`An error occurred when reading data... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`tasks/${column.id}`).off(\"value\");\n  }, [column.id]);\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteTaskColumn(boardId, column.id);\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`); // TODO: Dont use alerts for error messages..\n    }\n  };\n\n  const handleCreateTask = async (e) => {\n    e.preventDefault();\n    if (!newTask) return; // Dont want to add tasks with empty names\n    const task = {\n      name: newTask,\n      description: \"\",\n      createdTimeStamp: Date.now(),\n      createdBy: user.uid,\n      deletedTimestamp: null,\n    };\n\n    try {\n      await createTask(column.id, task);\n      setNewTask(\"\");\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`);\n    }\n  };\n\n  const handleMoveTask = async (targetListId, sourceListId, taskId) => {\n    try {\n      await updateTaskColumn(targetListId, sourceListId, taskId);\n    } catch (err) {\n      alert(`An error occurred when deleting column ${err.message}`);\n    }\n  };\n\n  const handleNewTaskChange = (e) => {\n    setNewTask(e.target.value);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTaskId(\"\");\n  };\n\n  const handleDragStart = (e) => {\n    e.dataTransfer.setData(\"text/plain\", e.target.id);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n\n    const sourceId = e.dataTransfer.getData(\"text/plain\");\n    const sourceEl = document.getElementById(sourceId);\n    const targetEl = document.getElementById(e.target.id);\n    if (!targetEl || !sourceEl) {\n      return;\n    }\n\n    // TODO: Fix this\n    const sourceTaskList = sourceEl.closest(\"div\");\n    const sourceTaskListId = sourceTaskList.id;\n\n    const targetTaskList = targetEl.closest(\"div\");\n    const targetTaskListId = targetTaskList.id;\n\n    if (sourceTaskListId !== targetTaskListId) {\n      handleMoveTask(targetTaskListId, sourceTaskListId, sourceId);\n    } else {\n      //TODO: Fix later\n    }\n  };\n\n  return (\n    <div className=\"task-column-container\">\n      <div className=\"task-column-lockup\">\n        <div className=\"header-lockup\">\n          <Typography variant=\"h5\" component=\"h2\">\n            {column.name}\n          </Typography>\n          <FontAwesomeIcon\n            onClick={handleDeleteColumn}\n            icon={faTimes}\n            size=\"1x\"\n          />\n        </div>\n        <div\n          id={column.id}\n          className=\"task-list drop-zone\"\n          onDrop={(e) => handleDrop(e)}\n          onDragStart={(e) => handleDragStart(e)}\n          onDragOver={(e) => handleDragOver(e)}\n        >\n          <ul>\n            {Array.from(tasks.values()).map((task) => {\n              return (\n                <li\n                  key={task.id}\n                  id={task.id}\n                  draggable=\"true\"\n                  onClick={(e) => setSelectedTaskId(task.id)}\n                >\n                  <Card variant=\"outlined\">\n                    <CardContent className=\"dropzone\" id={task.id}>\n                      <Typography color=\"textPrimary\" gutterBottom>\n                        {task.name}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </li>\n              );\n            })}\n            <li className=\"new-task-lockup\">\n              <div>\n                <form onSubmit={handleCreateTask}>\n                  <input\n                    onChange={handleNewTaskChange}\n                    value={newTask}\n                    placeholder=\"Enter a title for this card...\"\n                  />\n                  <Button type=\"submit\">Add Task</Button>\n                </form>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n      {!!selectedTaskId && tasks.get(selectedTaskId) && (\n        <Modal closeModal={handleCloseModal}>\n          <TaskDetails\n            columnId={column.id}\n            taskDetails={tasks.get(selectedTaskId)}\n            close={handleCloseModal}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default TaskColumn;\n","import React from \"react\";\nimport \"./NewTaskColumn.scss\";\nimport { faTimes, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { createTaskColumn } from \"../../../helpers/db\";\n\nconst NewTaskColumn = ({ boardId }) => {\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const handleSetIsEditing = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleCancelEditing = () => {\n    setIsEditing(false);\n    setName(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await createTaskColumn(boardId, name);\n      handleCancelEditing();\n    } catch (err) {\n      alert(`An error occurred when creating a new column ${err.message}`);\n    }\n  };\n\n  return (\n    <div id=\"new-task-column-container\">\n      <form onSubmit={handleSubmit}>\n        {isEditing ? (\n          <div id=\"add-column-selected\">\n            <input\n              onChange={handleNameChange}\n              value={name}\n              placeholder=\"Enter list name...\"\n            />\n            <div id=\"button-lockup\">\n              <Button type=\"submit\">Add List</Button>\n              <Button onClick={handleCancelEditing}>\n                <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div id=\"add-column\">\n            <button onClick={handleSetIsEditing}>\n              <FontAwesomeIcon icon={faPlus} size=\"1x\" />\n              <Typography component=\"p\">Add another list</Typography>\n            </button>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default NewTaskColumn;\n","import React, { useEffect } from \"react\";\nimport \"./TaskboardNavbar.scss\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport {\n  faEdit,\n  faCheckCircle,\n  faTimesCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { updateTaskboard } from \"../../../helpers/db\";\n\nconst TaskboardNavbar = ({ groupId, taskboard }) => {\n  const [isEditingTitle, setIsEditingTitle] = React.useState(false);\n  const [newTitleText, setNewTitleText] = React.useState(\"\");\n  const [titleText, setTitleText] = React.useState(\"\");\n\n  useEffect(() => {\n    setTitleText(taskboard.name);\n  }, [taskboard.name]);\n\n  const handleTitleChange = (e) => {\n    setNewTitleText(e.target.value);\n  };\n\n  const saveNewTitle = async (e) => {\n    e.preventDefault();\n    if (!taskboard.id) return;\n    try {\n      await updateTaskboard(groupId, taskboard.id, {\n        name: newTitleText,\n      });\n      setTitleText(newTitleText);\n      stopEditing();\n    } catch (err) {\n      console.log(\"An error occurred when saving new title\", err);\n    }\n  };\n  const startEditing = () => {\n    setNewTitleText(titleText);\n    setIsEditingTitle(true);\n  };\n  const stopEditing = () => {\n    setIsEditingTitle(false);\n  };\n\n  return (\n    <div className=\"taskboard-navbar-lockup\">\n      {isEditingTitle ? (\n        <form onSubmit={saveNewTitle}>\n          <input onChange={handleTitleChange} value={newTitleText} />\n\n          <div className=\"button-lockup\">\n            <Button type=\"submit\">\n              <FontAwesomeIcon icon={faCheckCircle} size=\"1x\" />\n            </Button>\n            <Button onClick={stopEditing}>\n              <FontAwesomeIcon icon={faTimesCircle} size=\"1x\" />\n            </Button>\n          </div>\n        </form>\n      ) : (\n        <>\n          <Typography variant=\"h5\">{titleText}</Typography>\n          <div className=\"button-lockup\">\n            <Button onClick={startEditing}>\n              <FontAwesomeIcon icon={faEdit} size=\"1x\" />\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TaskboardNavbar;\n","export const readUrlQueryParam = (key) => {\n  const params = new URLSearchParams(window.location.search);\n  return params.get(key);\n};\n\nexport const isEmptyObj = (obj) => {\n  return Object.keys(obj).length === 0;\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Taskboard.scss\";\nimport TaskColumn from \"../Presentational/TaskColumn/TaskColumn\";\nimport NewTaskColumn from \"../Presentational/NewTaskColumn/NewTaskColumn\";\nimport TaskboardNavbar from \"../Presentational/TaskboardNavbar/TaskboardNavbar\";\nimport { db } from \"../../services/firebase\";\nimport { readUrlQueryParam, isEmptyObj } from \"../../helpers/utils\";\nimport { Typography } from \"@material-ui/core\";\nimport { auth } from \"../../services/firebase\";\n\nconst Taskboard = () => {\n  const [taskboardData, setTaskboardData] = React.useState({});\n  const [isBoardLoaded, setIsBoardLoaded] = React.useState(false);\n  const [columns, setColumns] = React.useState([]);\n  const [readError, setReadError] = React.useState(false); // TODO: use this\n  const [user, setUser] = React.useState(null);\n  const groupId = localStorage.getItem(\"groupId\");\n\n  useEffect(() => {\n    const boardId = readUrlQueryParam(\"id\");\n    const getTaskboardData = async () => {\n      try {\n        // Note, because we use once here we do not have real time updates to taskboard details atm\n        const result = await db\n          .ref(`/taskboards/${groupId}/${boardId}`)\n          .once(\"value\");\n\n        if (!result.val()) {\n          throw new Error(\"Taskboard does not exist\");\n        }\n        setTaskboardData({\n          id: result.key,\n          ...result.val(),\n        });\n      } catch (err) {\n        console.log(\"An error occurred when getting taskboard data\", err);\n        setTaskboardData({});\n      }\n      setIsBoardLoaded(true);\n    };\n    getTaskboardData();\n  }, [groupId]);\n\n  useEffect(() => {\n    if (isEmptyObj(taskboardData)) return;\n    setUser(auth().currentUser);\n    try {\n      const columns = db.ref(`columns/${taskboardData.id}`);\n      columns.on(\"value\", (snapshot) => {\n        const tmpCols = [];\n        snapshot.forEach((col) => {\n          const val = col.val();\n          if (val.deletedTimestamp) return; // Don't display deleted columns\n          tmpCols.push({\n            id: col.key,\n            ...val,\n          });\n        });\n        setColumns(tmpCols);\n        setReadError(false);\n      });\n    } catch (err) {\n      setReadError(true);\n      console.error(`An error occurred when reading data... ${err.message}`); // TODO: Dont use an alert, do this properly...\n    }\n    return () => db.ref(`columns/${taskboardData.id}`).off(\"value\");\n  }, [taskboardData]);\n\n  console.log(\"Readerror is \", readError); // Just keeping this here until we look at using readError\n  if (isBoardLoaded && isEmptyObj(taskboardData)) {\n    return (\n      <div className=\"taskboard-error-lockup\">\n        <Typography variant=\"h5\">Taskboard does not exist</Typography>\n        <Link to=\"chat\">Go back to Home Page</Link>\n      </div>\n    );\n  }\n  return (\n    <div id=\"taskboard-container\">\n      <TaskboardNavbar groupId={groupId} taskboard={taskboardData} />\n      <div className=\"taskboard-canvas\">\n        {isBoardLoaded ? (\n          <div className=\"taskboard\">\n            {columns.map((column) => {\n              return (\n                <TaskColumn\n                  key={column.id}\n                  boardId={taskboardData.id}\n                  column={column}\n                  user={user}\n                  onDragOver={(e) => e.preventDefault()}\n                />\n              );\n            })}\n            <NewTaskColumn boardId={taskboardData.id} />\n          </div>\n        ) : (\n          <div className=\"loading-lockup\">\n            <div className=\"spinner-border text-success\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Taskboard;\n","import React, { Component } from \"react\";\nimport \"./Profile.scss\";\n\nimport { db } from \"../../services/firebase\";\nimport { auth } from \"../../services/firebase\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      email: null,\n      username: null,\n      readError: null,\n      writeError: null,\n    };\n    //this.handleChange = this.handleChange.bind(this);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ readError: null });\n\n    try {\n      db.ref(`users/${this.state.user.uid}`).once(\"value\", (snapshot) => {\n        this.setState({\n          email: snapshot.val().email,\n          username: snapshot.val().name ? snapshot.val().name : null,\n        });\n      });\n    } catch (error) {\n      this.setState({ readError: error.message });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"profile\">\n        <div className=\"content-wrap\">\n          <div className=\"name-icon\">D</div>\n          <h1>\n            Welcome,{\" \"}\n            {this.state.username != null\n              ? this.state.username\n              : this.state.email}\n          </h1>\n          <h2>Manage your information to make Chat App work better for you</h2>\n          <div className=\"card\">\n            <div className=\"inner-heading\">Profile</div>\n            <div className=\"info\">\n              <h3>PHOTO</h3>\n              <div className=\"content\">\n                <h4>Add a photo to personalise your account</h4>\n              </div>\n              <div className=\"icon\">\n                D\n                <div className=\"photo\">\n                  <svg\n                    data-v-d223ba98=\"\"\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"camera\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                    className=\"svg-inline--fa fa-camera fa-w-16\"\n                    style={{ fontSize: \"17px\" }}\n                  >\n                    <path\n                      data-v-d223ba98=\"\"\n                      fill=\"currentColor\"\n                      d=\"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"\n                      className=\"\"\n                    ></path>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>EMAIL</h3>\n              <div className=\"content\">{this.state.email}</div>\n              <div className=\"popup\">\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\">\n              <h3>USERNAME</h3>\n              <div className=\"content\">\n                {this.state.username != null\n                  ? this.state.username\n                  : this.state.email}\n              </div>\n              <div className=\"popup\">\n                <svg\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"pen\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 512 512\"\n                  className=\"svg-inline--fa fa-pen fa-w-16\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n            <div className=\"info\" style={{ borderBottom: \"none\" }}>\n              <h3>PASSWORD</h3>\n              <div className=\"content\" type=\"password\">\n                ************\n              </div>\n              <div className=\"popup\">\n                <svg\n                  style={{ width: \"20px\", fontSize: \"20px\", height: \"20px\" }}\n                  data-v-d223ba98=\"\"\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"arrow-right\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 448 512\"\n                  className=\"svg-inline--fa fa-arrow-right fa-w-14\"\n                >\n                  <path\n                    data-v-d223ba98=\"\"\n                    fill=\"currentColor\"\n                    d=\"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"\n                    className=\"\"\n                  ></path>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Profile;\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { auth } from \"./services/firebase\";\n\nimport Navbar from \"./Components/Navbar\";\n// import Home from \"./Components/Pages/Home\";\n// import Register from \"./Components/Pages/Register\";\nimport Login from \"./Components/Pages/Login\";\nimport Chat from \"./Components/Pages/Chat\";\nimport Taskboard from \"./Components/Pages/Taskboard\";\nimport Profile from \"./Components/Pages/Profile\";\nimport \"./App.scss\";\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/chat\" />\n        )\n      }\n    />\n  );\n}\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false,\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Navbar authenticated={this.state.authenticated} />\n          <Switch>\n            <PrivateRoute\n              path=\"/chat\"\n              authenticated={this.state.authenticated}\n              component={Chat}\n            />\n            <PublicRoute\n              path=\"/login\"\n              authenticated={this.state.authenticated}\n              component={Login}\n            />\n            <PrivateRoute\n              path=\"/profile\"\n              authenticated={this.state.authenticated}\n              component={Profile}\n            />\n            <PrivateRoute\n              path=\"/taskboard\"\n              authenticated={this.state.authenticated}\n              component={Taskboard}\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"./variables.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.b5d56f8d.png\";"],"sourceRoot":""}